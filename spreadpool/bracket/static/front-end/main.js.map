{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.store.ts","webpack:///./src/app/base/base.component.css","webpack:///./src/app/base/base.component.html","webpack:///./src/app/base/base.component.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/player.service.ts","webpack:///./src/app/core/user.actions.ts","webpack:///./src/app/core/user.reducer.ts","webpack:///./src/app/core/user.service.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/logout/logout.component.css","webpack:///./src/app/logout/logout.component.html","webpack:///./src/app/logout/logout.component.ts","webpack:///./src/app/profile-details/profile-details.component.css","webpack:///./src/app/profile-details/profile-details.component.html","webpack:///./src/app/profile-details/profile-details.component.ts","webpack:///./src/app/profile-edit/profile-edit.component.css","webpack:///./src/app/profile-edit/profile-edit.component.html","webpack:///./src/app/profile-edit/profile-edit.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/roster/roster.component.css","webpack:///./src/app/roster/roster.component.html","webpack:///./src/app/roster/roster.component.ts","webpack:///./src/app/user-resolver.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { UserResolver } from './user-resolver';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RosterComponent } from './roster/roster.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { ProfileDetailsComponent } from './profile-details/profile-details.component';\r\nimport { ProfileEditComponent } from './profile-edit/profile-edit.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { BaseComponent } from './base/base.component';\r\n\r\nconst routes: Routes = [\r\n\t{ path: '', redirectTo: '/home', pathMatch: 'full' },\r\n  // { path: '',\r\n \t// \tcomponent: BaseComponent, \r\n \t// \tresolve: { loggedInUser: UserResolver },\r\n \t// \tchildren: [\r\n \t// \t\t{ path: 'home', component: HomeComponent },\r\n \t// \t\t{ path: 'profile', component: ProfileComponent },\r\n \t// \t] \r\n \t// },\r\n  { path: 'home',\r\n    component: HomeComponent,\r\n    resolve: { loggedInUser: UserResolver } },\r\n  { path: 'profile', component: ProfileComponent },\r\n\t{ path: 'logout', \r\n      component: LogoutComponent,\r\n      resolve: {url: 'externalUrlRedirectResolver'},\r\n      data: {externalUrl: '/logout/'}},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [\r\n  \t{ // to be able to reference an external url within Routes\r\n      provide: 'externalUrlRedirectResolver',\r\n      useValue: (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) =>\r\n      { window.location.href = (route.data as any).externalUrl; }\r\n    },\r\n    UserResolver,\r\n  ],\r\n})\r\n\r\nexport class AppRoutingModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--app.component.html-->\\r\\n\\r\\n<!-- Navigation Menu for main page -->\\r\\n<h2> Spreadpool Links </h2>\\r\\n<br>\\r\\n<a [routerLink]=\\\"['/home']\\\">Home</a>\\r\\n<a [routerLink]=\\\"['/profile']\\\">My Teams</a>\\r\\n<button (click)=\\\"logout()\\\">Log Out</button>\\r\\n\\r\\n<router-outlet>\\r\\n<!-- Displays what is specified in path: '' to start, then whatever is clicked above -->\\r\\n</router-outlet>\"","import { Component, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from './core/user.service';\r\nimport { IUserData } from './shared/interfaces';\r\n\r\nimport { Store } from 'redux';\r\nimport { AppStore } from './app.store';\r\nimport { AppState } from './app.state';\r\nimport * as UserActions from './core/user.actions';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'front-end';\r\n  token_id : object;\r\n  currentUser : IUserData;\r\n  \r\n  constructor(\r\n    private router: Router, \r\n    private _userService: UserService, \r\n    // @Inject(AppStore) private store: Store<AppState>\r\n    ) {\r\n      // store.subscribe(() => this.readState());\r\n      // this.readState();\r\n  };\r\n\r\n  ngOnInit() {\r\n    // Check to see if app is being intiatiated from Django shell or directly from terminal\r\n    // By looking at localStorage for 'tokenid' that Django passes\r\n    if (window.localStorage.getItem('tokenid')) {\r\n    \t// Get token passed from Django view to localStorage and pass to UserService\r\n      // refresh UserService token for subsequent use, removeItem from localStorage\r\n      this.token_id = JSON.parse(window.localStorage.getItem('tokenid'));\r\n      this._userService.id = this.token_id['id'];\r\n      this._userService.token = this.token_id['token'];\r\n      this._userService.refreshToken();\r\n      window.localStorage.clear();\r\n    }\r\n      // Login via _userService to establish token with preset values *** (for testing purposes in Angular only)\r\n    else {\r\n      this._userService.id = 11;\r\n      this._userService.login({'email': 'jlester@cubs.com', 'password': 'cubbies1'});\r\n    }\r\n\r\n  }\r\n\r\n  // Invoke logout() method on userService and re-direct user to \"/logout/\"\r\n  logout() {\r\n    this._userService.logout();\r\n    this.router.navigate(['/logout']);\r\n  }\r\n\r\n  // These are Redux store functions\r\n  // readState() {\r\n  //   const state: AppState = this.store.getState() as AppState;\r\n  //   this.currentUser = state.currentUser;\r\n  // }\r\n\r\n  // setCurrentUser(user: IUserData) {\r\n  //   this.store.dispatch(UserActions.setCurrentUser(user))\r\n  // }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { CoreModule } from './core/core.module';\r\n\r\nimport { appStoreProviders } from './app.store';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RosterComponent } from './roster/roster.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { ProfileDetailsComponent } from './profile-details/profile-details.component';\r\nimport { ProfileEditComponent } from './profile-edit/profile-edit.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { BaseComponent } from './base/base.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    RosterComponent,\r\n    ProfileComponent,\r\n    ProfileDetailsComponent,\r\n    ProfileEditComponent,\r\n    LogoutComponent,\r\n    BaseComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    CoreModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  providers: [ appStoreProviders ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// .src/app/app.store.ts\r\nimport { InjectionToken } from '@angular/core';\r\n\r\nimport {\r\n  createStore,\r\n  Store,\r\n  compose,\r\n  StoreEnhancer\r\n} from 'redux';\r\nimport { AppState } from './app.state';\r\nimport { UserReducer as reducer } from './core/user.reducer';\r\n\r\nexport const AppStore = new InjectionToken('App.store');\r\n\r\nconst devtools: StoreEnhancer<AppState> =\r\n  window['devToolsExtension'] ?\r\n  window['devToolsExtension']() : f => f;\r\n\r\nexport function createAppStore(): Store<AppState> {\r\n  return createStore<AppState, any, any, any>(\r\n    reducer,\r\n    compose(devtools)\r\n  );\r\n}\r\n\r\nexport const appStoreProviders = [\r\n   { provide: AppStore, useFactory: createAppStore }\r\n];","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jhc2UvYmFzZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--base.component.html-->\\r\\n\\r\\n<!-- Navigation Menu for main page -->\\r\\n<h2> Spreadpool Links </h2>\\r\\n<br>\\r\\n<a [routerLink]=\\\"['/home']\\\">Home</a>\\r\\n<a [routerLink]=\\\"['/profile']\\\">My Teams</a>\\r\\n<button (click)=\\\"logout()\\\">Log Out</button>\\r\\n\\r\\n<router-outlet>\\r\\n<!-- Displays what is specified in pathmatch = 'full' to start, then whatever is clicked above -->\\r\\n</router-outlet>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../core/user.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IUserData } from '../shared/interfaces';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-base',\r\n  templateUrl: './base.component.html',\r\n  styleUrls: ['./base.component.css']\r\n})\r\n\r\nexport class BaseComponent implements OnInit {\r\n\t\r\n\tconstructor(private router: Router, private _userService: UserService, private route: ActivatedRoute) { }\r\n  \r\n\tngOnInit() {\r\n\t\tthis._userService.loggedInUser = this.route.snapshot.data.loggedInUser;\r\n\t}\r\n\r\n\t// Invoke logout() method on userService and re-direct user to \"/logout/\"\r\n\tlogout() {\r\n\t\tthis._userService.logout();\r\n\t\tthis.router.navigate(['/logout']);\r\n\t}\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { UserService } from './user.service'; // Service that will interact with Django jwt to authenticate user via token\r\nimport { PlayerService } from './player.service'; // Service to retrieve Django backend users api\r\n\r\n@NgModule({\r\n    imports: [  ],\r\n    providers: [\r\n    \tPlayerService,\r\n    \tUserService,\r\n    ]\r\n})\r\nexport class CoreModule { }","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { UserService } from './user.service';\nimport { IUserData } from '../shared/interfaces';\n\n//userUrl is base url for users table end point\nconst userUrl = '/api/users/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerService {\n\n  constructor(private http: HttpClient, private _userService: UserService) { }\n\n  //method to retrieve entire user list\n  getList() {\n\t\treturn this.http.get<IUserData[]>(userUrl)\n\t}\n\n  //method to retrieve individual user\n  getPlayer(id) {\n    return this.http.get<IUserData>(userUrl + id + '/')\n  }\n\n  deletePlayer(id, token) {\n    return this.http.delete<IUserData>(userUrl + id + '/', this.getHttpOptions())\n  }\n\n  updatePlayer(player, token) {\n    return this.http.patch<IUserData>(userUrl + player.id + '/', JSON.stringify(player), this.getHttpOptions())\n  }\n\n   // helper function to build the HTTP headers\n  getHttpOptions() {\n    return {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'JWT ' + this._userService.token,\n      })\n    };\n  }\n\n}\n","// user.actions.ts\r\n\r\nimport { Action, ActionCreator } from 'redux';\r\nimport { IUserData } from '../shared/interfaces';\r\n\r\n/**\r\n * UserActions specifies action creators concerning Users\r\n */\r\nexport const SET_CURRENT_USER = '[User] Set Current';\r\nexport interface SetCurrentUserAction extends Action {\r\n  user: IUserData;\r\n}\r\nexport const setCurrentUser: ActionCreator<SetCurrentUserAction> =\r\n  (user) => ({\r\n    type: SET_CURRENT_USER,\r\n    user: user\r\n  });","// users.reducer.ts\r\n\r\nimport { Reducer, Action } from 'redux';\r\nimport { createSelector } from 'reselect';\r\nimport { IUserData } from '../shared/interfaces';\r\nimport * as UserActions from './user.actions';\r\nimport { AppState } from '../app.state';\r\n\r\nconst initialState: AppState = { currentUser: null };\r\n\r\nexport const UserReducer: Reducer<AppState> =\r\n  (state: AppState = initialState, action: Action): AppState => {\r\n  switch (action.type) {\r\n    case UserActions.SET_CURRENT_USER:\r\n    const user: IUserData = (<UserActions.SetCurrentUserAction>action).user;\r\n      return {\r\n        currentUser: user\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\n\nimport { PlayerService } from './player.service';\nimport { IUserData } from '../shared/interfaces';\n\n//userUrl is base url for users table end point\nconst userUrl = '/api/users/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n\t// http options used for making API calls\n\tprivate httpOptions: any;\n\n\t// the actual JWT token\n\tpublic token: string;\n\n\t// the token expiration date\n\tpublic token_expires: Date;\n\n\t// the authenticated/logged in user variables\n  public id: number;\n\tpublic username: string;\n\tpublic email: string;\n  public loggedInUser: IUserData;\n\n\t// error messages received from the login attempt\n\tpublic errors: any = [];\n\n  // use to communicate to components whethe API calls are being made\n  public loading: boolean;\n\n  constructor(private http: HttpClient) {\n  \tthis.httpOptions = {\n  \t\theaders: new HttpHeaders({'Content-Type': 'application/json'})\n  \t} }\n\n  // Uses http.post() to get an auth token from djangorestframework-jwt endpoint\n  public login(user) {\n    // this.http.post(baseUrl+'/api-token-auth/', JSON.stringify(user), this.httpOptions).subscribe(\n    this.http.post('/api/api-token-auth/', JSON.stringify(user), this.httpOptions).subscribe(\n      data => {\n        this.updateData(data['token']);\n        // console.log(\"login method called\");\n      },\n      err => {\n        this.errors = err['error'];\n      }\n    );\n  }\n\n  // Refreshes the JWT token, to extend the time the user is logged in\n  public refreshToken() {\n    this.loading = true;\n    this.http.post('/api/api-token-refresh/', JSON.stringify({token: this.token}), this.httpOptions).subscribe(\n      data => {\n        this.updateData(data['token']);\n        // this.getLoggedInUser().subscribe(data => {\n        //   this.loggedInUser = data});\n        this.loading = false;\n      },\n      err => {\n        this.errors = err['error'];\n      }\n    );\n    // console.log(\"refreshToken method called\");\n  }\n\n  public logout() {\n    this.token = null;\n    this.token_expires = null;\n    this.username = null;\n  }\n \n  private updateData(token) {\n    this.token = token;\n    this.errors = [];\n \n    // decode the token to read the username and expiration timestamp\n    const token_parts = this.token.split(/\\./);\n    const token_decoded = JSON.parse(window.atob(token_parts[1]));\n    this.token_expires = new Date(token_decoded.exp * 1000);\n    this.username = token_decoded.username;\n    this.email = token_decoded.email;\n    this.id = token_decoded.user_id;\n    console.log(\"This is the returned data object:\", token_decoded);\n  }\n\n  public getLoggedInUser() {\n    // this function returns an http obervable for user-resolver.ts\n    return this.http.get<IUserData>(userUrl + this.id + '/');\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--home.component.html-->\\n<br>\\n<h2>Home Page</h2>\\n<br>\\n<!-- <div *ngIf=\\\"!_userService.loading\\\"> -->\\n<h4>You are logged in as {{ loggedInUser.full_name}}</h4>\\n<br>\\n<app-roster [loggedInUser] = \\\"loggedInUser\\\"></app-roster>\\n<!-- </div> -->\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { UserService } from '../core/user.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IUserData } from '../shared/interfaces';\r\n\r\nimport { Store } from 'redux';\r\nimport { AppStore } from '../app.store';\r\nimport { AppState } from '../app.state';\r\nimport * as UserActions from '../core/user.actions';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  private loggedInUser : IUserData;\r\n  private currentUser : IUserData;\r\n\r\n  constructor(\r\n    private _userService: UserService,\r\n    private route: ActivatedRoute,\r\n    @Inject(AppStore) private store: Store<AppState>\r\n    ) {\r\n      store.subscribe(() => this.readState());\r\n      this.readState(); \r\n    }\r\n  \r\n  ngOnInit() {\r\n    this.loggedInUser = this.route.snapshot.data.loggedInUser;\r\n    this._userService.loggedInUser = this.loggedInUser;\r\n    this.setCurrentUser(this.loggedInUser);\r\n  }\r\n\r\n  readState() {\r\n    const state: AppState = this.store.getState() as AppState;\r\n    this.currentUser = state.currentUser;\r\n  }\r\n\r\n  setCurrentUser(user: IUserData) {\r\n    this.store.dispatch(UserActions.setCurrentUser(user))\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ291dC9sb2dvdXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\r\\n  Logging Out!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.css']\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUtZGV0YWlscy9wcm9maWxlLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"  <h4>Email: {{ _player.email }}</h4>\\n  <h4>Number of Entries: {{ _player.num_entries }}</h4>\\n  <h4>(S)ame or (D)ifferent Brackets: {{ _player.mult_entry_type }}</h4>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { IUserData } from '../shared/interfaces';\n\n@Component({\n  selector: 'app-profile-details',\n  templateUrl: './profile-details.component.html',\n  styleUrls: ['./profile-details.component.css']\n})\nexport class ProfileDetailsComponent implements OnInit {\n\tprivate _player: IUserData;\n\t@Input() get player(): IUserData {\n\t\treturn this._player;\n\t}\n\n\tset player(value: IUserData) {\n\t\tif (value) {\n\t\t\tthis._player = value;\n\t\t}\n\t}\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUtZWRpdC9wcm9maWxlLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\r\\n  profile-edit works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { IUserData } from '../shared/interfaces';\r\nimport { UserService } from '../core/user.service';\r\nimport { PlayerService } from '../core/player.service';\r\n\r\n@Component({\r\n  selector: 'app-profile-edit',\r\n  templateUrl: './profile-edit.component.html',\r\n  styleUrls: ['./profile-edit.component.css']\r\n})\r\nexport class ProfileEditComponent implements OnInit {\r\n\tprofileForm : FormGroup; //form to capture updates to profile\r\n\tfirst_name : AbstractControl;\r\n\tlast_name : AbstractControl;\r\n\temail : AbstractControl;\r\n\tnum_entries : AbstractControl;\r\n\tmult_entry_type : AbstractControl;\r\n\tplayer : Observable<IUserData>;\r\n\r\n\r\n  constructor(\r\n  \t\tprivate formBuilder: FormBuilder, \r\n  \t\tprivate _userService: UserService, \r\n  \t\tprivate _playerService: PlayerService) {\r\n\t  \t\tthis.profileForm = formBuilder.group({\r\n\t  \t\t\t'first_name' : ['', Validators.required],\r\n\t  \t\t\t'last_name' : ['', Validators.required],\r\n\t  \t\t\t'email' : ['', Validators.required],\r\n\t  \t\t\t'num_entries' : ['', Validators.required],\r\n\t  \t\t\t'mult_entry_type' : ['', Validators.required],\r\n\t  \t\t}) }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--profile.component.html-->\\r\\n\\r\\n<h3>My Teams</h3>\\r\\n<br>\\r\\n<h3>Profile for: {{ user.full_name }}</h3>\\r\\n<app-profile-details [player] = \\\"user\\\"></app-profile-details>\\r\\n\\r\\n<br>\\r\\n<button (click)=\\\"delete()\\\">Delete</button>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../core/user.service';\r\nimport { PlayerService } from '../core/player.service';\r\nimport { Router } from '@angular/router';\r\nimport { IUserData } from '../shared/interfaces';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\tprivate user: IUserData; // for passing player info to sub-components (profile-details & profile-edit)\r\n\t\r\n\tconstructor(private _playerService: PlayerService, private _userService: UserService, private router: Router) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.user = this._userService.loggedInUser;\r\n\t}\r\n\r\n\tdelete() {\r\n\t\tthis._playerService.deletePlayer(this._userService.id, this._userService.token).subscribe((data) => {\r\n\t\t\tconsole.log(\"delete successful\");\r\n\t\t});\r\n\t\tthis.router.navigate(['/logout']);\r\n\t}\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jvc3Rlci9yb3N0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!--roster.component.html-->\\n\\n<h3>Spreadpool Roster</h3>\\n<li><strong>{{ _loggedInUser.full_name }}*</strong></li>\\n<li *ngFor = \\\"let user of rosterString\\\">{{user}}</li>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { PlayerService } from '../core/player.service';\nimport { IUserData } from '../shared/interfaces';\n\n@Component({\n  selector: 'app-roster',\n  templateUrl: './roster.component.html',\n  styleUrls: ['./roster.component.css']\n})\nexport class RosterComponent implements OnInit {\n\tprivate roster : object[]; // to capture entire user list in array for iteration\n\tprivate rosterString : string[]; // to capture list of players (except for loggedInUser)\n\tprivate _loggedInUser: IUserData; // to capture loggedInUser object from parent component\n\t\n\t// Retrieve loggedInUser from parent component\n\t@Input() get loggedInUser(): IUserData {\n\t\treturn this._loggedInUser;\n\t}\n\n\tset loggedInUser(value: IUserData) {\n\t\tif (value) {\n\t\t\tthis._loggedInUser = value;\n\t\t}\n\t}\n\t\n \tconstructor(private _playerService: PlayerService) { \n \t}\n\n\tngOnInit() {\n\t\tthis.rosterString = [];\n\t\tthis._playerService.getList().subscribe(data => {\n\t\t\tthis.roster = data;\n\t\t\tthis.roster.forEach(element => {\n\t\t\t\tif (element[\"email\"] != this._loggedInUser.email) {\n\t\t\t\t\tthis.rosterString.push(element[\"full_name\"]);\n\t\t\t\t}\n\t\t\t})\n\n\t\t})\n\t}\n\n}\n","//user-resolver.ts\r\n\r\n// This class allows for the processing of the UserService method before the\r\n// Home Component is rendered so that all information needed by the view is\r\n// retrieved prior to display\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from './core/user.service';\r\nimport { IUserData } from './shared/interfaces';\r\n\r\n@Injectable()\r\n\r\nexport class UserResolver implements Resolve<Observable<any>> {\r\n\tprivate loggedInUser: IUserData;\r\n\r\n\tconstructor (private _userService: UserService) { }\r\n\r\n\tresolve() : Observable<any> {\r\n\t\t//console.log(\"Resolver returning...\");\r\n\t\treturn this._userService.getLoggedInUser()\r\n\t}\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}