{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/admin/admin.module.ts","./src/app/admin/assign-brackets/assign-brackets.component.ts","./src/app/admin/assign-brackets/assign-brackets.component.html","./src/app/admin/create-brackets/create-brackets.component.ts","./src/app/admin/create-brackets/create-brackets.component.html","./src/app/admin/create-brackets/delete-bracket-modal.component.ts","./src/app/admin/create-brackets/delete-bracket-modal.component.html","./src/app/admin/create-brackets/reassign-bracket-modal.component.ts","./src/app/admin/create-brackets/reassign-bracket-modal.component.html","./src/app/admin/create-brackets/reset-bracket-modal.component.ts","./src/app/admin/create-brackets/reset-bracket-modal.component.html","./src/app/admin/edit-roster/edit-roster-textbox/edit-roster-textbox.component.ts","./src/app/admin/edit-roster/edit-roster.component.ts","./src/app/admin/edit-roster/edit-roster.component.html","./src/app/admin/game-detail/game-detail.component.ts","./src/app/admin/game-detail/game-detail.component.html","./src/app/admin/send-emails/send-emails.component.ts","./src/app/admin/send-emails/send-emails.component.html","./src/app/admin/send-emails/send-games-modal.component.ts","./src/app/admin/send-emails/send-games-modal.component.html","./src/app/admin/send-emails/send-orig-modal.component.ts","./src/app/admin/send-emails/send-orig-modal.component.html","./src/app/admin/update-games/update-games.component.ts","./src/app/admin/update-games/update-games.component.html","./src/app/app-bootstrap.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.store.ts","./src/app/bracket-tab/bracket-tab.component.ts","./src/app/bracket-tab/bracket-tab.component.html","./src/app/brackets/brackets.component.ts","./src/app/brackets/brackets.component.html","./src/app/core/entry.service.ts","./src/app/core/game.service.ts","./src/app/core/is-admin.guard.ts","./src/app/core/player.service.ts","./src/app/core/region.service.ts","./src/app/core/sorter.service.ts","./src/app/core/tbracket.service.ts","./src/app/core/user-resolver.ts","./src/app/core/user.actions.ts","./src/app/core/user.reducer.ts","./src/app/core/user.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/logout/logout.component.ts","./src/app/logout/logout.component.html","./src/app/profile-details/profile-details.component.ts","./src/app/profile-details/profile-details.component.html","./src/app/profile-form-modal/admin-profile-form-modal.component.ts","./src/app/profile-form-modal/admin-profile-form-modal.component.html","./src/app/profile-form-modal/partial-profile-form-modal.component.ts","./src/app/profile-form-modal/partial-profile-form-modal.component.html","./src/app/profile-form-modal/profile-form-modal.component.ts","./src/app/profile-form-modal/profile-form-modal.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/roster-textbox/roster-textbox.component.ts","./src/app/roster/roster.component.ts","./src/app/roster/roster.component.html","./src/app/shared/functions.ts","./src/app/standings-nav/standings-nav.component.ts","./src/app/standings-nav/standings-nav.component.html","./src/app/standings/standings.component.ts","./src/app/standings/standings.component.html","./src/app/team-details/team-details.component.ts","./src/app/team-details/team-details.component.html","./src/app/ui/footer/footer.component.ts","./src/app/ui/footer/footer.component.html","./src/app/ui/header/header.component.ts","./src/app/ui/header/header.component.html","./src/app/ui/layout/layout.component.ts","./src/app/ui/layout/layout.component.html","./src/app/ui/ui.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { RouterModule, ActivatedRoute, Router, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\n\r\nimport { PickListModule } from 'primeng/picklist'; //Used on Assign Entries page, assign-brackets.component\r\nimport { CalendarModule } from 'primeng/calendar'; //Used on Update Game page, game-detail.component\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'; //Needed by CalendarModule\r\n\r\nimport { AssignBracketsComponent } from './assign-brackets/assign-brackets.component';\r\nimport { CreateBracketsComponent } from './create-brackets/create-brackets.component';\r\nimport { UpdateGamesComponent } from './update-games/update-games.component';\r\nimport { GameDetailComponent } from './game-detail/game-detail.component';\r\nimport { SendEmailsComponent } from './send-emails/send-emails.component';\r\nimport { EditRosterComponent } from './edit-roster/edit-roster.component';\r\nimport { EditRosterTextboxComponent } from './edit-roster/edit-roster-textbox/edit-roster-textbox.component';\r\n\r\n\r\nexport const routes: Routes = [\r\n  { path: '', redirectTo: 'c-brackets', pathMatch: 'full' },\r\n  { path: 'c-brackets', component: CreateBracketsComponent },\r\n  { path: 'a-brackets/:id', component: AssignBracketsComponent },\r\n  { path: 'u-games', component: UpdateGamesComponent },\r\n  { path: 's-emails', component: SendEmailsComponent },\r\n  { path: 'e-roster', component: EditRosterComponent },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n  \tAssignBracketsComponent,\r\n  \tCreateBracketsComponent,\r\n  \tUpdateGamesComponent,\r\n  \tGameDetailComponent,\r\n  \tSendEmailsComponent,\r\n    EditRosterComponent,\r\n    EditRosterTextboxComponent,\r\n  ],\r\n  exports: [\r\n  \tAssignBracketsComponent,\r\n  \tCreateBracketsComponent,\r\n  \tUpdateGamesComponent,\r\n    SendEmailsComponent,\r\n    EditRosterComponent,\r\n    RouterModule,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PickListModule,\r\n    FontAwesomeModule,\r\n    RouterModule,\r\n    CalendarModule,\r\n    BrowserAnimationsModule,\r\n  ]\r\n\r\n})\r\nexport class AdminModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { EntryNameData, TBracketData } from '../../shared/interfaces';\r\nimport { EntryService } from '../../core/entry.service';\r\nimport { TBracketService } from '../../core/tbracket.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-assign-brackets',\r\n  templateUrl: './assign-brackets.component.html',\r\n  styleUrls: ['./assign-brackets.component.css']\r\n})\r\nexport class AssignBracketsComponent implements OnInit {\r\n\r\n\t_unassignedEntries: EntryNameData[];\r\n\t_assignedEntries: EntryNameData[];\r\n\t_activeBracket: TBracketData;\r\n\tprivate id: number; //capture tbracket id url parameter\r\n\t_assignEntries_len: number;\r\n\t_unassignedEntries_len: number;\r\n\t_tbracketList: TBracketData[];\r\n\r\n\tconstructor(\r\n\t\tprivate _entryService: EntryService, \r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate _tbracketService: TBracketService,\r\n\t\tprivate router: Router) { }\r\n\r\n\tngOnInit() {\r\n\r\n\t\t// Find tbracket id from parameter of url and refresh data\r\n\t\tthis.route.params.subscribe((params) => {\r\n\t\t\tthis.id = params['id'];\r\n\t\t\tthis.refreshData(this.id);\r\n\t\t});\r\n\t\t\t\r\n\t\t// Update bracket list to build drop-down menu contents\r\n\t\tthis._tbracketService.getList().subscribe(data => {\r\n\t\t\tthis._tbracketList = data;\r\n\t\t});\r\n\t\t\r\n\t}\r\n\r\n\trefreshData(tbracket_id: number) {\r\n\t\t// Update arrays to show in picklists as well as activeBracket for proper page display\r\n\r\n\t\tthis._tbracketService.getTbracket(tbracket_id).subscribe((data) => {\r\n\t\t\tthis._activeBracket = data;\r\n\t\t});\r\n\r\n\t\tthis._entryService.getEntryListByBracket(tbracket_id).subscribe((data) => {\r\n\t\t\tthis._assignedEntries = data;\r\n\t\t\tthis._assignEntries_len = this._assignedEntries.length;\r\n\t\t\t// console.log(\"Entries that have bracket = \", this._activeBracket.name, \" assigned: \", this._assignedEntries);\r\n\t\t});\r\n\r\n\t\t// source array = all entries without a tbracket assigned (_unassignedEntries)\r\n\t\tthis._entryService.getEntryListbyNullBracket().subscribe((data) => {\r\n\t\t\tthis._unassignedEntries = data;\r\n\t\t\tthis._unassignedEntries_len = this._unassignedEntries.length;\r\n\t\t\t// console.log(\"Entries that don't have a bracket assigned: \", this._unassignedEntries);\r\n\t\t});\r\n\t}\r\n\r\n\tsaveAndGoBack() {\r\n\t\t//Update tbracket_id for all entries in target array isn't already assigned tbracket_id\r\n\t\tthis._assignedEntries.forEach((entry) => {\r\n\t\t\tif (entry.tbracket != this._activeBracket.id) {\r\n\t\t\t\tentry.tbracket = this._activeBracket.id;\r\n\t\t\t\t// console.log (\"Updated entry is: \", entry);\r\n\t\t\t\tthis._entryService.updateEntry(entry).subscribe((data) => {\r\n\t\t\t\t// console.log (\"Entry updated for...\", entry, data);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//Update tbracket_id for all entries in source array whose tbracket isn't null\r\n\t\tthis._unassignedEntries.forEach((entry) => {\r\n\t\t\tif (entry.tbracket != null) {\r\n\t\t\t\tentry.tbracket = null;\r\n\t\t\t\t// console.log (\"Updated entry is: \", entry);\r\n\t\t\t\tthis._entryService.updateEntry(entry).subscribe((data) => {\r\n\t\t\t\t// console.log (\"Entry updated for...\", entry, data);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.router.navigate(['/admin/c-brackets']);\t\t\r\n\r\n\t} //end saveAndGoBack()\r\n\r\n\tgoBack() {\r\n\t\t//Just go back to Admin->Create Brackets page without making changes\r\n\t\tthis.router.navigate(['/admin/c-brackets']);\t\r\n\t} //end goBack()\r\n\r\n\t// method to run each time an entry gets moved between lists, for updating title of each picklist\r\n\trecalculate() {\r\n\t\tthis._assignEntries_len = this._assignedEntries.length;\r\n\t\tthis._unassignedEntries_len = this._unassignedEntries.length;\r\n\t}\r\n\r\n\t// onBracketSelected(tbracket_id: number) {\r\n  onBracketSelected(tbracket_id: string) {\r\n    var tbracket_id_num: number = Number(tbracket_id);\r\n\t\tthis.refreshData(tbracket_id_num);\r\n\t}\r\n\r\n}\r\n","<!--assign-brackets.component.html-->\r\n<br>\r\n<div class = \"container\">\r\n\t<div class = \"row justify-content-start\">\r\n\t\t<div class = \"col align-self-center\">\r\n\t\t\t<h6 *ngIf=\"_activeBracket\"><strong>Assign Entries to the \r\n\t\t\t<select class = \"select-option\" #tbracketSelect (change)=\"onBracketSelected(tbracketSelect.value)\">\r\n\t\t\t\t<option class = \"option\" *ngFor = \"let tbracket of _tbracketList\" \r\n\t\t\t\t[selected] = \"tbracket.id == _activeBracket.id\" [value]=\"tbracket.id\">{{tbracket.name}}</option>\r\n\t\t\t</select> Bracket</strong></h6>\r\n\r\n\r\n\t\t</div>\r\n\t\t<div class = \"col\">\r\n\t\t\t<button class=\"btn btn-secondary\" (click)=\"goBack()\">Go Back</button>\r\n\t\t\t&nbsp;\r\n\t\t\t<button class=\"btn btn-success\" (click)=\"saveAndGoBack()\">Save Assignments & Go Back</button>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n<br>\r\n<div *ngIf=\"_unassignedEntries && _assignedEntries && _activeBracket\">\r\n\t<p-pickList [source] = \"_unassignedEntries\" [target] = \"_assignedEntries\" \r\n\t(onMoveToTarget)=\"recalculate()\" (onMoveToSource)=\"recalculate()\"\r\n\tsourceHeader=\"Unassigned Entries ({{ _unassignedEntries_len ? _unassignedEntries_len : '0' }})\" \r\n\ttargetHeader=\"{{_activeBracket.name}} Bracket Entries ({{ _assignEntries_len ? _assignEntries_len : '0'}})\" \r\n\t[responsive]=\"true\" [filterBy]=\"e_name\" [dragdrop]=\"true\" \r\n\tsourceFilterPlaceholder=\"Search by entry name\" targetFilterPlaceholder=\"Search by entry name\" \r\n\t[sourceStyle]=\"{'height':'500px'}\" [targetStyle]=\"{'height':'500px'}\">\r\n\t\t<ng-template let-entry pTemplate=\"item\">\r\n\t\t\t<div class=\"ui-helper-clearfix\">\r\n\t\t\t\t{{ entry.e_name }}\r\n\t\t\t</div>\r\n\t\t</ng-template>\r\n\t</p-pickList>\r\n</div>\r\n<br>","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { TBracketService } from '../../core/tbracket.service';\r\nimport { TBracketData, EntryData } from '../../shared/interfaces';\r\nimport { UserService } from '../../core/user.service';\r\nimport { EntryService } from '../../core/entry.service';\r\nimport { UntypedFormBuilder, UntypedFormGroup, AbstractControl, Validators } from '@angular/forms';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DeleteModalComponent } from './delete-bracket-modal.component';\r\nimport { ReassignModalComponent } from './reassign-bracket-modal.component';\r\nimport { ResetModalComponent } from './reset-bracket-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-create-brackets',\r\n  templateUrl: './create-brackets.component.html',\r\n  styleUrls: ['./create-brackets.component.css']\r\n})\r\n\r\nexport class CreateBracketsComponent implements OnInit {\r\n\r\n\t_tbracketList: TBracketData[];\r\n\tbracketAddForm: UntypedFormGroup;\r\n\tbracket_name : AbstractControl;\r\n\tnew_bracket : TBracketData;\r\n\tdeleteModalRef: BsModalRef;\r\n\tconfirmEntriesModalRef: BsModalRef;\r\n\tshowEntriesMsg: boolean;\r\n\tentriesMsg: string = '';\r\n\tconfirmReassignModalRef: BsModalRef;\r\n\tconfirmResetModalRef: BsModalRef;\r\n\r\n\tconstructor(\r\n\t\tprivate _tbracketService: TBracketService,\r\n\t\tprivate _userService: UserService,\r\n\t\tprivate fb: UntypedFormBuilder,\r\n\t\tprivate modalService: BsModalService,\r\n\t\tprivate _entryService: EntryService,\r\n\t\tprivate router: Router,\r\n\t\t) {\r\n\r\n\t\tthis.bracketAddForm = fb.group({\r\n\t\t\t'bracket_name' : ['', Validators.required],\r\n\t\t});\r\n\r\n\t\tthis.bracket_name = this.bracketAddForm.controls['bracket_name']; // allows for other properties, e.g. error values\r\n\r\n\t }\r\n\r\n\tngOnInit() {\r\n\t\tthis.new_bracket = {'id': null, 'name': '', 'entry_count': null};  //initialize new_bracket\r\n\t\tthis.resetList();\r\n\t}\r\n\r\n\tngOnChanges() {\r\n\t\tthis.resetList();\r\n\t\tthis.showEntriesMsg = false;\r\n\t}\r\n\r\n\taddBracket(value: string) {\r\n\t\tthis.new_bracket.name = this.bracket_name.value;\r\n\t\t// console.log (\"New Bracket name is: \", this.new_bracket);\r\n\t\t\r\n\t\tthis._tbracketService.createTbracket(this.new_bracket, this._userService.token).subscribe((data) => {\r\n\t\t\t// console.log(\"Tbracket added:\", value);\r\n\t\t\tthis.bracketAddForm.reset(); // clear out fields after form submit\r\n\t\t\tthis.resetList();\r\n\t\t});\r\n\t\t\r\n\t} //end addBracket()\r\n\r\n\tresetList() {\r\n\t\t//refresh Tbracket list\r\n\t\tthis._tbracketService.getList().subscribe(data => {\r\n\t\t\tthis._tbracketList = data;\r\n\t\t})\r\n\t\t// console.log(\"Tbracket List has been reset\")\r\n\t} // end resetList()\r\n\r\n\t// function to invoke when click on 'Assign Entries' so navigates properly\r\n\tnavToAssign(tbracket_id: number) {\r\n\t\tthis.router.navigate(['/admin/a-brackets', tbracket_id]);\r\n\t} //end navToAssign\r\n\r\n\t\r\n\t// function to open confirmEntries template modal followed by button functions\r\n\topenEntriesModal(template: TemplateRef<any>) {\r\n\t\tthis.confirmEntriesModalRef = this.modalService.show(template, {class: 'modal-lg'})\r\n\t}\r\n\tconfirmDeleteEntries(): void {\r\n\t\tthis._entryService.resetAllEntries().subscribe((data) => {\r\n\t\t\tconsole.log(\"All Entries have been deleted, then re-created based on User data!\");\r\n\t\t\tthis.confirmEntriesModalRef.hide();\r\n\t\t\tthis.entriesMsg = \"All Entries have been deleted & re-created!\";\r\n\t\t\tthis.showEntriesMsg = true;\r\n\t\t\tthis.resetList();\r\n\t\t});\r\n\t}\r\n\tdeclineDeleteEntries(): void {\r\n\t\tthis.confirmEntriesModalRef.hide();\r\n\t}\r\n\r\n\t// function to open delete-bracket-modal.component.ts component modal\r\n\topenDeleteModal(bracket_id: number, bracket_name: string) {\r\n\t\tconst initialState = {\r\n\t\t\ttbracket_id: bracket_id,\r\n\t\t\ttbracket_name: bracket_name\r\n\t\t};\r\n\t\tthis.deleteModalRef = this.modalService.show(DeleteModalComponent, {initialState});\r\n\r\n\t\tthis.modalService.onHidden.subscribe((reason: string) => {\r\n\t    \t// Upon modal being closed run these actions\r\n\t        this.resetList();\r\n\t    })\r\n\r\n\t} // end openDeleteModeal()\r\n\r\n\r\n\t// code for Bracket -> Reassign confirmation popup component modal\r\n\topenReassignModal(bracket_id: number, bracket_name: string) {\r\n\t\tconst initialState = {\r\n\t\t\ttbracket_id: bracket_id,\r\n\t\t\ttbracket_name: bracket_name\r\n\t\t};\r\n\t\tthis.confirmReassignModalRef = this.modalService.show(ReassignModalComponent, {initialState});\r\n\t\r\n\t\tthis.modalService.onHidden.subscribe((reason: string) => {\r\n\t    \t// Upon modal being closed run these actions\r\n\t        this.resetList();\r\n\t    })\r\n\r\n\t} // end openReassignModal()\r\n\r\n\r\n\t// code for Bracket -> Reset confirmation popup component modal\r\n\topenResetModal(bracket_id: number, bracket_name: string) {\r\n\t\tconst initialState = {\r\n\t\t\ttbracket_id: bracket_id,\r\n\t\t\ttbracket_name: bracket_name\r\n\t\t};\r\n\t\tthis.confirmResetModalRef = this.modalService.show(ResetModalComponent, {initialState});\r\n\t\r\n\t\tthis.modalService.onHidden.subscribe((reason: string) => {\r\n\t    \t// Upon modal being closed run these actions\r\n\t        this.resetList();\r\n\t    })\r\n\r\n\t} // end openReassignModal()\r\n\r\n} // export class CreateBracketsComponent","<!--create-brackets.component.html-->\r\n<br>\r\n<h6><strong>Add Bracket</strong></h6>\r\n<div class=\"container\">\r\n\t<div class = \"row\">\r\n\t\t<div class = \"col\">\r\n\t\t\t<form [formGroup]=\"bracketAddForm\" (ngSubmit)=\"addBracket(bracketAddForm.value)\">\r\n\t\t\t\t<div class=\"container\">\r\n\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t<!-- <label for=\"bracket_name\">Bracket</label> -->\r\n\t\t\t\t\t\t    <input type=\"text\" class=\"form-control\" placeholder=\"Type bracket name..\" \r\n\t\t\t\t\t\t    id=\"bracket_name\" [formControl] = \"bracket_name\">\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"col-md-6\">\r\n\t\t\t\t\t\t\t<button type=\"submit\" id=\"submit\" class=\"btn btn-success\" \r\n\t\t\t\t\t\t\t[disabled]=\"!bracketAddForm.valid\">Add Bracket</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t\t<div class = \"col\">\r\n\t\t\t<span *ngIf=\"showEntriesMsg\" class=\"text-success\">{{ entriesMsg }}</span>\r\n\t\t\t<button class=\"btn btn-dark\" (click)=\"openEntriesModal(entries_template)\">Delete/Create All Entries</button>\r\n\t\t\t&nbsp;\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<br>\r\n<div class = \"d-flex flex-row\">\r\n\t<div class = \"p-2\">\r\n\t\t<h6><strong>Brackets</strong></h6>\r\n\t</div>\r\n\t<div class = \"p-2\">\r\n\t\t<a [routerLink]=\"[]\" (click)=\"resetList()\">refresh</a>\r\n\t</div>\r\n</div>\r\n\r\n<table class=\"table table-sm\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">#</th>\r\n\t\t\t<th scope=\"col\">Name</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 10%\">Num Entries</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 10%\">Id</th>\r\n\t\t\t<th scope=\"col\">Actions</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr *ngFor = \"let tbracket of _tbracketList; let i = index\">\r\n\t\t\t<th scope=\"row\" class=\"align-middle\">{{i + 1}}</th>\r\n\t\t\t<td class=\"align-middle\">{{ tbracket.name }}</td>\r\n\t\t\t<td class=\"align-middle\">{{ tbracket.entry_count}}</td>\r\n\t\t\t<td class=\"align-middle\">{{ tbracket.id }}</td>\r\n\t\t\t<td>\r\n\t\t\t\t<button class=\"btn btn-danger custom\" (click)=\"openDeleteModal(tbracket.id, tbracket.name)\">Delete</button>\r\n\t\t\t\t&nbsp;\r\n\t\t\t\t<button class=\"btn btn-warning\" (click)=\"openReassignModal(tbracket.id, tbracket.name)\">(Re)Assign</button>\r\n\t\t\t\t&nbsp;\r\n\t\t\t\t<button class=\"btn btn-info custom\" (click)=\"openResetModal(tbracket.id, tbracket.name)\">Reset</button>\r\n\t\t\t\t&nbsp;\r\n\t\t\t\t<button class=\"btn btn-success\" (click)=\"navToAssign(tbracket.id)\">Assign Entries</button>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<!-- Template modal that gets displayed when user clicks on Delete/Create All Entries -->\r\n<ng-template #entries_template>\r\n  <div class=\"modal-body text-center\">\r\n    <h6><small>You are about to delete all existing Bracket Entry assignments and create new Entries based on currently registered Users. This will unassign all Entries from Brackets. Would you like to proceed?</small></h6>\r\n    <button type=\"button\" class=\"btn btn-light\" (click)=\"confirmDeleteEntries()\" >Yes, Proceed</button>\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"declineDeleteEntries()\" >No, Go Back</button>\r\n  </div>\r\n</ng-template>","import { Component, OnInit, } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { TBracketService } from '../../core/tbracket.service';\r\nimport { UserService } from '../../core/user.service';\r\n\r\n\r\n@Component({\r\n  selector: 'modal-content',\r\n  templateUrl: './delete-bracket-modal.component.html'\r\n})\r\n\r\nexport class DeleteModalComponent implements OnInit {\r\n  tbracket_id: number;\r\n  tbracket_name: string;\r\n \r\n  constructor(\r\n\tpublic deleteModalRef: BsModalRef,\r\n\tprivate _tbracketService: TBracketService,\r\n\tprivate _userService: UserService\r\n\t) {}\r\n \r\n\tngOnInit() {\r\n\t}\r\n\r\n\tdeleteBracket(bracket_id: number) {\r\n\t\t// console.log(\"deleteBracket method invoked for Tbracket id:\", bracket_id);\r\n\t\tthis._tbracketService.deleteTbracket(bracket_id, this._userService.token).subscribe((data) => {\r\n\t\t\tconsole.log(\"delete Tbracket successful\");\r\n\t\t});\r\n\t}\r\n}","\r\n<div class=\"modal-header\">\r\n      <h4 class=\"modal-title pull-left\">Confirm Bracket Deletion</h4>\r\n      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"deleteModalRef.hide()\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <h6>Are you sure you want to delete the <strong>{{ tbracket_name }}</strong> bracket?</h6>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteModalRef.hide(); deleteBracket(tbracket_id)\">Delete</button>\r\n</div>","import { Component, OnInit, } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { TBracketService } from '../../core/tbracket.service';\r\nimport { UserService } from '../../core/user.service';\r\n\r\n\r\n@Component({\r\n  selector: 'modal-content',\r\n  templateUrl: './reassign-bracket-modal.component.html'\r\n})\r\n\r\nexport class ReassignModalComponent implements OnInit {\r\n  tbracket_id: number;\r\n  tbracket_name: string;\r\n \r\n  constructor(\r\n\tpublic confirmReassignModalRef: BsModalRef,\r\n\tprivate _tbracketService: TBracketService,\r\n\tprivate _userService: UserService\r\n\t) {}\r\n \r\n\tngOnInit() {\r\n\t}\r\n\r\n\treassignBracket(bracket_id: number) {\r\n\t\t// console.log(\"Tbracket id for re-assignment is\", bracket_name);\r\n\t\tthis._tbracketService.reassignTbracket(bracket_id, this._userService.token).subscribe((data) => {\r\n\t\t\tconsole.log(\"Tbracket id:\", bracket_id, \" entries re-assigned!\");\r\n\t\t});\r\n\t}\r\n}","\r\n<div class=\"modal-header\">\r\n      <h4 class=\"modal-title pull-left\">Confirm Bracket Reassignment</h4>\r\n      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"confirmReassignModalRef.hide()\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <h6>Are you sure you want to (Re)Assign the <strong>{{ tbracket_name }}</strong> bracket? This will randomly assign\r\n  new original & active teams to every entry, reset Round 1 matchups and clear out Round 2-6 matchups.</h6>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-warning\" (click)=\"confirmReassignModalRef.hide(); reassignBracket(tbracket_id)\">(Re)Assign</button>\r\n</div>","import { Component, OnInit, } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { TBracketService } from '../../core/tbracket.service';\r\n\r\n\r\n@Component({\r\n  selector: 'modal-content',\r\n  templateUrl: './reset-bracket-modal.component.html'\r\n})\r\n\r\nexport class ResetModalComponent implements OnInit {\r\n  tbracket_id: number;\r\n  tbracket_name: string;\r\n \r\n  constructor(\r\n\tpublic confirmResetModalRef: BsModalRef,\r\n\tprivate _tbracketService: TBracketService,\r\n\t) {}\r\n \r\n\tngOnInit() {\r\n\t}\r\n\r\n\tresetBracket(bracket_id: number, bracket_name: string) {\r\n\t\t\tthis._tbracketService.resetTbracket(bracket_id).subscribe((data) => {\r\n\t\t\t\tconsole.log(bracket_name, \" Tbracket has been reset!\");\r\n\t\t\t});\r\n\t}\r\n}","\r\n<div class=\"modal-header\">\r\n      <h4 class=\"modal-title pull-left\">Confirm Bracket Reset</h4>\r\n      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"confirmResetModalRef.hide()\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <h6>Are you sure you want to Reset the <strong>{{ tbracket_name }}</strong> bracket? This will set all active teams = original teams, reset all Round 1 matchups, and clear out Round 2-6 matchups for this bracket.</h6>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-info\" (click)=\"confirmResetModalRef.hide(); resetBracket(tbracket_id, tbracket_name)\">Reset</button>\r\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-roster-textbox',\n  // templateUrl: './edit-roster-textbox.component.html',\n  template: `\n        Search by Name/Email: <input type=\"text\" [(ngModel)]=\"filter\" />\n    `,\n  styleUrls: ['./edit-roster-textbox.component.css']\n})\nexport class EditRosterTextboxComponent implements OnInit {\n\n  private _filter: string;\n\t\n    @Input() get filter() {\n        return this._filter;\n    }\n    \n    set filter(val: string) { \n        this._filter = val;\n        this.changed.emit(this.filter); //Raise changed event\n    }\n\n    @Output() changed: EventEmitter<string> = new EventEmitter<string>();\n\n\tconstructor() { }\n\n\tngOnInit() {\n\t}\n\n}","import { Component, OnInit, OnChanges, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PlayerService } from '../../core/player.service';\nimport { UserService } from '../../core/user.service';\nimport { SorterService } from '../../core/sorter.service';\nimport { IUserData } from '../../shared/interfaces';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { AdminProfileFormModalComponent } from '../../profile-form-modal/admin-profile-form-modal.component';\nimport { faCaretDown, faCaretUp, faCheckSquare, faSquare, faEdit } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n\tselector: 'app-edit-roster',\n\ttemplateUrl: './edit-roster.component.html',\n\tstyleUrls: ['./edit-roster.component.css']\n})\nexport class EditRosterComponent implements OnInit {\n\t_roster: IUserData[];\n\t_filteredRoster: IUserData[];\n\t_loggedInUser: IUserData; // to capture loggedInUser object from parent component\n\thoveredIndex: number; // to user which row a user hovers on\n\tloading: boolean;\n\t// sort function variables\n\t_property: string;\n\t_direction: number=1;\n\n  // font-awesome icons\n  faCaretDown = faCaretDown;\n  faCaretUp = faCaretUp;\n  faCheckSquare = faCheckSquare;\n  faSquare = faSquare;\n  faEdit = faEdit;\n\t\n  // Modal object to capture content\n\tbsModalRef: BsModalRef;\n\t\n \tconstructor(\n\t\tprivate _playerService: PlayerService,\n \t\tprivate _modalService: BsModalService,\n \t\tprivate _sorterService: SorterService,\n\t) { }\n\n\tngOnInit() {\n\t\tthis._playerService.getList().subscribe(data => {\n\t\t\tthis._filteredRoster = this._roster = data;\n\t\t});\n\t}\n\n\topenAdminProfileModal(_player: IUserData) {\n\t\tconst initialState = {\n\t\t\tid: _player.id,\n\t\t\tprofile_user: _player\n\t\t};\n\t\tthis.bsModalRef = this._modalService.show(AdminProfileFormModalComponent, {initialState});\n\n\t\tthis._modalService.onHidden.subscribe(() => {\n\t\t\t// Update and re-display roster so any changes are reflected in what the user sees on screen\n\t\t\t// this._playerService.getList().subscribe(data => {\n\t\t\t// \tthis._filteredRoster = data;\n\t\t\t// \tif (this._property) {\n\t\t\t// \t\tthis.sort(this._property);\n\t\t\t// \t}\n\t\t\t// });\n\t\t\t// console.log(\"_property = \", this._property, \" _direction = \", this._direction)\n\t\t})\n\t}\n\n\tfilter(data: string) {\n\t\t// Function that filters the Roster list based on what a user types in the edit-roster-textbox component\n\t\tif (data) {\n\t\t\tthis._filteredRoster = this._roster.filter(item => item.full_name.toLowerCase().indexOf(data.toLowerCase()) > -1\n\t\t\t\t|| item.email.toLowerCase().indexOf(data.toLowerCase()) > -1);\n\t\t} else {\n\t\t\tthis._filteredRoster = this._roster;\n\t\t}\n\t}\n\n\tsort(prop: string) {\n\t\tthis._sorterService.sort(this._filteredRoster, prop);\n\t\tthis._property = prop;\n\t\tthis._direction = (this._property === prop) ? this._direction * -1 : 1;\n\t\t// console.log (\"property = \", this._property, \" & direction = \", this._direction);\n\t}\n}","<!--edit-roster.component.html-->\n<br>\n<h4>Players</h4>\n<!-- <div [class.loader] = \"loading\"> -->\n<div>\n<app-edit-roster-textbox (changed)=\"filter($event)\"></app-edit-roster-textbox>\n<br>\n<br>\n<table class=\"table table-sm\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th scope=\"col\">#</th>\n\t\t\t<th scope=\"col\" (click)=\"sort('last_name')\" class=\"cursor-pointer\">Name\n\t\t\t\t<!-- \n        <fa *ngIf=\"_property=='last_name' && _direction==1\" name=\"caret-down\"></fa>\n\t\t\t\t<fa *ngIf=\"_property=='last_name' && _direction==-1\" name=\"caret-up\"></fa>\n        -->\n        <fa-icon *ngIf=\"_property=='last_name' && _direction==1\" [icon]=\"faCaretDown\"></fa-icon>\n\t\t\t\t<fa-icon *ngIf=\"_property=='last_name' && _direction==-1\" [icon]=\"faCaretDown\"></fa-icon>\n\t\t\t</th>\n      <th scope=\"col\">Email</th>\n\t\t\t<th scope=\"col\" (click)=\"sort('num_entries')\" class=\"cursor-pointer\">Num Entries\n\t\t\t\t<!--\n        <fa *ngIf=\"_property=='num_entries' && _direction==1\" name=\"caret-down\"></fa>\n\t\t\t\t<fa *ngIf=\"_property=='num_entries' && _direction==-1\" name=\"caret-up\"></fa>\n        -->\n        <fa-icon *ngIf=\"_property=='num_entries' && _direction==1\" [icon]=\"faCaretDown\"></fa-icon>\n\t\t\t\t<fa-icon *ngIf=\"_property=='num_entries' && _direction==-1\" [icon]=\"faCaretDown\"></fa-icon>\n\t\t\t</th>\n\t\t\t<th scope=\"col\">(S)ame/(D)iff</th>\n      <th scope=\"col\" (click)=\"sort('paid')\" class=\"cursor-pointer\">Paid?\n        <!-- \n        <fa *ngIf=\"_property=='paid' && _direction==1\" name=\"check-square-o\"></fa>\n\t\t\t\t<fa *ngIf=\"_property=='paid' && _direction==-1\" name=\"square-o\"></fa>\n        -->\n        <fa-icon *ngIf=\"_property=='paid' && _direction==1\" [icon] = \"faCheckSquare\"></fa-icon>\n\t\t\t\t<fa-icon *ngIf=\"_property=='paid' && _direction==-1\" [icon] = \"faSquare\"></fa-icon>\n      </th>\n      <!-- <th scope=\"col\">Paid?</th> -->\n\t\t\t<th scope=\"col\" style=\"width: 5%\">Edit</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr *ngFor = \"let player of _filteredRoster; let i = index\">\n\t\t\t<th scope=\"row\">{{i + 1}}</th>\n\t\t\t<td>{{ player.first_name }}&nbsp;{{ player.last_name }}</td>\n      <td>{{ player.email }}</td>\n\t\t\t<td>{{ player.num_entries }}</td>\n\t\t\t<td>{{ player.num_entries == 1 ? '-' : player.mult_entry_type }}</td>\n      <!-- <td>{{ player.paid }}</td> -->\n      <!-- <td><fa name = '{{ player.paid == true ? \"check-square-o\" : \"square-o\" }}'></fa></td> -->\n      <td>{{ player.paid == true ? 'YES' : 'NO' }}</td>\n      <td>\n          <!--\n          <fa name=\"edit\" class = \"cursor-pointer\" tooltip = \"Edit Profile\" (click)=\"openAdminProfileModal(player)\"></fa>\n          -->\n          <fa-icon [icon]=\"faEdit\" class = \"cursor-pointer\" tooltip = \"Edit Profile\" (click)=\"openAdminProfileModal(player)\"></fa-icon>\t\t\t\n\t\t\t</td>\n\t\t</tr>\n\t</tbody>\n</table>\n<br>\n</div>","import { Component, OnInit, Input, OnChanges } from '@angular/core';\r\nimport { GameService } from '../../core/game.service';\r\nimport { GameData } from '../../shared/interfaces';\r\nimport { UntypedFormBuilder, UntypedFormGroup, AbstractControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { convertTime12to24, convertTime24to12 } from '../../shared/functions';\r\n\r\n@Component({\r\n  selector: 'app-game-detail',\r\n  templateUrl: './game-detail.component.html',\r\n  styleUrls: ['./game-detail.component.css']\r\n})\r\nexport class GameDetailComponent implements OnInit {\r\n\r\n\t// Update Game form variables\r\n\tgameUpdateForm: UntypedFormGroup;\r\n\tspread : AbstractControl;\r\n\tteam1_score : AbstractControl;\r\n\tteam2_score : AbstractControl;\r\n  game_date: AbstractControl;\r\n  game_time: AbstractControl;\r\n  send_email: AbstractControl;\r\n\t_game: GameData;\r\n\tshowMsg: boolean;\r\n\tmsg: string = '';\r\n\r\n  _todayDate: Date = new Date();\r\n\t\r\n\t@Input() get game(): GameData {\r\n\t\treturn this._game;\r\n\t}\r\n\r\n\tset game(value: GameData) {\r\n\t\tif (value) {\r\n\t\t\tthis._game = value;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(\r\n\t\tprivate _gameService: GameService,\r\n\t\tprivate fb: UntypedFormBuilder,\r\n\t\tprivate router: Router\r\n\t\t) { \r\n\t\t// Update Game form setup\r\n\t\tthis.gameUpdateForm = fb.group({\r\n\t\t\t// 'spread' : ['', Validators.required],\r\n      'spread' : ['', ],\r\n\t\t\t'team1_score' : ['', Validators.required],\r\n\t\t\t'team2_score' : ['', Validators.required],\r\n      'game_date' : [this._todayDate.toISOString().substring(0,10)],\r\n      'game_time' : ['12:00 PM'],\r\n      'send_email' : [true],\r\n\t\t});\r\n\t\tthis.spread = this.gameUpdateForm.controls['spread'];\r\n\t\tthis.team1_score = this.gameUpdateForm.controls['team1_score'];\r\n\t\tthis.team2_score = this.gameUpdateForm.controls['team2_score'];\r\n    this.game_date = this.gameUpdateForm.controls['game_date'];\r\n    this.game_time = this.gameUpdateForm.controls['game_time'];\r\n    this.send_email = this.gameUpdateForm.controls['send_email'];\r\n\t\t}\r\n\r\n\tngOnInit() {\r\n\t\t\r\n\t}\r\n\r\n\tngOnChanges() {\r\n\t\t// console.log(\"game-detail component received _game update..\", this._game);\r\n\t\tthis.gameUpdateForm.patchValue(this._game);\r\n    if (this._game.tipoff_date_time !== null) {\r\n      // set form values from back-end tipoff_date_time if not null\r\n      this.gameUpdateForm.controls['game_date'].patchValue(this._game.tipoff_date_time.substring(0,10))\r\n      this.gameUpdateForm.controls['game_time'].patchValue(convertTime24to12(this._game.tipoff_date_time.substring(11,16)))\r\n    } else {  //otherwise set to today's date and 12:00PM\r\n      this.gameUpdateForm.controls['game_date'].patchValue(this._todayDate.toISOString().substring(0,10));\r\n      this.gameUpdateForm.controls['game_time'].patchValue('12:00 PM');\r\n    }\r\n    this.gameUpdateForm.controls['send_email'].patchValue(true);\r\n\t\tthis.showMsg = false;\r\n\t}\r\n\r\n\tupdateGame() {\r\n    this.showMsg = false;\r\n    this.msg=\"\";\r\n\t\tthis._game.team1_score = this.team1_score.value;\r\n\t\tthis._game.spread = this.spread.value;\r\n\t\tthis._game.team2_score = this.team2_score.value;\r\n    if (this.game_date.value && this.game_time.value) {\r\n      this._game.tipoff_date_time = this.game_date.value + \" \" + convertTime12to24(this.game_time.value);\r\n    } else {this._game.tipoff_date_time = null}\r\n\r\n    // Depending on whether send_email checkbox is checked, send different request to backend\r\n    if (this.send_email.value) {\r\n      this._gameService.updateGame_sendEmail(this._game).subscribe((data) => {\r\n        this.msg = \"Game #: \" + this._game.id + \" has been updated & email sent!\";\r\n        this.showMsg = true;\r\n      });\r\n    } else {\r\n      this._gameService.updateGame(this._game).subscribe((data) => {\r\n        this.msg = \"Game #: \" + this._game.id + \" has been updated!\";\r\n        this.showMsg = true;\r\n      });\r\n    }\r\n    console.log(\"Game updated with:\", this._game);\r\n\t} //end updateGame()\r\n\r\n\tresetGame() {\r\n\t\t// console.log(\"Game id for reset is\", this._game.id);\r\n\t\tthis._gameService.resetGame(this._game.id).subscribe((data) => {\r\n\t\t\t// console.log(\"Game #\", this._game.id, \"has been reset!\");\r\n\r\n\t\t\t// navigate back to Retrieve Game page *** not working ***\r\n\t\t\t// this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\r\n\t\t\t// \tthis.router.navigate(['/admin/u-games']));\r\n\r\n\t\t\t// retrieve newly updated game and update form\r\n\t\t\tthis._gameService.getGameDetails(this._game.id).subscribe((data) => {\r\n\t\t\t\tthis._game = data;\r\n\t\t\t\tthis.gameUpdateForm.reset();\r\n\t\t\t\tthis.gameUpdateForm.patchValue(this._game);\r\n\t\t\t\tthis.msg = \"Game #: \" + this._game.id + \" has been reset!\"\r\n\t\t\t\tthis.showMsg = true\r\n\t\t\t})\r\n\t\t});\r\n\t} //end resetGame()\r\n\r\n}\r\n","<!--game-detail.component.html-->\r\n<form [formGroup]=\"gameUpdateForm\" (ngSubmit)=\"updateGame()\">\r\n\t<div class=\"container\">\r\n\t\t<span *ngIf = \"showMsg\" class=\"text-success\">{{msg}}</span>\r\n\t\t<div class=\"form-row\">\r\n\t\t\t<div class=\"col non-form-element\"><strong>Game id: </strong>{{ _game.id }}</div>\r\n\t\t\t<div class=\"col non-form-element\"><strong>Region: </strong>{{ _game.region }}</div>\r\n      <div class=\"form-group col\"></div>\r\n\t\t</div>\r\n\t\t\t\r\n\t\t<div class=\"form-row align-items-center\">\r\n\t\t\t<div class=\"col non-form-element\"><strong>Team 1: </strong>{{ _game.team1 }}</div>\r\n\t\t\t<div class=\"form-group col\">\r\n\t\t\t\t<label for=\"team1_score\">Team 1 Score:</label>\r\n\t\t\t    <input type=\"number\" class=\"form-control\"\r\n\t\t\t    id=\"team1_score\" [formControl] = \"team1_score\">\r\n\t\t\t</div>\r\n\t\t\t<div class=\"form-group col\">\r\n\t\t\t\t<label for=\"spread\">Game Spread:</label>\r\n\t\t\t    <input type=\"number\" class=\"form-control\"\r\n\t\t\t    id=\"spread\" [formControl] = \"spread\">\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"form-row align-items-center\">\r\n\t\t\t<div class=\"col non-form-element\"><strong>Team 2: </strong>{{ _game.team2 }}</div>\r\n\t\t\t<div class=\"form-group col\">\r\n\t\t\t\t<label for=\"team2_score\">Team 2 Score:</label>\r\n\t\t\t    <input type=\"number\" class=\"form-control\"\r\n\t\t\t    id=\"team2_score\" [formControl] = \"team2_score\">\r\n\t\t\t</div>\r\n\t\t\t<div class=\"form-group col\"></div>\r\n\t\t</div>\r\n    <div class=\"form-row align-items-center\">\r\n      <div class=\"col non-form-element\"><strong>Game Date/Time:</strong></div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"game_date\">Date:&nbsp;</label>\r\n        <p-calendar \r\n          [formControl]=\"game_date\" \r\n          dateFormat=\"yy-mm-dd\" \r\n          dataType=\"string\"\r\n          id=\"game_date\"\r\n          >\r\n        </p-calendar>\r\n      </div>\r\n      <div class=\"form-group col\">\r\n        <label for=\"game_time\">Time (ET):&nbsp;</label>\r\n        <p-calendar \r\n          [formControl]=\"game_time\" \r\n          [timeOnly]=\"true\" \r\n          [hourFormat]=\"12\" \r\n          dataType=\"string\"\r\n          id=\"game_time\"\r\n          >\r\n        </p-calendar>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-row align-items-center\">\r\n      <div class=\"col non-form-element\"><strong>Send Email?:</strong></div>\r\n      <div class=\"form-group col\">\r\n        <input type=\"checkbox\" [formControl]=\"send_email\"/>\r\n      </div>\r\n      <div class=\"form-group col\"></div>\r\n    </div>\r\n\t\t<div class=\"form-row\">\r\n\t\t\t<button type=\"submit\" id=\"submit\" class=\"btn btn-success\" \r\n        [disabled]=\"!gameUpdateForm.valid\">Update Game</button>\r\n\t\t\t&nbsp;\r\n\t\t</div>\r\n\t</div>\r\n</form>\r\n<br>\r\n<br>\r\n<br>\r\n<div class = \"container\">\r\n\t<div class=\"row justify-content-start\">\r\n\t\t<div class = \"col\">\r\n\t\t\t<button class=\"btn btn-info\" (click)=\"resetGame()\">Reset Game</button>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n<br>","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { TBracketService } from '../../core/tbracket.service';\r\nimport { EntryService } from '../../core/entry.service';\r\nimport { GameService } from '../../core/game.service';\r\n\r\nimport { TBracketData, EntryData } from '../../shared/interfaces';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\nimport { SendOrigModalComponent } from './send-orig-modal.component';\r\nimport { SendGamesModalComponent } from './send-games-modal.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-send-emails',\r\n  templateUrl: './send-emails.component.html',\r\n  styleUrls: ['./send-emails.component.css']\r\n})\r\nexport class SendEmailsComponent implements OnInit {\r\n\r\n\t_tbracketList: TBracketData[];\r\n\tsendOrigModalRef: BsModalRef;\r\n\tsendGamesModalRef: BsModalRef;\r\n\t// emailTargetList: string[];\r\n  emailTargetList: any[];\r\n\r\n\tconstructor(\r\n\t\tprivate _tbracketService: TBracketService,\r\n\t\tprivate _entryService: EntryService,\r\n\t\tprivate _gameService: GameService,\r\n\t\tprivate modalService: BsModalService,\r\n\t) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.resetList();\r\n\t}\r\n\r\n\tresetList() {\r\n\t\t//refresh Tbracket list\r\n\t\tthis._tbracketService.getList().subscribe(data => {\r\n\t\t\tthis._tbracketList = data;\r\n\t\t})\r\n\t\t// console.log(\"Tbracket List has been reset\")\r\n\t} // end resetList()\r\n\r\n\topenSendOrigModal(bracket_id: number, bracket_name: string) {\r\n\t\tthis._entryService.getEntryListByBracket(bracket_id).subscribe(data => {\r\n      // Create an array of player names to display in modal\r\n      const emailTargetList = data.map(target => ({ id: target.player_id, player:target.player }));\r\n      // console.log(\"Raw list of players = \", emailTargetList);\r\n\t\t\t\r\n      // Create a unique list of targets users, eliminating duplicates of owner(s) having 2+ entries\r\n      // this.emailTargetList = emailTargetList.filter((value, index, array) => array.indexOf(value) == index);\r\n      const ids = emailTargetList.map(o => o.id)\r\n      this.emailTargetList = emailTargetList.filter(({id}, index) => !ids.includes(id, index + 1))\r\n\t\t\t// console.log(\"De-duped List of players = \", this.emailTargetList);\r\n\t\t\tconst initialState = {\r\n\t\t\t\ttbracket_id: bracket_id,\r\n\t\t\t\ttbracket_name: bracket_name,\r\n\t\t\t\temailTargetList: this.emailTargetList,\r\n\t\t\t\tnum_targets: this.emailTargetList.length\r\n\t\t\t};\r\n\t\t\tthis.sendOrigModalRef = this.modalService.show(SendOrigModalComponent, {initialState});\r\n\t\t})\r\n\t\t\r\n\t\tthis.modalService.onHidden.subscribe((reason: string) => {\r\n\t    \t// Upon modal being closed run these actions\r\n\t        this.resetList();\r\n\t    })\r\n\t\t// console.log(\"Tbracket \", bracket_name, \" with id: \", bracket_id, \"will invoke send_emails API\");\r\n\t}\r\n\r\n\topenSendGamesModal(bracket_id: number, bracket_name: string){\r\n\t\t\tconst initialState = {\r\n\t\t\t\ttbracket_id: bracket_id,\r\n\t\t\t\ttbracket_name: bracket_name,\r\n\t\t\t};\r\n\t\t\tthis.sendGamesModalRef = this.modalService.show(SendGamesModalComponent, {initialState});\r\n\t\t// })\r\n\r\n\t\tthis.modalService.onHidden.subscribe((reason: string) => {\r\n\t    \t// Upon modal being closed run these actions\r\n\t        this.resetList();\r\n\t    })\r\n\r\n\t}\r\n\r\n\r\n}","<!--send-emails.component.html-->\r\n\r\n<br>\r\n<h6><strong>Email Actions</strong></h6>\r\n<br>\r\n<table class=\"table table-sm\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">#</th>\r\n\t\t\t<th scope=\"col\">Name</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 10%\">Num Entries</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 10%\">Id</th>\r\n\t\t\t<th scope=\"col\">Email Actions</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr *ngFor = \"let tbracket of _tbracketList; let i = index\">\r\n\t\t\t<th scope=\"row\">{{i + 1}}</th>\r\n\t\t\t<td>{{ tbracket.name }}</td>\r\n\t\t\t<td>{{ tbracket.entry_count}}</td>\r\n\t\t\t<td>{{ tbracket.id }}</td>\r\n\t\t\t<td>\r\n\t\t\t\t<button class=\"btn btn-success\" (click)=\"openSendOrigModal(tbracket.id, tbracket.name)\">Send Orig Teams</button>\r\n\t\t\t\t&nbsp;\r\n\t\t\t\t<button class=\"btn btn-outline-success\" (click)=\"openSendGamesModal(tbracket.id, tbracket.name)\">Send Games</button>\r\n\t\t\t\t&nbsp;\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { GameService } from '../../core/game.service';\r\n\r\nimport { TBracketData, EntryData } from '../../shared/interfaces';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n  selector: 'modal-content',\r\n  templateUrl: './send-games-modal.component.html'\r\n})\r\n \r\nexport class SendGamesModalComponent implements OnInit {\r\n\ttbracket_id: number;\r\n\ttbracket_name: string;\r\n\ttround_values: number[];\r\n\tgamesList: string[];\r\n  game_entry: string;\r\n \r\n\tconstructor(\r\n\t\tpublic sendGamesModalRef: BsModalRef,\r\n\t\tprivate _gameService: GameService,\r\n\t) {}\r\n\r\n\tngOnInit() {\r\n\t\tthis.tround_values = [1, 2, 3, 4, 5, 6]; // Tournament rounds possible from which to select games\r\n\t\tthis.refreshGameListing(this.tround_values[0]); // Generate games listing based on Round 1 as default\r\n\t}\r\n\r\n\tsendGamesEmail(bracket_id: number, round_id: number) {\r\n\t\t// console.log(\"Tbracket with id: \", bracket_id, \"for tround\", round_id, \"will invoke emailGamesToOwners API\");\r\n\t\t\r\n\t\tthis._gameService.emailGamesToOwners(bracket_id, round_id).subscribe((data) => {\r\n\t\t\tconsole.log(\"Tbracket with id: \", data['tbracketid'] ,\" for Round\", round_id, \"owners have had today's games sent!\");\r\n\t\t});\r\n\t}\r\n\r\n\tonOptionsSelected(value:number){\r\n\t     // console.log(\"the selected value is \" + value);\r\n\t     this.refreshGameListing(value);\r\n\r\n     }\r\n\r\n  refreshGameListing(value: number){\r\n    this._gameService.getGamesSpreadNoScore(value).subscribe(data => {\r\n      this.gamesList = data.map(target => {\r\n        // Build an array of games to display in modal\r\n        if (target.spread > 0) {\r\n          // return ' ' + target.team1 + ' [-' + target.spread + '.5] vs.' +target.team2;\r\n          this.game_entry = ' ' + target.team1 + ' [-' + target.spread + '.5] vs.' +target.team2;\r\n        }\r\n        else if (target.spread == 0) {\r\n          // return ' ' + target.team1 + ' [PICK EM] vs. ' + target.team2;\r\n          this.game_entry = ' ' + target.team1 + ' [PICK EM] vs. ' + target.team2;\r\n        }\r\n        else {\r\n          // return ' ' + target.team1 + ' vs. ' + target.team2 + ' [-' + -target.spread + '.5]';\r\n          this.game_entry = ' ' + target.team1 + ' vs. ' + target.team2 + ' [-' + -target.spread + '.5]';\r\n        }\r\n        if (target.tipoff_date) {\r\n          this.game_entry += ' at ' + target.tipoff_time + ' on ' + target.tipoff_date;\r\n        }\r\n        return this.game_entry;\r\n      })\r\n    })\r\n  }\r\n}","<!--send-games-modal.component.html-->\r\n\r\n<div *ngIf = \"gamesList\">\r\n\t<div class=\"modal-header\">\r\n\t\t<h4 class=\"modal-title pull-left\">Confirm Send Games Emails</h4>\r\n\t\t<button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"sendGamesModalRef.hide()\">\r\n\t\t\t<span aria-hidden=\"true\">&times;</span>\r\n\t\t</button>\r\n\t</div>\r\n\t<div class=\"modal-body\">\r\n\t\t<h6>Are you sure you want to send emails to players of <strong>{{ tbracket_name }}</strong></h6>\r\n\t\t<h6>bracket involved with games in Round #:\t\r\n\t\t<select class = \"select-option\" #troundSelect (change)=\"onOptionsSelected(troundSelect.value)\">\r\n\t\t\t<option class = \"option\" *ngFor = \"let value of tround_values\" [value]=\"value\">{{value}}</option>\r\n\t\t</select></h6>\r\n\t\t<br>\r\n\t\t<ol>\r\n\t\t\t<li *ngFor = \"let game of gamesList; let i = index\">{{ game }}</li>\r\n\t\t</ol>\r\n\t\t<p *ngIf = \"gamesList.length==0\" class=\"text-danger\">There aren't any new games with spreads posted that Round!</p>\r\n\t</div>\r\n\t<div class=\"modal-footer\">\r\n\t\t<button type=\"button\" class=\"btn btn-outline-success\" (click)=\"sendGamesModalRef.hide(); \r\n\t\tsendGamesEmail(tbracket_id, troundSelect.value)\">Send emails</button>\r\n\t</div>\r\n</div>","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { EntryService } from '../../core/entry.service';\r\n\r\nimport { EntryData } from '../../shared/interfaces';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n  selector: 'modal-content',\r\n  templateUrl: './send-orig-modal.component.html'\r\n})\r\n \r\nexport class SendOrigModalComponent implements OnInit {\r\n  tbracket_id: number;\r\n  tbracket_name: string;\r\n  emailTargetList: string[];\r\n  num_targets: number;\r\n \r\n  constructor(\r\n\tpublic sendOrigModalRef: BsModalRef,\r\n\tprivate _entryService: EntryService,\r\n\t) {}\r\n \r\n\tngOnInit() {\r\n\t}\r\n\r\n\tsendOriginalTeamsEmail(bracket_id: number) {\r\n\t\t// console.log(\"Tbracket with id: \", bracket_id, \"will invoke send_emails API\");\r\n\t\t\r\n\t\tthis._entryService.emailOrigTeamsToOwners(bracket_id).subscribe((data) => {\r\n\t\t\tconsole.log(\"Tbracket with id: \", data['tbracketid'] ,\" have had emails sent!\");\r\n\t\t});\r\n\t}\r\n}","<!--send-orig-modal.component.html-->\r\n\r\n<div class=\"modal-header\">\r\n\t<h4 class=\"modal-title pull-left\">Confirm Send Original Teams Email</h4>\r\n\t<button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"sendOrigModalRef.hide()\">\r\n\t\t<span aria-hidden=\"true\">&times;</span>\r\n\t</button>\r\n</div>\r\n<div class=\"modal-body\">\r\n\t<h6>Are you sure you want to send emails to these {{num_targets}} players of <strong>{{ tbracket_name }}</strong> bracket?</h6>\r\n\t<ol>\r\n\t\t<li *ngFor = \"let target of emailTargetList; let i = index\">{{ target.player }}</li>\r\n\t</ol>\r\n</div>\r\n<div class=\"modal-footer\">\r\n\t<button type=\"button\" class=\"btn btn-success\" (click)=\"sendOrigModalRef.hide(); \r\n\tsendOriginalTeamsEmail(tbracket_id)\">Send emails</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { GameService } from '../../core/game.service';\r\nimport { GameData } from '../../shared/interfaces';\r\nimport { UntypedFormBuilder, UntypedFormGroup, AbstractControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-update-games',\r\n  templateUrl: './update-games.component.html',\r\n  styleUrls: ['./update-games.component.css']\r\n})\r\nexport class UpdateGamesComponent implements OnInit {\r\n\r\n\t// Retrieve Game form variables\r\n\tgameRetrieveForm: UntypedFormGroup;\r\n\tgame_id : AbstractControl;\r\n\t_currentGame : GameData;\r\n\t\r\n\r\n\tconstructor(\r\n\t\tprivate _gameService: GameService,\r\n\t\tprivate fb: UntypedFormBuilder,\r\n\t\t) {\r\n\t\t// Retrieve Game form setup\r\n\t\tthis.gameRetrieveForm = fb.group({\r\n\t\t\t'game_id' : ['', Validators.required],\r\n\t\t});\r\n\t\tthis.game_id = this.gameRetrieveForm.controls['game_id']; // allows for other properties, e.g. error values\r\n\r\n\t\t}\r\n\r\n\tngOnInit() {\r\n\t}\r\n\r\n\tretrieveGame() {\r\n\t\tthis._gameService.getGameDetails(this.game_id.value).subscribe((data) => {\r\n\t\t\t// console.log(\"Game retrieved is:\", data);\r\n\t\t\tthis._currentGame = data;\r\n\t\t\tthis.gameRetrieveForm.reset(); // clear out fields after form submit\r\n\t\t});\r\n\t\t\r\n\t} //end retrieveGame()\r\n\r\n\tresetAllGames() {\r\n\t\tthis._gameService.resetAllGames().subscribe((data) => {\r\n\t\t\tconsole.log(\"All Games Reset!\");\r\n\t\t});\r\n\t}\r\n\r\n\treplayAllGames() {\r\n\t\tthis._gameService.replayAllGames().subscribe((data) => {\r\n\t\t\tconsole.log(\"All Games Replayed!\");\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","<!--update-gamess.component.html-->\r\n<br>\r\n<h5><strong>Retrieve Game</strong></h5>\r\n<div class=\"container\">\r\n\t<div class = \"row\">\r\n\t\t<div class = \"col\">\r\n\t\t\t<form [formGroup]=\"gameRetrieveForm\" (ngSubmit)=\"retrieveGame()\">\r\n\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t<div class=\"form-group col-3\">\r\n\t\t\t\t\t\t    <input type=\"number\" min = \"1\" max = \"63\" class=\"form-control\" placeholder=\"Enter game id to Update..\"\r\n                id=\"game_id\" [formControl] = \"game_id\">\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"col\">\r\n\t\t\t\t\t\t\t<button type=\"submit\" id=\"submit\" class=\"btn btn-success\" \r\n\t\t\t\t\t\t\t[disabled]=\"!gameRetrieveForm.valid\">Retrieve Game</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t</div> <!--row-->\r\n</div> <!--container-->\r\n<br>\r\n\r\n<h5><strong>Update Game</strong></h5>\r\n<app-game-detail *ngIf=\"_currentGame\" [game]=\"_currentGame\"></app-game-detail>\r\n<br>\r\n<h5><strong>Testing Features</strong></h5>\r\n<div class = \"col\">\r\n\t<button class=\"btn btn-dark\" (click)=\"replayAllGames()\">Replay All Games</button>\r\n\t&nbsp;\r\n\t<button class=\"btn btn-warning\" (click)=\"resetAllGames()\">Reset All Games (Testing Only)</button>\r\n</div>\r\n<br>","// ./src/app/app-bootstrap.module.ts\r\n// This module is used to import 3rd party UI modules \r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n// ngx-bootstrap modules\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BsDropdownModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    CollapseModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n  ],\r\n  exports: [BsDropdownModule, TooltipModule, ModalModule, CollapseModule, TabsModule]\r\n})\r\nexport class AppBootstrapModule {}","// ./src/app/app-routing.module.ts\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport {\r\n  routes as childRoutes,\r\n  AdminModule\r\n} from './admin/admin.module';\r\n\r\nimport { UserResolver } from './core/user-resolver';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { BracketsComponent } from './brackets/brackets.component';\r\n\r\nimport { IsAdminGuard } from './core/is-admin.guard';\r\nimport { RosterComponent } from './roster/roster.component';\r\n\r\nconst routes: Routes = [\r\n\t{ path: '', redirectTo: '/home', pathMatch: 'full' },\r\n  { path: 'home',\r\n    component: HomeComponent,\r\n    resolve: { loggedInUser: UserResolver },\r\n    runGuardsAndResolvers: 'always' },\r\n  { path: 'profile', \r\n    component: ProfileComponent,\r\n    resolve: { loggedInUser: UserResolver } },\r\n  { path: 'brackets/:id', component: BracketsComponent },\r\n\t{ path: 'logout', \r\n      component: LogoutComponent,\r\n      resolve: {url: 'externalUrlRedirectResolver'},\r\n      data: {externalUrl: '/logout/'}},\r\n  { path: 'admin',\r\n    canActivate: [IsAdminGuard],\r\n    children: childRoutes\r\n  },\r\n  { path: '**', redirectTo: '/home', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\r\n  exports: [RouterModule],\r\n  providers: [\r\n  \t{ // to be able to reference an external url within Routes\r\n      provide: 'externalUrlRedirectResolver',\r\n      useValue: (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) =>\r\n      { window.location.href = (route.data as any).externalUrl; }\r\n    },\r\n    UserResolver,\r\n  ],\r\n})\r\n\r\nexport class AppRoutingModule { }","import { Component, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from './core/user.service';\r\nimport { IUserData } from './shared/interfaces';\r\n\r\nimport { Store } from 'redux';\r\nimport { AppStore } from './app.store';\r\nimport { AppState } from './app.state';\r\nimport * as UserActions from './core/user.actions';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'front-end';\r\n  token_id : object;\r\n  currentUser : IUserData;\r\n  \r\n  constructor(\r\n    private router: Router, \r\n    private _userService: UserService, \r\n    ) { };\r\n\r\n  ngOnInit() {\r\n    // Check to see if app is being intiatiated from Django shell or directly from terminal\r\n    // By looking at localStorage for 'tokenid' that Django passes\r\n    if (window.localStorage.getItem('tokenid')) {\r\n    \t// Get token passed from Django view to localStorage and pass to UserService\r\n      // refresh UserService token for subsequent use, removeItem from localStorage\r\n      \r\n      this.token_id = JSON.parse(window.localStorage.getItem('tokenid'));\r\n      // console.log (\"token is: \", this.token_id);\r\n      this._userService.id = this.token_id['id'];\r\n      this._userService.token = this.token_id['token'];\r\n      if (this.token_id['before_tourney'] == \"True\") {\r\n        this._userService.beforeTourney = true\r\n      } else {\r\n        this._userService.beforeTourney = false\r\n      };\r\n      this._userService.refreshToken();\r\n      window.localStorage.clear();\r\n    }\r\n      // *** For testing purposes when launch Angular via 'ng serve --proxy-config proxyconfig.json' from project folder\r\n      // Login via _userService to establish token with preset values ***\r\n    else {\r\n      this._userService.beforeTourney = false;\r\n      this._userService.id = 1;\r\n      this._userService.login({'email': 'paulrmaurer@yahoo.com', 'password': 'Quakers1!'});\r\n      // this._userService.id = 2;\r\n      // this._userService.login({'email': 'nhoerner@cubs.com', 'password': 'DavidRoss3!'});\r\n      // this._userService.id = 8;\r\n      // this._userService.login({'email': 'bzobrist@cubs.com', 'password': 'Maddon55'});\r\n      // this._userService.id = 29;\r\n      // this._userService.login({'email': 'bzobrist@cubs.com', 'password': 'Maddon55'});\r\n    }\r\n  }\r\n}\r\n","<!--src/app/app.component.html-->\r\n\r\n<app-layout>\r\n\r\n<router-outlet>\r\n<!-- Displays what is specified in path: '' to start, then whatever is clicked above -->\r\n</router-outlet>\r\n\r\n</app-layout>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { appStoreProviders } from './app.store';\r\nimport { AppBootstrapModule } from './app-bootstrap.module';\r\nimport { UiModule } from './ui/ui.module';\r\nimport { AdminModule } from './admin/admin.module';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RosterComponent } from './roster/roster.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { ProfileDetailsComponent } from './profile-details/profile-details.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { BracketsComponent } from './brackets/brackets.component';\r\nimport { ProfileFormModalComponent } from './profile-form-modal/profile-form-modal.component';\r\nimport { TeamDetailsComponent } from './team-details/team-details.component';\r\nimport { DeleteModalComponent } from './admin/create-brackets/delete-bracket-modal.component';\r\nimport { ReassignModalComponent } from './admin/create-brackets/reassign-bracket-modal.component';\r\nimport { ResetModalComponent } from './admin/create-brackets/reset-bracket-modal.component';\r\nimport { StandingsComponent } from './standings/standings.component';\r\nimport { StandingsNavComponent } from './standings-nav/standings-nav.component';\r\nimport { BracketTabComponent } from './bracket-tab/bracket-tab.component';\r\nimport { RosterTextboxComponent } from './roster-textbox/roster-textbox.component';\r\nimport { SendOrigModalComponent } from './admin/send-emails/send-orig-modal.component';\r\nimport { SendGamesModalComponent } from './admin/send-emails/send-games-modal.component';\r\nimport { PartialProfileFormModalComponent } from './profile-form-modal/partial-profile-form-modal.component';\r\nimport { AdminProfileFormModalComponent } from './profile-form-modal/admin-profile-form-modal.component';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        HomeComponent,\r\n        RosterComponent,\r\n        ProfileComponent,\r\n        ProfileDetailsComponent,\r\n        LogoutComponent,\r\n        BracketsComponent,\r\n        ProfileFormModalComponent,\r\n        TeamDetailsComponent,\r\n        DeleteModalComponent,\r\n        ReassignModalComponent,\r\n        ResetModalComponent,\r\n        StandingsComponent,\r\n        StandingsNavComponent,\r\n        BracketTabComponent,\r\n        RosterTextboxComponent,\r\n        SendOrigModalComponent,\r\n        SendGamesModalComponent,\r\n        PartialProfileFormModalComponent,\r\n        AdminProfileFormModalComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        HttpClientModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        AppBootstrapModule,\r\n        UiModule,\r\n        AdminModule,\r\n        FontAwesomeModule,\r\n    ],\r\n    providers: [appStoreProviders],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// .src/app/app.store.ts\r\nimport { InjectionToken } from '@angular/core';\r\nimport {\r\n  Store,\r\n} from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport { AppState } from './app.state';\r\nimport { UserReducer as reducer } from './core/user.reducer';\r\n\r\nexport const AppStore = new InjectionToken('App.store');\r\n\r\nexport function createAppStore(): Store<AppState> {\r\n  return configureStore<AppState, any, any, any>({\r\n    reducer,\r\n  });\r\n}\r\n\r\nexport const appStoreProviders = [\r\n   { provide: AppStore, useFactory: createAppStore }\r\n];","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NewGameWithOwnerData, GameData, RegionData } from '../shared/interfaces';\r\nimport { UserService } from '../core/user.service';\r\nimport { RegionService } from '../core/region.service';\r\n\r\n@Component({\r\n  selector: 'app-bracket-tab',\r\n  templateUrl: './bracket-tab.component.html',\r\n  styleUrls: ['./bracket-tab.component.css']\r\n})\r\nexport class BracketTabComponent implements OnInit {\r\n\r\n\t_bracketOwners: NewGameWithOwnerData[]; //array to capture game owner info\r\n\t_rnd_game_ids: object; //object containing region_id : game_id arrays to get proper game info for each bracket\r\n\t_champion: string; //string to capture champion of bracket\r\n\t_winningTeamOwner: string; //string to capture winning team owner\r\n\t_regionList: RegionData[];\r\n\r\n\t@Input('region') _region_id: number; //id of region passed to component\r\n\t@Input('bracketGames') _bracketGames: GameData[]; //subset of games associated with each Region\r\n\r\n\t//Inject this value from parent component and update team owners as parent bracket is clicked\r\n\t@Input() get bracketOwners(): NewGameWithOwnerData[] {\r\n\t\treturn this._bracketOwners;\r\n\t}\r\n\tset bracketOwners(value: NewGameWithOwnerData[]) {\r\n\t\tif (value) {\r\n\t\t\tthis._bracketOwners = value;\r\n\t\t\t// console.log (\"Detail component bracketOwners for \", this._region_id, \" Region\", this._bracketOwners);\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(\r\n\t\tprivate _userService: UserService,\r\n\t\tprivate _regionService: RegionService) { }\r\n\r\n\tngOnInit() {\r\n\t\t// console.log (\"Detail component bracketGames for \", this._region_id, \" Region\", this._bracketGames);\r\n\r\n\t\t//Create game id arrays for each Round with round # as index\r\n\t\tthis._rnd_game_ids = {}\r\n\t\tthis._rnd_game_ids[1] = Array.from({length: 8}, (v, k) => k+ 1 + this.getRdIncr(1));\r\n\t\tthis._rnd_game_ids[2] = Array.from({length: 4}, (v, k) => k+33 + this.getRdIncr(2));\r\n\t\tthis._rnd_game_ids[3] = Array.from({length: 2}, (v, k) => k+49 + this.getRdIncr(3));\r\n\t\tthis._rnd_game_ids[4] = Array.from({length: 1}, (v, k) => k+57 + this.getRdIncr(4));\r\n\t\tthis._rnd_game_ids[5] = [61, 62];\r\n\t\tthis._rnd_game_ids[6] = [63];\r\n\t\t// console.log (\"This region array of game numbers is\", this._rnd_game_ids);\r\n\r\n\t\t// Retrieve list of regions to display in tabs, but only make this http call once for Final Four tab\r\n\t\tif (this._region_id==5) {\r\n\t\t\tthis._regionService.getRegionList().subscribe(data => {\r\n\t\t\t\tthis._regionList = data;\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tgetRdIncr(x) { //x = round #\r\n\t\t//To identify proper increment to add to South Region game id arrays\r\n\t\t//to generate other regions' game ids\r\n\t\tswitch(this._region_id) {\r\n\t\t\tcase 1: { return 0; break; }\r\n\t\t\tcase 2: {\r\n\t\t\t\tswitch(x) {\r\n\t\t\t\t\tcase 1: {return 8; break; }\r\n\t\t\t\t\tcase 2: {return 4; break; }\r\n\t\t\t\t\tcase 3: {return 2; break; }\r\n\t\t\t\t\tcase 4: {return 1; break; }\r\n\t\t\t\t}}\r\n\t\t\tcase 3: {\r\n\t\t\t\tswitch(x) {\r\n\t\t\t\t\tcase 1: {return 16; break; }\r\n\t\t\t\t\tcase 2: {return 8; break; }\r\n\t\t\t\t\tcase 3: {return 4; break; }\r\n\t\t\t\t\tcase 4: {return 2; break; }\r\n\t\t\t\t}}\r\n\t\t\tcase 4: {\r\n\t\t\t\tswitch(x) {\r\n\t\t\t\t\tcase 1: {return 24; break; }\r\n\t\t\t\t\tcase 2: {return 12; break; }\r\n\t\t\t\t\tcase 3: {return 6; break; }\r\n\t\t\t\t\tcase 4: {return 3; break; }\r\n\t\t\t\t}}\r\n\t\t} // end outer switch\r\n\t} //end getRdIncr(x)\r\n\r\n\tgetTeam1Result(game: GameData) {\r\n\t\t// To determine whether to show score (post-game) or spread (pre-game)\r\n\t\tif (game.team1_score > 0) {\r\n\t\t\tif (game.spread > 0) {\r\n\t\t\t\treturn game.team1_score + '('+ (-game.spread - 0.5) + ')'\r\n\t\t\t}\r\n\t\t\telse if (game.spread == 0) {\r\n\t\t\t\treturn game.team1_score + '(PK)'\r\n\t\t\t}\r\n\t\t\telse {return game.team1_score}\r\n\t\t}\r\n\t\telse if (game.spread > 0) {\r\n\t\t\treturn -game.spread - 0.5\r\n\t\t}\r\n\t\telse if (game.spread == 0) {\r\n\t\t\treturn 'PK'\r\n\t\t}\r\n\t} // end getTeam1Result(game)\r\n\r\n\tgetTeam2Result(game: GameData) {\r\n\t\t// To determine whether to show score (post-game) or spread (pre-game)\r\n\t\tif (game.team2_score > 0) {\r\n\t\t\tif (game.spread < 0) {\r\n\t\t\t\treturn game.team2_score + '('+ (game.spread - 0.5) + ')'\r\n\t\t\t}\r\n\t\t\telse {return game.team2_score}\r\n\t\t\t\r\n\t\t}\r\n\t\telse if (game.spread < 0) {\r\n\t\t\treturn game.spread - 0.5\r\n\t\t}\r\n\t} // end getTeam2Result(game)\t\t\r\n\r\n\r\n\tgetChampion() {\r\n\t\t// To identify champion for display on bracket\r\n\t\tvar isChampion = false\r\n\t\tif (this._bracketGames[63] && this._bracketGames[63].team1_score && this._bracketGames[63].team2_score) {\r\n\t\t\tisChampion = true\r\n\t\t\t// console.log(\"Determining championship info...\", this._bracketGames[63], this._bracketOwners[63])\r\n      if (this._bracketGames[63].team1_score > this._bracketGames[63].team2_score ) {\r\n\t\t\t\tthis._champion = this._bracketGames[63].team1\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._champion = this._bracketGames[63].team2\r\n\t\t\t}\r\n      this._winningTeamOwner = this._bracketOwners[63].winner\r\n\t\t}\r\n\t\treturn isChampion\r\n\t} //end getChampion\r\n\r\n}\r\n","<!-- src/app/bracket-tab/bracket-tab.component.html -->\r\n<main>\r\n\t<ng-container *ngIf=\"_region_id <= 4\">\r\n\t\t<ul class=\"rnd-title\"  *ngFor=\"let number of [1,2,3,4]\">Round {{number}}</ul>\r\n\t</ng-container>\r\n\t<ng-container *ngIf=\"_region_id == 5\">\r\n\t\t<ul class=\"rnd-title\">Final Four</ul>\r\n\t\t<ul class=\"rnd-title\">Finals</ul>\r\n\t\t<ul class=\"rnd-title\">Champion</ul>\r\n\t</ng-container>\r\n</main>\r\n\r\n<main *ngIf=\"_bracketGames && _bracketOwners\">\r\n\t<!-- First round games -->\r\n\t<ul class=\"round round-1\" *ngIf=\"_region_id <= 4\">\r\n\t\t<ng-template ngFor let-g [ngForOf]=\"_rnd_game_ids[1]\">\r\n\t\t\t<li class=\"spacer\">&nbsp;</li>\r\n\t\t\t<li class=\"game game-top\"\r\n\t\t\t\t[ngClass]=\"{'text-light bg-success':_userService.id == _bracketOwners[g].team1_owner_id}\">\r\n\t\t\t\t{{ _bracketGames[g].team1}}\r\n\t\t\t\t<ng-container *ngIf=\"_bracketOwners[g].team1_owner && _userService.id == _bracketOwners[g].team1_owner_id\">\r\n\t\t\t\t\t({{ _bracketOwners[g].team1_owner }})\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<ng-container *ngIf=\"_bracketOwners[g].team1_owner && _userService.id != _bracketOwners[g].team1_owner_id\">\r\n\t\t\t\t\t<a [routerLink]=\"['/profile']\" [queryParams]=\"{id: _bracketOwners[g].team1_owner_id}\">\r\n\t\t\t\t\t\t({{ _bracketOwners[g].team1_owner }})\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<span>{{ getTeam1Result(_bracketGames[g]) }}</span>\r\n\t\t\t</li>\r\n\t\t\t<li class=\"game game-spacer\">\r\n        <ng-container *ngIf = \"_bracketGames[g].tipoff_date_time\">\r\n          {{ _bracketGames[g].tipoff_date }}&nbsp;\r\n          {{ _bracketGames[g].tipoff_time }}&nbsp;\r\n        </ng-container>\r\n      </li>\r\n\t\t\t<li class=\"game game-bottom\"\r\n\t\t\t\t[ngClass]=\"{'text-light bg-success':_userService.id == _bracketOwners[g].team2_owner_id}\">\r\n\t\t\t\t{{ _bracketGames[g].team2}}\r\n\t\t\t\t<ng-container *ngIf=\"_bracketOwners[g].team2_owner && _userService.id == _bracketOwners[g].team2_owner_id\">\r\n\t\t\t\t\t({{ _bracketOwners[g].team2_owner }})\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<ng-container *ngIf=\"_bracketOwners[g].team2_owner && _userService.id != _bracketOwners[g].team2_owner_id\">\r\n\t\t\t\t\t<a [routerLink]=\"['/profile']\" [queryParams]=\"{id: _bracketOwners[g].team2_owner_id}\">\r\n\t\t\t\t\t\t({{ _bracketOwners[g].team2_owner }})\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<span>{{ getTeam2Result(_bracketGames[g]) }}</span>\r\n\t\t\t</li>\r\n\t\t</ng-template>\r\n\t\t<li class=\"spacer\">&nbsp;</li>\r\n\t</ul>\r\n\t<!-- Second round games -->\r\n\t<ul class=\"round round-2\" *ngIf=\"_region_id <= 4\">\r\n\t\t<ng-template ngFor let-g [ngForOf]=\"_rnd_game_ids[2]\">\r\n\t\t\t<li class=\"spacer\">&nbsp;</li>\r\n\t\t\t<li class=\"game game-top\"\r\n\t\t\t\t[ngClass]=\"{'text-light bg-success':_userService.id == _bracketOwners[g].team1_owner_id}\">\r\n\t\t\t\t{{ _bracketGames[g].team1}}\r\n\t\t\t\t<ng-container *ngIf=\"_bracketOwners[g].team1_owner && _userService.id == _bracketOwners[g].team1_owner_id\">\r\n\t\t\t\t\t({{ _bracketOwners[g].team1_owner }})\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<ng-container *ngIf=\"_bracketOwners[g].team1_owner && _userService.id != _bracketOwners[g].team1_owner_id\">\r\n\t\t\t\t\t<a [routerLink]=\"['/profile']\" [queryParams]=\"{id: _bracketOwners[g].team1_owner_id}\">\r\n\t\t\t\t\t\t({{ _bracketOwners[g].team1_owner }})\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<span>{{ getTeam1Result(_bracketGames[g]) }}</span>\r\n\t\t\t</li>\r\n\t\t\t<li class=\"game game-spacer\">\r\n        <ng-container *ngIf = \"_bracketGames[g].tipoff_date_time\">\r\n          {{ _bracketGames[g].tipoff_date }}&nbsp;\r\n          {{ _bracketGames[g].tipoff_time }}&nbsp;\r\n        </ng-container>\r\n      </li>\r\n\t\t\t<li class=\"game game-bottom\"\r\n\t\t\t\t[ngClass]=\"{'text-light bg-success':_userService.id == _bracketOwners[g].team2_owner_id}\">\r\n\t\t\t\t{{ _bracketGames[g].team2}}\r\n\t\t\t\t<ng-container *ngIf=\"_bracketOwners[g].team2_owner && _userService.id == _bracketOwners[g].team2_owner_id\">\r\n\t\t\t\t\t({{ _bracketOwners[g].team2_owner }})\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<ng-container *ngIf=\"_bracketOwners[g].team2_owner && _userService.id != _bracketOwners[g].team2_owner_id\">\r\n\t\t\t\t\t<a [routerLink]=\"['/profile']\" [queryParams]=\"{id: _bracketOwners[g].team2_owner_id}\">\r\n\t\t\t\t\t\t({{ _bracketOwners[g].team2_owner }})\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<span>{{ getTeam2Result(_bracketGames[g]) }}</span>\r\n\t\t\t</li>\r\n\t\t</ng-template>\r\n\t\t<li class=\"spacer\">&nbsp;</li>\r\n\t</ul>\r\n\t<!-- Third round games -->\r\n\t<ul class=\"round round-3\" *ngIf=\"_region_id <= 4\">\r\n\t\t<ng-template ngFor let-g [ngForOf]=\"_rnd_game_ids[3]\">\r\n\t\t\t<li class=\"spacer\">&nbsp;</li>\r\n\t\t\t<li class=\"game game-top\"\r\n\t\t\t\t[ngClass]=\"{'text-light bg-success':_userService.id == _bracketOwners[g].team1_owner_id}\">\r\n\t\t\t\t{{ _bracketGames[g].team1}}\r\n\t\t\t\t<ng-container *ngIf=\"_bracketOwners[g].team1_owner && _userService.id == _bracketOwners[g].team1_owner_id\">\r\n\t\t\t\t\t({{ _bracketOwners[g].team1_owner }})\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<ng-container *ngIf=\"_bracketOwners[g].team1_owner && _userService.id != _bracketOwners[g].team1_owner_id\">\r\n\t\t\t\t\t<a [routerLink]=\"['/profile']\" [queryParams]=\"{id: _bracketOwners[g].team1_owner_id}\">\r\n\t\t\t\t\t\t({{ _bracketOwners[g].team1_owner }})\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<span>{{ getTeam1Result(_bracketGames[g]) }}</span>\r\n\t\t\t</li>\r\n\t\t\t<li class=\"game game-spacer\">\r\n        <ng-container *ngIf = \"_bracketGames[g].tipoff_date_time\">\r\n          {{ _bracketGames[g].tipoff_date }}&nbsp;\r\n          {{ _bracketGames[g].tipoff_time }}&nbsp;\r\n        </ng-container>\r\n      </li>\r\n\t\t\t<li class=\"game game-bottom\"\r\n\t\t\t\t[ngClass]=\"{'text-light bg-success':_userService.id == _bracketOwners[g].team2_owner_id}\">\r\n\t\t\t\t{{ _bracketGames[g].team2}}\r\n\t\t\t\t<ng-container *ngIf=\"_bracketOwners[g].team2_owner && _userService.id == _bracketOwners[g].team2_owner_id\">\r\n\t\t\t\t\t({{ _bracketOwners[g].team2_owner }})\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<ng-container *ngIf=\"_bracketOwners[g].team2_owner && _userService.id != _bracketOwners[g].team2_owner_id\">\r\n\t\t\t\t\t<a [routerLink]=\"['/profile']\" [queryParams]=\"{id: _bracketOwners[g].team2_owner_id}\">\r\n\t\t\t\t\t\t({{ _bracketOwners[g].team2_owner }})\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<span>{{ getTeam2Result(_bracketGames[g]) }}</span>\r\n\t\t\t</li>\r\n\t\t</ng-template>\r\n\t\t<li class=\"spacer\">&nbsp;</li>\r\n\t</ul>\r\n\t<!-- Fourth round games -->\r\n\t<ul class=\"round round-4\" *ngIf=\"_region_id <= 4\">\r\n\t\t<ng-template ngFor let-g [ngForOf]=\"_rnd_game_ids[4]\">\r\n\t\t\t<li class=\"spacer\">&nbsp;</li>\r\n\t\t\t<li class=\"game game-top\"\r\n\t\t\t\t[ngClass]=\"{'text-light bg-success':_userService.id == _bracketOwners[g].team1_owner_id}\">\r\n\t\t\t\t{{ _bracketGames[g].team1}}\r\n\t\t\t\t<ng-container *ngIf=\"_bracketOwners[g].team1_owner && _userService.id == _bracketOwners[g].team1_owner_id\">\r\n\t\t\t\t\t({{ _bracketOwners[g].team1_owner }})\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<ng-container *ngIf=\"_bracketOwners[g].team1_owner && _userService.id != _bracketOwners[g].team1_owner_id\">\r\n\t\t\t\t\t<a [routerLink]=\"['/profile']\" [queryParams]=\"{id: _bracketOwners[g].team1_owner_id}\">\r\n\t\t\t\t\t\t({{ _bracketOwners[g].team1_owner }})\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<span>{{ getTeam1Result(_bracketGames[g]) }}</span>\r\n\t\t\t</li>\r\n\t\t\t<li class=\"game game-spacer\">\r\n        <ng-container *ngIf = \"_bracketGames[g].tipoff_date_time\">\r\n          {{ _bracketGames[g].tipoff_date }}&nbsp;\r\n          {{ _bracketGames[g].tipoff_time }}&nbsp;\r\n        </ng-container>\r\n      </li>\r\n\t\t\t<li class=\"game game-bottom\"\r\n\t\t\t\t[ngClass]=\"{'text-light bg-success':_userService.id == _bracketOwners[g].team2_owner_id}\">\r\n\t\t\t\t{{ _bracketGames[g].team2}}\r\n\t\t\t\t<ng-container *ngIf=\"_bracketOwners[g].team2_owner && _userService.id == _bracketOwners[g].team2_owner_id\">\r\n\t\t\t\t\t({{ _bracketOwners[g].team2_owner }})\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<ng-container *ngIf=\"_bracketOwners[g].team2_owner && _userService.id != _bracketOwners[g].team2_owner_id\">\r\n\t\t\t\t\t<a [routerLink]=\"['/profile']\" [queryParams]=\"{id: _bracketOwners[g].team2_owner_id}\">\r\n\t\t\t\t\t\t({{ _bracketOwners[g].team2_owner }})\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<span>{{ getTeam2Result(_bracketGames[g]) }}</span>\r\n\t\t\t</li>\r\n\t\t</ng-template>\r\n\t\t<li class=\"spacer\">&nbsp;</li>\r\n\t</ul>\r\n\t<!-- Fifth round games -->\r\n\t<ul class=\"round round-5\" *ngIf=\"_region_id == 5\">\r\n\t\t<ng-template ngFor let-g [ngForOf]=\"_rnd_game_ids[5]\">\r\n\t\t\t<li class=\"spacer\">&nbsp;</li>\r\n\t\t\t<li class=\"game game-title-top\" *ngIf=\"_regionList\">\r\n\t\t\t\t{{ g==61 ? _regionList[0].name : _regionList[2].name }} Region Champion\r\n\t\t\t</li>\r\n\t\t\t<li class=\"game game-top\"\r\n\t\t\t\t[ngClass]=\"{'text-light bg-success':_userService.id == _bracketOwners[g].team1_owner_id}\">\r\n\t\t\t\t{{ _bracketGames[g].team1}}\r\n\t\t\t\t<ng-container *ngIf=\"_bracketOwners[g].team1_owner && _userService.id == _bracketOwners[g].team1_owner_id\">\r\n\t\t\t\t\t({{ _bracketOwners[g].team1_owner }})\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<ng-container *ngIf=\"_bracketOwners[g].team1_owner && _userService.id != _bracketOwners[g].team1_owner_id\">\r\n\t\t\t\t\t<a [routerLink]=\"['/profile']\" [queryParams]=\"{id: _bracketOwners[g].team1_owner_id}\">\r\n\t\t\t\t\t\t({{ _bracketOwners[g].team1_owner }})\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<span>{{ getTeam1Result(_bracketGames[g]) }}</span>\r\n\t\t\t</li>\r\n\t\t\t<li class=\"game game-spacer\">\r\n        <ng-container *ngIf = \"_bracketGames[g].tipoff_date_time\">\r\n          {{ _bracketGames[g].tipoff_date }}&nbsp;\r\n          {{ _bracketGames[g].tipoff_time }}&nbsp;\r\n        </ng-container>\r\n      </li>\r\n\t\t\t<li class=\"game game-title-bottom\" *ngIf=\"_regionList\">\r\n\t\t\t\t{{ g==61 ? _regionList[1].name : _regionList[3].name }} Region Champion\r\n\t\t\t</li>\r\n\t\t\t<li class=\"game game-bottom\"\r\n\t\t\t\t[ngClass]=\"{'text-light bg-success':_userService.id == _bracketOwners[g].team2_owner_id}\">\r\n\t\t\t\t{{ _bracketGames[g].team2}}\r\n\t\t\t\t<ng-container *ngIf=\"_bracketOwners[g].team2_owner && _userService.id == _bracketOwners[g].team2_owner_id\">\r\n\t\t\t\t\t({{ _bracketOwners[g].team2_owner }})\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<ng-container *ngIf=\"_bracketOwners[g].team2_owner && _userService.id != _bracketOwners[g].team2_owner_id\">\r\n\t\t\t\t\t<a [routerLink]=\"['/profile']\" [queryParams]=\"{id: _bracketOwners[g].team2_owner_id}\">\r\n\t\t\t\t\t\t({{ _bracketOwners[g].team2_owner }})\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<span>{{ getTeam2Result(_bracketGames[g]) }}</span>\r\n\t\t\t</li>\r\n\t\t</ng-template>\r\n\t\t<li class=\"spacer\">&nbsp;</li>\r\n\t</ul>\r\n\t<!-- Sixth round games -->\r\n\t<ul class=\"round round-6\" *ngIf=\"_region_id == 5\">\r\n\t\t<ng-template ngFor let-g [ngForOf]=\"_rnd_game_ids[6]\">\r\n\t\t\t<li class=\"spacer\">&nbsp;</li>\r\n\t\t\t<li class=\"game game-title-top\"> </li>\r\n\t\t\t<li class=\"game game-top\"\r\n\t\t\t\t[ngClass]=\"{'text-light bg-success':_userService.id == _bracketOwners[g].team1_owner_id}\">\r\n\t\t\t\t{{ _bracketGames[g].team1}}\r\n\t\t\t\t<ng-container *ngIf=\"_bracketOwners[g].team1_owner && _userService.id == _bracketOwners[g].team1_owner_id\">\r\n\t\t\t\t\t({{ _bracketOwners[g].team1_owner }})\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<ng-container *ngIf=\"_bracketOwners[g].team1_owner && _userService.id != _bracketOwners[g].team1_owner_id\">\r\n\t\t\t\t\t<a [routerLink]=\"['/profile']\" [queryParams]=\"{id: _bracketOwners[g].team1_owner_id}\">\r\n\t\t\t\t\t\t({{ _bracketOwners[g].team1_owner }})\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<span>{{ getTeam1Result(_bracketGames[g]) }}</span>\r\n\t\t\t</li>\r\n\t\t\t<li class=\"game game-spacer\">\r\n        <ng-container *ngIf = \"_bracketGames[g].tipoff_date_time\">\r\n          {{ _bracketGames[g].tipoff_date }}&nbsp;\r\n          {{ _bracketGames[g].tipoff_time }}&nbsp;\r\n        </ng-container>\r\n      </li>\r\n\t\t\t<li class=\"game game-bottom\"\r\n\t\t\t\t[ngClass]=\"{'text-light bg-success':_userService.id == _bracketOwners[g].team2_owner_id}\">\r\n\t\t\t\t{{ _bracketGames[g].team2}}\r\n\t\t\t\t<ng-container *ngIf=\"_bracketOwners[g].team2_owner && _userService.id == _bracketOwners[g].team2_owner_id\">\r\n\t\t\t\t\t({{ _bracketOwners[g].team2_owner }})\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<ng-container *ngIf=\"_bracketOwners[g].team2_owner && _userService.id != _bracketOwners[g].team2_owner_id\">\r\n\t\t\t\t\t<a [routerLink]=\"['/profile']\" [queryParams]=\"{id: _bracketOwners[g].team2_owner_id}\">\r\n\t\t\t\t\t\t({{ _bracketOwners[g].team2_owner }})\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<span>{{ getTeam2Result(_bracketGames[g]) }}</span>\r\n\t\t\t</li>\r\n\t\t</ng-template>\r\n\t\t<li class=\"spacer\">&nbsp;</li>\r\n\t</ul>\r\n\t<!-- Champion -->\r\n\t<ul class=\"round\" *ngIf=\"getChampion() && _region_id==5\">\r\n\t\t<strong>&nbsp;&nbsp;***CHAMPION***</strong>\r\n\t\t<strong>&nbsp;{{_champion}} ({{_winningTeamOwner}})</strong>\r\n\t</ul>\r\n</main>","import { Component, OnInit, Inject, ViewChild, ViewChildren, AfterViewInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { TBracketService } from '../core/tbracket.service';\r\nimport { GameService } from '../core/game.service';\r\nimport { UserService } from '../core/user.service';\r\nimport { RegionService } from '../core/region.service';\r\nimport { TBracketData, RegionData } from '../shared/interfaces';\r\nimport { TabsetComponent } from 'ngx-bootstrap/tabs';\r\n\r\n@Component({\r\n\tselector: 'app-brackets',\r\n\ttemplateUrl: './brackets.component.html',\r\n\tstyleUrls: ['./brackets.component.css']\r\n})\r\nexport class BracketsComponent implements OnInit {\r\n\t@ViewChild('staticTabs') staticTabs: TabsetComponent;\r\n\tprivate id: number; //capture tbracket id url parameter\r\n\ttbracketList: TBracketData[];\r\n\tregionList: RegionData[];\r\n\tloading: boolean;\r\n\t\r\n\t// To capture each regions' games for passing to child component\r\n\tregion1Games: object;\r\n\tregion2Games: object;\r\n\tregion3Games: object;\r\n\tregion4Games: object;\r\n\tffourGames: object;\r\n\t// To capture each regions' games' team1 & team2 owners for child component\r\n\tregion1Owners: object;\r\n\tregion2Owners: object;\r\n\tregion3Owners: object;\r\n\tregion4Owners: object;\r\n\tffourOwners: object;\r\n\r\n\tconstructor(private _tbracketService: TBracketService,\r\n\t\tprivate _gameService: GameService,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate router: Router,\r\n\t\tprivate _userService: UserService,\r\n\t\tprivate _regionService: RegionService\r\n\t\t) { }\r\n\r\n\tngOnInit() {\r\n\t\t \t\r\n\t\t// Subscribe to activated route parameter and update activeBracket to pass to child components\r\n\t\t\t// Based on active bracket (in params), convert each Region's bracket owners (retrieved via Matchup table)\r\n\t\t\t// to indexed arrays for each Region\r\n\t\t\t// FYI - the following line would only work the first time the page is visited:\r\n\t\t// this.id = this.route.snapshot.params['id'];\r\n\t\tthis.loading = true;\r\n\t\tthis.route.params.subscribe(params => {\r\n\t\t\tthis.id = params['id'];\r\n\t\t\tthis._gameService.getNewGameWithMatchupDataList(this.id).subscribe(data => {\r\n\t\t\t\tconst region1Owners = Object.assign({}, ...data\r\n\t\t\t\t\t.filter(item => item.region_id == 1)\r\n\t\t\t\t\t.map(item => ({[item['id']]: item}))\r\n\t\t\t\t\t);\r\n\t\t\t\tthis.region1Owners=region1Owners;\r\n\t\t\t\tconst region2Owners = Object.assign({}, ...data\r\n\t\t\t\t\t.filter(item => item.region_id == 2)\r\n\t\t\t\t\t.map(item => ({[item['id']]: item}))\r\n\t\t\t\t\t);\r\n\t\t\t\tthis.region2Owners=region2Owners;\r\n\t\t\t\tconst region3Owners = Object.assign({}, ...data\r\n\t\t\t\t\t.filter(item => item.region_id == 3)\r\n\t\t\t\t\t.map(item => ({[item['id']]: item}))\r\n\t\t\t\t\t);\r\n\t\t\t\tthis.region3Owners=region3Owners;\r\n\t\t\t\tconst region4Owners = Object.assign({}, ...data\r\n\t\t\t\t\t.filter(item => item.region_id == 4)\r\n\t\t\t\t\t.map(item => ({[item['id']]: item}))\r\n\t\t\t\t\t);\r\n\t\t\t\tthis.region4Owners=region4Owners;\r\n\t\t\t\tconst ffourOwners = Object.assign({}, ...data\r\n\t\t\t\t\t.filter(item => item.region_id == 5)\r\n\t\t\t\t\t.map(item => ({[item['id']]: item}))\r\n\t\t\t\t\t);\r\n\t\t\t\tthis.ffourOwners=ffourOwners;\r\n\t\t\t\t\r\n\t\t\t\tthis.loading = false;\r\n\t\t\t})\r\n\t\t})\r\n\t\t\r\n\t\t// Retrieve game list & convert each Region's games into indexed arrays\r\n\t\t// for passing to child components for display\r\n\t\t// Only call this service 1x since game info doesn't change across brackets\r\n\t\tthis._gameService.getGameList().subscribe(data => {\r\n\t\t\tconst region1Games = Object.assign({}, ...data\r\n\t\t\t\t.filter(item => item.region_id == 1)\r\n\t\t\t\t.map(item => ({[item['id']]: item}))\r\n\t\t\t\t);\r\n\t\t\tthis.region1Games=region1Games;\r\n\t\t\tconst region2Games = Object.assign({}, ...data\r\n\t\t\t\t.filter(item => item.region_id == 2)\r\n\t\t\t\t.map(item => ({[item['id']]: item}))\r\n\t\t\t\t);\r\n\t\t\tthis.region2Games=region2Games;\r\n\t\t\tconst region3Games = Object.assign({}, ...data\r\n\t\t\t\t.filter(item => item.region_id == 3)\r\n\t\t\t\t.map(item => ({[item['id']]: item}))\r\n\t\t\t\t);\r\n\t\t\tthis.region3Games=region3Games;\r\n\t\t\tconst region4Games = Object.assign({}, ...data\r\n\t\t\t\t.filter(item => item.region_id == 4)\r\n\t\t\t\t.map(item => ({[item['id']]: item}))\r\n\t\t\t\t);\r\n\t\t\tthis.region4Games=region4Games;\r\n\t\t\tconst ffourGames = Object.assign({}, ...data\r\n\t\t\t\t.filter(item => item.region_id == 5)\r\n\t\t\t\t.map(item => ({[item['id']]: item}))\r\n\t\t\t\t);\r\n\t\t\tthis.ffourGames=ffourGames;\r\n\t\t})\r\n\r\n\t\t// Retrieve list of brackets for bracket navbar with brackets that player\r\n\t\t// belongs to sorted first\r\n\t\tthis._tbracketService.getListWithPlayer(this._userService.id).subscribe(data => {\r\n\t\t\tthis.tbracketList = data;\r\n\t\t});\r\n\r\n\t\t// Retrieve list of regions to display in tabs\r\n\t\tthis._regionService.getRegionList().subscribe(data => {\r\n\t\t\tthis.regionList = data;\r\n\r\n\t\t\t// Set active tab based on fragment contained in url, if it exists\r\n\t\t\tthis.route.fragment.subscribe((fragment: string) => { \r\n\t\t\t\tif (fragment) {\r\n\t\t\t\t\tvar id : number = parseInt(fragment);\r\n\t\t\t\t\t// console.log(\"Tab Id to navigate to is: \", id);\r\n\t\t\t\t\t// Need the below delay in order for tabs to be rendered \r\n\t\t\t\t\t// (lengthy call to backend to retrieve data) increase if necessary\r\n\t\t\t\t\tsetTimeout(() => {this.staticTabs.tabs[id].active = true;}, 200);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t} //end ngOnInit\r\n\r\n\t// Function to determine which bracket navbar to make 'active' in template based on route param\r\n\tisActive(navbarId: number): boolean {\r\n\t\t// return true to highlight nav bar item that is = route paramter\r\n\t\treturn navbarId == this.id;\r\n\t}\r\n\r\n} //end class\r\n","<!--brackets.component.html-->\r\n\r\n<small class=\"text-muted\">All times are Eastern Time (Click to see bracket)</small>\r\n<div class=\"brackets-nav\">\r\n    <nav class=\"navbar\">\r\n        <ul class=\"nav nav-pills\">\r\n    \t\t<li class = \"nav-item\" *ngFor = \"let tbracket of tbracketList\">\r\n    \t\t\t<a class = \"nav-link\" [routerLink]=\"['/brackets', tbracket.id]\"\r\n    \t\t\t[class.active]=\"isActive(tbracket.id)\"\r\n    \t\t\t>{{ tbracket.name }}</a>\r\n    \t\t</li>\r\n    \t</ul>\r\n    </nav>\r\n</div>\r\n<br>\r\n<div [class.loader] = \"loading\">\r\n  <tabset #staticTabs>\r\n    <tab heading={{regionList[0].name}} *ngIf=\"regionList\">\r\n        <app-bracket-tab *ngIf=\"region1Games && region1Owners\" \r\n            [region]=\"regionList[0].id\" [bracketGames]=\"region1Games\" [bracketOwners]=\"region1Owners\">\r\n    \t</app-bracket-tab>\r\n    </tab>\r\n    <tab heading={{regionList[1].name}} *ngIf=\"regionList\">\r\n    \t<app-bracket-tab *ngIf=\"region2Games && region2Owners\"  \r\n    \t\t[region]=\"regionList[1].id\" [bracketGames]=\"region2Games\" [bracketOwners]=\"region2Owners\">\r\n    \t</app-bracket-tab>\r\n    </tab>\r\n    <tab heading={{regionList[2].name}} *ngIf=\"regionList\">\r\n    \t<app-bracket-tab *ngIf=\"region3Games && region3Owners\"  \r\n    \t\t[region]=\"regionList[2].id\" [bracketGames]=\"region3Games\" [bracketOwners]=\"region3Owners\">\r\n    \t</app-bracket-tab>\r\n    </tab>\r\n    <tab heading={{regionList[3].name}} *ngIf=\"regionList\">\r\n    \t<app-bracket-tab *ngIf=\"region4Games && region4Owners\"  \r\n    \t\t[region]=\"regionList[3].id\" [bracketGames]=\"region4Games\" [bracketOwners]=\"region4Owners\">\r\n    \t</app-bracket-tab>\r\n    </tab>\r\n    <tab heading={{regionList[4].name}} *ngIf=\"regionList\">\r\n    \t<app-bracket-tab *ngIf=\"ffourOwners && ffourGames\"\r\n    \t\t[region]=\"regionList[4].id\" [bracketGames]=\"ffourGames\" [bracketOwners]=\"ffourOwners\">\r\n    \t</app-bracket-tab>\r\n    </tab>\r\n  </tabset>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { EntryData, EntryBracketData, EntryNameData, EntryStandingsData, EntryMyTeamsData } from '../shared/interfaces';\r\nimport { UserService } from './user.service';\r\n\r\n//entryUrl is base url for entries table end point\r\nconst entryUrl = '/api/entries/';\r\nconst entry_bracketsUrl = '/api/entry_brackets/';\r\nconst entry_namesUrl = '/api/entry_names/';\r\nconst entry_standingsURL = '/api/entry_standings/';\r\nconst entry_myteamsURL = 'api/entry_myteams/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EntryService {\r\n\r\n\tconstructor(private http: HttpClient, private _userService: UserService) { }\r\n\r\n\t//method to retrieve entry details list for a player\r\n\tgetEntryDetailsListByPlayer(id) {\r\n\t\treturn this.http.get<EntryData[]>(entryUrl + '?playerid=' + id)\r\n\t\t}\r\n\r\n\t//method to retrieve entry bracket list for a player\r\n\tgetEntryBracketListByPlayer(id) {\r\n\t\treturn this.http.get<EntryBracketData[]>(entry_bracketsUrl + '?playerid=' + id)\r\n\t\t}\r\n\t\r\n\t//method to retrieve all entries matching ?tbracketid= value\r\n\tgetEntryListByBracket(tbracket_id) {\r\n\t\treturn this.http.get<EntryNameData[]>(entry_namesUrl + '?tbracketid=' + tbracket_id)\r\n\t\t}\r\n\r\n\t//method to retrieve all entries whose tbracketid = null\r\n\tgetEntryListbyNullBracket() {\r\n\t\treturn this.http.get<EntryNameData[]>(entry_namesUrl + '?no_bracket')\r\n\t\t}\r\n\r\n\t//method to retrieve Entry by tbracket_id & team_id (originally used for Bracket display of owners)\r\n\tgetEntryNameByTeamAndBracket(b_id, t_id) {\r\n\t\treturn this.http.get<EntryNameData>(entry_namesUrl + '?tbracketid=' + b_id + '&teamid=' + t_id)\r\n\t\t}\r\n\r\n\t//method for updating Entry once assigned to a Bracket\r\n\tupdateEntry(entry) {\r\n\t\treturn this.http.patch<EntryNameData>(entry_namesUrl + entry.id + '/', JSON.stringify(entry), this.getHttpOptions())\r\n\t}\r\n\r\n\t//method for creating all Entry data based on User info\r\n\tresetAllEntries() {\r\n\t    return this.http.get<EntryData[]>(entryUrl + 'reset_all/', this.getHttpOptions())\r\n\t}\r\n\r\n\t//method to retrieve all entries matching ?tbracketid= value\r\n\tgetEntryStandings(tbracket_id) {\r\n\t\treturn this.http.get<EntryStandingsData[]>(entry_standingsURL + '?tbracketid=' + tbracket_id)\r\n\t\t}\r\n\r\n\t//method to generate emails to all Owners of entries within a particular bracket\r\n\temailOrigTeamsToOwners(tbracket_id) {\r\n\t    return this.http.get<EntryData[]>(entryUrl + 'email_orig_teams_to_owners/' + '?tbracketid=' + tbracket_id)\r\n\t}\r\n\r\n\t//method to retrieve entry details list for a player\r\n\tgetEntryDetailsListMyTeamsByPlayer(id) {\r\n\t\treturn this.http.get<EntryMyTeamsData[]>(entry_myteamsURL + '?playerid=' + id)\r\n\t\t}\r\n\r\n\t// helper function to build the HTTP headers\r\n\tgetHttpOptions() {\r\n\t\treturn {\r\n\t\t  headers: new HttpHeaders({\r\n\t\t    'Content-Type': 'application/json',\r\n\t\t    'Authorization': 'JWT ' + this._userService.token,\r\n\t\t  })\r\n\t\t};\r\n\t}\r\n\t\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { GameData, NewGameWithOwnerData } from '../shared/interfaces';\r\nimport { UserService } from './user.service';\r\n\r\n//gameUrl is base url for users table end point\r\nconst gameUrl = '/api/games/';\r\nconst new_game_matchupURL = '/api/games_new_matchups/'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GameService {\r\n\r\n\tconstructor(private http: HttpClient, private _userService: UserService) { }\r\n\r\n\t//method to retrieve game details for a particular game\r\n\tgetGameDetails(id) {\r\n\t\treturn this.http.get<GameData>(gameUrl + id + '/')\r\n\t}\r\n\t\r\n\t//method to retrieve list of games\r\n\tgetGameList() {\r\n\t\treturn this.http.get<GameData[]>(gameUrl)\r\n\t}\r\n\r\n\t//method to retrieve all games in which a particular team is playing\r\n\tgetGameListByTeam(team_id) {\r\n\t\treturn this.http.get<GameData[]>(gameUrl + '?teamid=' + team_id)\r\n\t}\r\n\r\n\t//method to retrieve all games from a particular region\r\n\tgetGameListByRegion(region_id) {\r\n\t\treturn this.http.get<GameData[]>(gameUrl + '?regionid=' + region_id)\r\n\t}\r\n\r\n\t//endpoint to return all games with owner info for a particular bracket\r\n\tgetNewGameWithMatchupDataList(tbracket_id) {\r\n\t\treturn this.http.get<NewGameWithOwnerData[]>(new_game_matchupURL + '?tbracketid=' + tbracket_id)\r\n\t}\r\n\r\n\tupdateGame(game) {\r\n\t\treturn this.http.patch<GameData>(gameUrl + game.id + '/', JSON.stringify(game), this.getHttpOptions())\r\n\t}\r\n\r\n  updateGame_sendEmail(game) {\r\n\t\treturn this.http.patch<GameData>(gameUrl + game.id + '/?send_email=true', JSON.stringify(game), this.getHttpOptions())\r\n\t}\r\n\r\n\tresetGame(id) {\r\n\t\treturn this.http.get<GameData>(gameUrl + id + '/reset/', this.getHttpOptions())\r\n\t}\r\n\r\n\tresetAllGames() {\r\n\t\treturn this.http.get<GameData[]>(gameUrl + 'reset_all/', this.getHttpOptions())\r\n\t}\r\n\r\n\treplayAllGames() {\r\n\t\treturn this.http.get<GameData[]>(gameUrl + 'replay_all/', this.getHttpOptions())\r\n\t}\r\n\r\n\tisFinalFour() {\r\n\t\treturn this.http.get<GameData[]>(gameUrl + 'final_four/')\r\n\t}\r\n\r\n\tgetGamesSpreadNoScore(tround_id) {\r\n\t\treturn this.http.get<GameData[]>(gameUrl + '?tround=' + tround_id + '&spread_set_no_score')\r\n\t}\r\n\r\n\temailGamesToOwners(tbracket_id, tround_id) {\r\n\t\treturn this.http.get<GameData[]>(gameUrl + 'email_spreads_to_owners/?tround=' + tround_id + '&tbracketid=' + tbracket_id)\r\n\t}\r\n\r\n\t// helper function to build the HTTP headers\r\n\tgetHttpOptions() {\r\n\treturn {\r\n\t\theaders: new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': 'JWT ' + this._userService.token,\r\n\t\t})\r\n\t};\r\n\t} // end getHttpOptions()\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { IUserData } from '../shared/interfaces';\r\n\r\nimport { Store } from 'redux';\r\nimport { AppStore } from '../app.store';\r\nimport { AppState } from '../app.state';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IsAdminGuard implements CanActivate {\r\n\r\n\tprivate currentUser : IUserData;\r\n\r\n\tconstructor (\r\n\t\t@Inject(AppStore) private store: Store<AppState>\r\n  )\t{\r\n      store.subscribe(() => this.readState());\r\n      this.readState(); //Need this twice?\r\n    }\r\n\r\n\tcanActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n\t\t// Check to see if is_staff is equal to 1, if yes return True\r\n\t\tif (this.currentUser) {\r\n\t\t\treturn (this.currentUser.is_staff == 1);\r\n\t\t}\r\n\t\telse return false;\r\n\t}\r\n\r\n\t// Redux store methods\r\n\treadState() {\r\n\t\tconst state: AppState = this.store.getState() as AppState;\r\n\t\tthis.currentUser = state.currentUser;\r\n    console.log(\"readState being invoked by IsAdminGuard.\");\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of, pipe } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\nimport { UserService } from './user.service';\r\nimport { IUserData } from '../shared/interfaces';\r\n\r\n//userUrl is base url for users table end point\r\nconst userUrl = '/api/users/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlayerService {\r\n\r\n  constructor(private http: HttpClient, private _userService: UserService) { }\r\n\r\n  //method to retrieve entire user list\r\n  getList() {\r\n\t\treturn this.http.get<IUserData[]>(userUrl)\r\n\t}\r\n\r\n  // method to retrieve entire user list except user with id = id parameter\r\n  getListOtherThan(id) {\r\n    return this.http.get<IUserData[]>(userUrl)\r\n      .pipe(\r\n        map(users => users.filter(user => user.id != id))\r\n        )\r\n  }\r\n\r\n  //method to retrieve individual user\r\n  getPlayer(id) {\r\n    return this.http.get<IUserData>(userUrl + id + '/')\r\n  }\r\n\r\n  deletePlayer(id, token) {\r\n    return this.http.delete<IUserData>(userUrl + id + '/', this.getHttpOptions())\r\n  }\r\n\r\n  updatePlayer(player) {\r\n    return this.http.patch<IUserData>(userUrl + player.id + '/', JSON.stringify(player), this.getHttpOptions())\r\n  }\r\n\r\n  // helper function to build the HTTP headers\r\n  getHttpOptions() {\r\n    return {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'JWT ' + this._userService.token,\r\n      })\r\n    };\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { RegionData } from '../shared/interfaces';\r\n\r\nconst regionUrl = '/api/regions/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegionService {\r\n\r\n\tconstructor(private http: HttpClient) { }\r\n\r\n\t//method to retrieve game details for a particular game\r\n\tgetRegionDetails(id) {\r\n\t\treturn this.http.get<RegionData>(regionUrl + id + '/')\r\n\t}\r\n\t\r\n\t//method to retrieve list of games\r\n\tgetRegionList() {\r\n\t\treturn this.http.get<RegionData[]>(regionUrl)\r\n\t}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SorterService {\r\n\r\n\tconstructor() { }\r\n\r\n\tproperty: string = null;\r\n\tdirection: number = 1;\r\n\r\n    sort(collection: any[], prop: any) {\r\n        this.property = prop;\r\n        this.direction = (this.property === prop) ? this.direction * -1 : 1;\r\n\r\n        collection.sort((a: any,b: any) => {\r\n            let aVal: any;\r\n            let bVal: any;\r\n            \r\n            //Handle resolving complex properties such as 'state.name' for prop value\r\n            if (prop && prop.indexOf('.') > -1) {\r\n              aVal = this.resolveProperty(prop, a);\r\n              bVal = this.resolveProperty(prop, b);\r\n            }\r\n            else {            \r\n              aVal = a[prop];\r\n              bVal = b[prop];\r\n            }\r\n            \r\n            //Fix issues that spaces before/after string value can cause such as ' San Francisco'\r\n            if (this.isString(aVal)) aVal = aVal.trim().toUpperCase();\r\n            if (this.isString(bVal)) bVal = bVal.trim().toUpperCase();\r\n          \r\n            if(aVal === bVal){\r\n                return 0;\r\n            }\r\n            else if (aVal > bVal){\r\n                return this.direction * -1;\r\n            }\r\n            else {\r\n                return this.direction * 1;\r\n            }\r\n        });\r\n    }\r\n    \r\n    isString(val: any) : boolean {\r\n      return (val && (typeof val === 'string' || val instanceof String));\r\n    }\r\n\r\n    resolveProperty(path: string, obj: any) {\r\n      return path.split('.').reduce(function(prev, curr) {\r\n          return (prev ? prev[curr] : undefined)\r\n      }, obj || self)\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { TBracketData } from '../shared/interfaces';\r\nimport { UserService } from './user.service';\r\n\r\n//tbracketUrl is base url for users table end point\r\nconst tbracketUrl = '/api/tbrackets/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TBracketService {\r\n\r\n\tconstructor(private http: HttpClient, private _userService: UserService) { }\r\n\r\n\t//method to retrieve entire bracket list\r\n\tgetList() {\r\n\t\treturn this.http.get<TBracketData[]>(tbracketUrl)\r\n\t}\r\n\r\n\t//method to retrieve entire bracket list with player's assigned tbrackets first\r\n\tgetListWithPlayer(playerid) {\r\n\t\treturn this.http.get<TBracketData[]>(tbracketUrl + '?playerid=' + playerid)\r\n\t}\r\n\r\n\t//method to retrieve individual bracket\r\n  \tgetTbracket(id) {\r\n    \treturn this.http.get<TBracketData>(tbracketUrl + id + '/')\r\n  \t}\r\n\r\n  \tcreateTbracket(tbracket, token) {\r\n    return this.http.post<TBracketData>(tbracketUrl, JSON.stringify(tbracket), this.getHttpOptions())\r\n\t}\r\n\r\n\tdeleteTbracket(id, token) {\r\n\t\treturn this.http.delete<TBracketData>(tbracketUrl + id + '/', this.getHttpOptions())\r\n\t}\r\n\r\n\treassignTbracket(id, token) {\r\n\t\treturn this.http.get<TBracketData>(tbracketUrl + id + '/reassign/', this.getHttpOptions())\r\n\t}\r\n\r\n\tresetTbracket(id) {\r\n\t\treturn this.http.get<TBracketData>(tbracketUrl + id + '/reset/', this.getHttpOptions())\r\n\t}\r\n\r\n\t// helper function to build the HTTP headers\r\n\tgetHttpOptions() {\r\n\t\treturn {\r\n\t\t  headers: new HttpHeaders({\r\n\t\t    'Content-Type': 'application/json',\r\n\t\t    'Authorization': 'JWT ' + this._userService.token,\r\n\t\t  })\r\n\t\t};\r\n\t}\r\n\r\n}","//user-resolver.ts\r\n\r\n// This class allows for the processing of the UserService method before the\r\n// Home Component is rendered so that all information needed by the view is\r\n// retrieved prior to display\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from './user.service';\r\nimport { IUserData } from '../shared/interfaces';\r\n\r\n@Injectable()\r\n\r\nexport class UserResolver implements Resolve<Observable<any>> {\r\n\r\n\tconstructor (private _userService: UserService) { }\r\n\r\n\tresolve() : Observable<any> {\r\n\t\t//console.log(\"Resolver returning...\");\r\n\t\treturn this._userService.getLoggedInUser()\r\n\t}\r\n}\r\n","// user.actions.ts\r\n\r\nimport { Action, ActionCreator } from 'redux';\r\nimport { IUserData } from '../shared/interfaces';\r\n\r\n/**\r\n * UserActions specifies action creators concerning Users\r\n */\r\nexport const SET_CURRENT_USER = '[User] Set Current';\r\nexport interface SetCurrentUserAction extends Action {\r\n  user: IUserData;\r\n}\r\nexport const setCurrentUser: ActionCreator<SetCurrentUserAction> =\r\n  (user) => ({\r\n    type: SET_CURRENT_USER,\r\n    user: user\r\n  });","// users.reducer.ts\r\n\r\nimport { Reducer, Action } from 'redux';\r\nimport { createSelector } from 'reselect';\r\nimport { IUserData } from '../shared/interfaces';\r\nimport * as UserActions from './user.actions';\r\nimport { AppState } from '../app.state';\r\n\r\nconst initialState: AppState = { currentUser: null };\r\n\r\nexport const UserReducer: Reducer<AppState> =\r\n  // (state: AppState = initialState, action: Action): AppState => {\r\n  (state: AppState = initialState, action: UserActions.SetCurrentUserAction): AppState => {\r\n  switch (action.type) {\r\n    case UserActions.SET_CURRENT_USER:\r\n      // const user: IUserData = (<UserActions.SetCurrentUserAction>action).user;\r\n      const user: IUserData = action.user;\r\n      return {\r\n        currentUser: user\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { PlayerService } from './player.service';\r\nimport { IUserData } from '../shared/interfaces';\r\n\r\n//userUrl is base url for users table end point\r\nconst userUrl = '/api/users/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n\t// http options used for making API calls\r\n\tprivate httpOptions: any;\r\n\r\n\t// the actual JWT token\r\n\tpublic token: string;\r\n\r\n\t// the token expiration date\r\n\tpublic token_expires: Date;\r\n\r\n\t// the authenticated/logged in user variables\r\n  public id: number;\r\n\tpublic username: string;\r\n\tpublic email: string;\r\n  public loggedInUser: IUserData;\r\n\r\n\t// error messages received from the login attempt\r\n\tpublic errors: any = [];\r\n\r\n  // use to communicate to components whethe API calls are being made\r\n  public loading: boolean;\r\n\r\n  // use to show the user certain components & features\r\n  public beforeTourney: boolean;\r\n\r\n  constructor(private http: HttpClient) {\r\n  \tthis.httpOptions = {\r\n  \t\theaders: new HttpHeaders({'Content-Type': 'application/json'})\r\n  \t} }\r\n\r\n  // Uses http.post() to get an auth token from djangorestframework-jwt endpoint\r\n  public login(user) {\r\n    // this.http.post(baseUrl+'/api-token-auth/', JSON.stringify(user), this.httpOptions).subscribe(\r\n    this.http.post('/api/api-token-auth/', JSON.stringify(user), this.httpOptions).subscribe(\r\n      data => {\r\n        this.updateData(data['token']);\r\n        // console.log(\"login method called\");\r\n      },\r\n      err => {\r\n        this.errors = err['error'];\r\n      }\r\n    );\r\n  }\r\n\r\n  // Refreshes the JWT token, to extend the time the user is logged in\r\n  public refreshToken() {\r\n    this.loading = true;\r\n    this.http.post('/api/api-token-refresh/', JSON.stringify({token: this.token}), this.httpOptions).subscribe(\r\n      data => {\r\n        this.updateData(data['token']);\r\n        // this.getLoggedInUser().subscribe(data => {\r\n        //   this.loggedInUser = data});\r\n        this.loading = false;\r\n      },\r\n      err => {\r\n        this.errors = err['error'];\r\n      }\r\n    );\r\n    console.log(\"refreshToken method called\");\r\n  }\r\n\r\n  public logout() {\r\n    this.token = null;\r\n    this.token_expires = null;\r\n    this.username = null;\r\n  }\r\n \r\n  private updateData(token) {\r\n    this.token = token;\r\n    this.errors = [];\r\n \r\n    // decode the token to read the username and expiration timestamp\r\n    const token_parts = this.token.split(/\\./);\r\n    const token_decoded = JSON.parse(window.atob(token_parts[1]));\r\n    this.token_expires = new Date(token_decoded.exp * 1000);\r\n    this.username = token_decoded.username;\r\n    this.email = token_decoded.email;\r\n    this.id = token_decoded.user_id;\r\n    // console.log(\"This is the JWT token authenticated user:\", token_decoded);\r\n  }\r\n\r\n  public getLoggedInUser() {\r\n    // this function returns an http obervable for user-resolver.ts\r\n    return this.http.get<IUserData>(userUrl + this.id + '/');\r\n  }\r\n}","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { UserService } from '../core/user.service';\r\nimport { PlayerService } from '../core/player.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IUserData } from '../shared/interfaces';\r\n\r\nimport { Store } from 'redux';\r\nimport { AppStore } from '../app.store';\r\nimport { AppState } from '../app.state';\r\nimport * as UserActions from '../core/user.actions';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  loggedInUser : IUserData;\r\n  private currentUser : IUserData;\r\n  roster: IUserData[];\r\n\r\n  constructor(\r\n    public _userService: UserService,\r\n    private _playerService: PlayerService,\r\n    private route: ActivatedRoute,\r\n    \r\n    // Using Redux store to capture logged in user details\r\n    @Inject(AppStore) private store: Store<AppState>\r\n    ) {\r\n      store.subscribe(() => this.readState());\r\n      // this.readState(); //Need this twice here?\r\n    }\r\n  \r\n  ngOnInit() {\r\n    this.loggedInUser = this.route.snapshot.data.loggedInUser;\r\n    this._userService.loggedInUser = this.loggedInUser;\r\n    this.setCurrentUser(this.loggedInUser);\r\n    // console.log(\"The current _userService user is\", this._userService)\r\n\r\n    // Retrieve roster for passing to child roster.component\r\n    this._playerService.getListOtherThan(this.loggedInUser.id).subscribe(data => {\r\n      this.roster = data;\r\n    });\r\n    this._userService.refreshToken();\r\n  }\r\n\r\n  // Redux store methods\r\n  readState() {\r\n    const state: AppState = this.store.getState() as AppState;\r\n    this.currentUser = state.currentUser;\r\n    // console.log(\"readState called by home.component. The current Redux user is\", state.currentUser)\r\n  }\r\n\r\n  setCurrentUser(user: IUserData) {\r\n    this.store.dispatch(UserActions.setCurrentUser(user))\r\n  }\r\n}\r\n","<!--home.component.html-->\r\n<br>\r\n\r\n<!-- <div *ngIf=\"_beforeTourney\"> -->\r\n<div *ngIf=\"_userService.beforeTourney\">\r\n\t<app-roster *ngIf=\"roster\" [loggedInUser] = \"loggedInUser\" [roster] = \"roster\"></app-roster>\r\n</div>\r\n\r\n<!-- <div *ngIf=\"!_beforeTourney\"> -->\r\n<div *ngIf=\"!_userService.beforeTourney\">\r\n\t<app-standings-nav></app-standings-nav>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.css']\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<p>\r\n  Logging Out!\r\n</p>\r\n","import { Component, OnInit, Input, TemplateRef } from '@angular/core';\r\nimport { IUserData } from '../shared/interfaces';\r\nimport { UserService } from '../core/user.service';\r\nimport { PlayerService } from '../core/player.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { ProfileFormModalComponent } from '../profile-form-modal/profile-form-modal.component';\r\nimport { PartialProfileFormModalComponent } from '../profile-form-modal/partial-profile-form-modal.component';\r\nimport { faPaypal, faVimeoSquare } from '@fortawesome/free-brands-svg-icons';\r\nimport { faUsd } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-profile-details',\r\n  templateUrl: './profile-details.component.html',\r\n  styleUrls: ['./profile-details.component.css']\r\n})\r\nexport class ProfileDetailsComponent implements OnInit {\r\n\t_showEditButton: boolean;\r\n\t_player: IUserData;\r\n\t@Input() get player(): IUserData {\r\n\t\treturn this._player;\r\n\t}\r\n\r\n\tset player(value: IUserData) {\r\n\t\tif (value) {\r\n\t\t\tthis._player = value;\r\n\t\t}\r\n\t}\r\n\tmodalRef: BsModalRef;\r\n\tbsModalRef: BsModalRef;\r\n\r\n  // font-awesome icons\r\n  faPaypal = faPaypal;\r\n  faVimeoSquare = faVimeoSquare;\r\n  faUsd = faUsd;\r\n\r\n\tconstructor(private _playerService: PlayerService,\r\n\t  public _userService: UserService, \r\n\t  private router: Router,\r\n\t  private route: ActivatedRoute,\r\n\t  private modalService: BsModalService,\r\n\t  private bsModalService: BsModalService,) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.route.queryParams.subscribe(params => {\r\n\t\t\t// if profile page is called for other player, don't show edit button\r\n\t\t\tparams.id === undefined ? this._showEditButton = true : this._showEditButton = false\r\n\t\t});\r\n\t}\r\n\r\n\topenModal(template: TemplateRef<any>) {\r\n\tthis.modalRef = this.modalService.show(template);\r\n\t}\r\n\r\n\tdelete() {\r\n\t\tthis._playerService.deletePlayer(this._player.id, this._userService.token).subscribe((data) => {\r\n\t\t\tconsole.log(\"delete successful\");\r\n\t\t});\r\n\t\tthis.router.navigate(['/logout']);\r\n\t}\r\n\r\n\topenProfileModal() {\r\n\t    const initialState = {\r\n\t      id: this._player.id,\r\n\t      profile_user: this._player\r\n\t    };\r\n\t    if (this._userService.beforeTourney) {\r\n\t\t    this.bsModalRef = this.bsModalService.show(ProfileFormModalComponent, {initialState});\r\n\t\t  } else {\r\n\t\t  \tthis.bsModalRef = this.bsModalService.show(PartialProfileFormModalComponent, {initialState});\r\n\t\t  };\r\n\r\n\t    this.bsModalService.onHidden.subscribe((reason: string) => {\r\n\t    \t// Upon modal being closed run these actions\r\n        \r\n        // *** This isn't working ***\r\n        // const _reason = reason ? `, dismissed by ${reason}` : '';\r\n        // console.log (\"Profile modal was closed \", _reason);\r\n        \r\n        // Update logged in User against database after modal closes\r\n        this._userService.getLoggedInUser().subscribe(data => {\r\n        \tthis._player = data;\r\n        })\r\n\t    })\r\n\t\r\n\t}\r\n\r\n}\r\n","  <!--profile-details.component.html-->\r\n<div class=\"container\">\r\n\t<div class = \"row align-items-start\">\r\n\t\t<div class = \"col-xs col-md-6\">\r\n\t\t\t<div class = \"row justify-content-start\">\r\n\t\t\t\t<div class = \"col-xs-auto\"><strong>Name:&nbsp;</strong></div>\r\n\t\t\t\t<div class = \"col\" class=\"text-muted\">{{ _player.full_name }}</div>\r\n\t\t\t</div>\r\n\t\t\t<div class = \"row justify-content-start\">\r\n\t\t\t\t<div class = \"col-xs-auto\"><strong>Email:&nbsp;</strong></div>\r\n\t\t\t\t<div class = \"col\" class=\"text-muted\">{{ _player.email }}</div>\r\n\t\t\t</div>\r\n\t\t\t<div class = \"row justify-content-start\">\r\n\t\t\t\t<div class = \"col-xs-auto\"><strong>Number of Entries:&nbsp;</strong></div>\r\n\t\t\t\t<div class = \"col\" class=\"text-muted\">{{ _player.num_entries }}</div>\r\n\t\t\t</div>\r\n\t\t\t<div class = \"row justify-content-start\">\r\n\t\t\t\t<div class = \"col-xs-auto\"><strong>(S)ame or (D)ifferent Brackets:&nbsp;</strong></div>\r\n\t\t\t\t<div class = \"col\" class=\"text-muted\" >{{ player.num_entries == 1 ? '-' : player.mult_entry_type }}</div>\r\n\t\t\t</div>\r\n\t\t\t<div class = \"row justify-content-start\">\r\n\t\t\t\t<div class = \"col-xs-auto\"><strong>Receive Game Result email updates?&nbsp;</strong></div>\r\n\t\t\t\t<div class = \"col\" class=\"text-muted\" >{{ player.gm_updates ? 'Yes' : 'No' }}</div>\r\n\t\t\t</div>\r\n\t\t\t<div class = \"row justify-content-start\">\r\n\t\t\t\t<div class = \"col-xs-auto\"><strong>Paid up?:</strong></div>\r\n\t\t\t\t<div class = \"col\" [ngClass] = \"{'text-muted': player.paid, 'text-danger': !player.paid}\">\r\n\t\t\t\t\t{{ player.paid ? \"YES - Thank you!\" : \"Due($\" + player.num_entries*20 + \".00)\"  }}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class = \"row\">\r\n\t\t\t\t<div *ngIf=\"_userService.beforeTourney && _showEditButton\" class = \"col-xs-auto\">\r\n\t\t\t\t\t<button class=\"btn btn-secondary custom mt-2 mb-2 mr-2\" (click)=\"openModal(template)\">Delete</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div *ngIf=\"_showEditButton\" class = \"col-xs-auto\">\r\n\t\t\t\t\t<button class=\"btn btn-primary custom mt-2 mb-2\" (click)=\"openProfileModal()\">Edit</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\t\r\n\r\n\t\t<div *ngIf = \"!player.paid && _showEditButton\" \r\n\t\tclass = \"col-md-6 justify-content-start rounded border border-danger text-muted\">\r\n\t\t\t<p class=\"mb-2\"><strong>Payment Options:</strong></p>\r\n\t\t\t<p class=\"mb-2\">1) <fa-icon [icon]=\"faPaypal\"></fa-icon> via PayPal : <a target=\"_blank\" rel=\"noopener noreferrer\"\r\n\t\t\t\thref=\"https://www.paypal.me/PaulMaurer1\">www.paypal.me/PaulMaurer1</a></p>\r\n\t\t\t<p class=\"mb-2\">2) <fa-icon [icon]=\"faVimeoSquare\"></fa-icon> via Venmo: <a target=\"_blank\" rel=\"noopener noreferrer\"\r\n        href=\"https://account.venmo.com/u/Paul-Maurer1\">@Paul-Maurer1</a></p>\r\n      <p class=\"mb-2\">3) Mail <fa-icon [icon]=\"faUsd\"></fa-icon> to:\r\n\t\t\tPaul Maurer, 3227 N. Seminary Avenue, Chicago, IL 60657</p>\r\n\t\t</div>\r\n\t\t<!-- <div class = \"col d-none d-lg-table\"></div> -->\r\n\t</div>\r\n</div>\r\n\r\n<ng-template #template>\r\n\t<div class=\"modal-header\">\r\n\t\t<h4 class=\"modal-title pull-left\">Delete Profile</h4>\r\n\t\t<button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n\t\t\t<span aria-hidden=\"true\">&times;</span>\r\n\t\t</button>\r\n\t</div>\r\n\t<div class=\"modal-body\">\r\n\t\tAre you sure you want to delete your Profile?\r\n\t</div>\r\n\t<div class=\"modal-footer\">\r\n\t\t\t<button class=\"btn btn-secondary custom\" \r\n\t\t\t(click)=\"modalRef.hide(); delete()\">Delete</button>\r\n\t</div>\r\n</ng-template>","// admin-profile-form-modal.component.ts\n\nimport { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { UntypedFormBuilder, UntypedFormGroup, AbstractControl, Validators } from '@angular/forms';\nimport { IUserData } from '../shared/interfaces';\nimport { PlayerService } from '../core/player.service';\n\n@Component({\n  selector: 'app-admin-profile-form-modal',\n  templateUrl: './admin-profile-form-modal.component.html',\n  styleUrls: ['./admin-profile-form-modal.component.css']\n})\nexport class AdminProfileFormModalComponent implements OnInit {\n  title: string;\n\tcloseBtnName: string;\n\tprofile_user: IUserData;\n\tadminProfileForm: UntypedFormGroup;\n\tfirst_name : AbstractControl;\n\tlast_name : AbstractControl;\n\temail : AbstractControl;\n\tnum_entries : AbstractControl;\n\tmult_entry_type : AbstractControl;\n  gm_updates : AbstractControl;\n  paid: AbstractControl;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n  \tfb: UntypedFormBuilder, \n  \tprivate _playerService: PlayerService\n  \t) {\n    this.title = \"Update profile for \"\n  \tthis.closeBtnName = \"Update\";\n  \tthis.adminProfileForm = fb.group({\n\t\t\t'first_name' : ['', Validators.required],\n\t\t\t'last_name' : ['', Validators.required],\n\t\t\t'email' : ['', Validators.compose([Validators.required, Validators.email])],\n\t\t\t'num_entries' : ['', Validators.compose([Validators.required, Validators.maxLength(4), Validators.minLength(1)])],\n\t\t\t'mult_entry_type' : ['', Validators.required],\n      'gm_updates' : [],\n      'paid' : [],\n    });\n\n    this.first_name = this.adminProfileForm.controls['first_name']; // allows for other properties, e.g. error values\n  \tthis.last_name  = this.adminProfileForm.controls['last_name'];\n  \tthis.email      = this.adminProfileForm.controls['email'];\n  \tthis.num_entries = this.adminProfileForm.controls['num_entries'];\n  \tthis.mult_entry_type = this.adminProfileForm.controls['mult_entry_type'];\n    this.gm_updates = this.adminProfileForm.controls['gm_updates'];\n    this.paid = this.adminProfileForm.controls['paid'];\n  }\n\n  ngOnInit() {\n    // console.log (\"AdminProfileForm's profile_user\", this.profile_user);\n    this.adminProfileForm.patchValue(this.profile_user);\n  }\n\n  submitForm(value: string) {\n  \tthis.profile_user.first_name = this.first_name.value;\n  \tthis.profile_user.last_name = this.last_name.value;\n  \tthis.profile_user.email = this.email.value.toLowerCase();\n  \tthis.profile_user.num_entries = this.num_entries.value;\n  \tthis.profile_user.mult_entry_type = this.mult_entry_type.value;\n    this.profile_user.gm_updates = this.gm_updates.value;\n    this.profile_user.paid = this.paid.value;\n\n  \tthis._playerService.updatePlayer(this.profile_user).subscribe((data) => {\n      console.log(\"Player updated:\", data);\n\t});\n\n  }\n\n}\n","<!-- admin-profile-form-modal.component.html -->\n\n<div class=\"modal-header\">\n\t<h4 class=\"modal-title pull-left\">{{title}} {{profile_user.full_name}}</h4>\n\t<button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n\t\t<span aria-hidden=\"true\">&times;</span>\n\t</button>\n</div>\n<form [formGroup]=\"adminProfileForm\" (ngSubmit)=\"submitForm(adminProfileForm.value)\">\n\t<div class=\"modal-body\">\n\t\t<div class=\"container\">\n\t\t\t<div class=\"form-row\">\n\t\t\t\t<div class=\"form-group col-md-6\">\n\t\t\t\t\t<label for=\"first_name\">First Name</label>\n\t\t\t\t    <input type=\"text\" class=\"form-control\"\n\t\t\t\t    id=\"first_name\" [formControl] = \"first_name\"\n\t\t\t\t    [class.is-invalid] = \"first_name.invalid\">\n\t\t\t\t    <span *ngIf=\"first_name.invalid\" class=\"text-danger\">\n    \t\t\t\t\tFirst Name is required\n  \t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group col-md-6\">\n\t\t\t\t\t<label for=\"last_name\">Last Name</label>\n\t\t\t\t    <input type=\"text\" class=\"form-control\"\n\t\t\t\t    id=\"last_name\" [formControl] = \"last_name\"\n\t\t\t\t    [class.is-invalid] = \"last_name.invalid\">\n\t\t\t\t    <span *ngIf=\"last_name.invalid\" class=\"text-danger\">\n    \t\t\t\t\tLast Name is required\n  \t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class = \"form-group\">\n\t\t\t\t<label for=\"email\">Email</label>\n\t\t\t    <input type=\"email\" class=\"form-control\"\n\t\t\t    id=\"email\" [formControl] = \"email\"\n\t\t\t    [class.is-invalid] = \"email.invalid\">\n\t\t\t    <span *ngIf=\"email.invalid && email.errors.required\" class=\"text-danger\">\n    \t\t\t\t\tEmail is required\n  \t\t\t\t</span>\n  \t\t\t\t<span *ngIf=\"email.invalid && email.errors.email\" class=\"text-danger\">\n    \t\t\t\t\tEmail must be a valid address\n  \t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div class=\"form-row\">\n\t\t\t\t<div class=\"form-group col-md-6\">\n\t\t\t\t\t<label for=\"num_entries\">Number of Entries</label>\n\t\t\t\t    <input type=\"number\" min = \"1\" max = \"4\" class=\"form-control\" #entries\n\t\t\t\t    id=\"num_entries\" [formControl] = \"num_entries\"\n\t\t\t\t    [class.is-invalid] = \"num_entries.invalid\">\n\t\t\t\t    <span *ngIf=\"num_entries.invalid && num_entries.errors.required\" class=\"text-danger\">\n    \t\t\t\t\tNumber of Entries is required\n  \t\t\t\t\t</span>\n  \t\t\t\t\t<span *ngIf=\"num_entries.invalid && (num_entries.errors.minlength || num_entries.errors.maxlength)\" class=\"text-danger\">\n    \t\t\t\t\tMust submit a number between 1-4\n  \t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group col-md-6\" *ngIf=\"entries.value>1\">\n\t\t\t\t\t<label for=\"mult_entry_type\">(S)ame or (D)ifferent</label>\n\t\t\t\t    <select class=\"form-control\"\n\t\t\t\t    id=\"mult_entry_type\" [formControl] = \"mult_entry_type\">\n\t\t\t\t    \t<option>S</option>\n\t\t\t\t    \t<option>D</option>\n\t\t\t\t    </select>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class = \"custom-control custom-checkbox\">\n\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\"\n\t\t\t\t    id=\"gm_updates\" [formControl] = \"gm_updates\">\n\t\t\t\t    <label class=\"custom-control-label\" for=\"gm_updates\">\n\t\t\t\t\t    Receive email for game updates?\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</div>\n      <div class=\"form-group\">\n\t\t\t\t<div class = \"custom-control custom-checkbox\">\n\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\"\n\t\t\t\t    id=\"paid\" [formControl] = \"paid\">\n\t\t\t\t    <label class=\"custom-control-label\" for=\"paid\">\n\t\t\t\t\t    Paid?\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>  <!-- end container -->\n\t\t<div class=\"modal-footer\">\n\t\t\t<button type=\"submit\" id=\"submit\" class=\"btn btn-success\" \n\t\t\t[disabled]=\"!adminProfileForm.valid\"\n\t\t\t(click)=\"bsModalRef.hide()\">{{closeBtnName}}</button>\n\t\t</div>\n\t</div>  <!-- end modal-body -->\n</form>","// partial-profile-form-modal.component.ts\n\nimport { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { UntypedFormBuilder, UntypedFormGroup, AbstractControl, Validators } from '@angular/forms';\nimport { IUserData } from '../shared/interfaces';\nimport { PlayerService } from '../core/player.service';\n\n@Component({\n  selector: 'app-partial-profile-form-modal',\n  templateUrl: './partial-profile-form-modal.component.html',\n  styleUrls: ['./partial-profile-form-modal.component.css']\n})\nexport class PartialProfileFormModalComponent implements OnInit {\n\ttitle: string;\n\tcloseBtnName: string;\n\tprofile_user: IUserData;\n\tprofileForm: UntypedFormGroup;\n  gm_updates : AbstractControl;\n\n  constructor(\n  \tpublic bsModalRef: BsModalRef,\n  \tfb: UntypedFormBuilder, \n  \tprivate _playerService: PlayerService\n  \t) {\n  \tthis.title = \"Update profile for \"\n  \tthis.closeBtnName = \"Update\";\n\n  \tthis.profileForm = fb.group({\n      'gm_updates' : [],\n\t\t});\n\n    this.gm_updates = this.profileForm.controls['gm_updates'];\n    }\n\n  ngOnInit() {\n  \tthis.profileForm.patchValue(this.profile_user);\n  }\n\n  submitForm(value: string) {\n    this.profile_user.gm_updates = this.gm_updates.value;\n    // console.log(\"gm_updates = \", this.profile_user.gm_updates);\n\n  \tthis._playerService.updatePlayer(this.profile_user).subscribe((data) => {\n\t\t// console.log(\"Player updated:\", this.profile_user);\n\t});\n\n  }\n}\n","<!-- profile-form-modal.component.html -->\n\n<div class=\"modal-header\">\n\t<h4 class=\"modal-title pull-left\">{{title}} {{profile_user.full_name}}</h4>\n\t<button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n\t\t<span aria-hidden=\"true\">&times;</span>\n\t</button>\n</div>\n<form [formGroup]=\"profileForm\" (ngSubmit)=\"submitForm(profileForm.value)\">\n\t<div class=\"modal-body\">\n\t\t<div class=\"container\">\n\t\t\t<div class = \"row justify-content-start\">\n\t\t\t\t<div class = \"col-xs-auto\"><strong>Name:&nbsp;</strong></div>\n\t\t\t\t<div class = \"col\" class=\"text-muted\">{{ profile_user.full_name }}</div>\n\t\t\t</div>\n\t\t\t<div class = \"row justify-content-start\">\n\t\t\t\t<div class = \"col-xs-auto\"><strong>Email:&nbsp;</strong></div>\n\t\t\t\t<div class = \"col\" class=\"text-muted\">{{ profile_user.email }}</div>\n\t\t\t</div>\n\t\t\t<div class = \"row justify-content-start\">\n\t\t\t\t<div class = \"col-xs-auto\"><strong>Number of Entries:&nbsp;</strong></div>\n\t\t\t\t<div class = \"col\" class=\"text-muted\">{{ profile_user.num_entries }}</div>\n\t\t\t</div>\n\t\t\t<div class = \"row justify-content-start\">\n\t\t\t\t<div class = \"col-xs-auto\"><strong>(S)ame or (D)ifferent Brackets:&nbsp;</strong></div>\n\t\t\t\t<div class = \"col\" class=\"text-muted\" >{{ profile_user.num_entries == 1 ? '-' : profile_user.mult_entry_type }}</div>\n\t\t\t</div>\n\t\t\t<br>\n\t\t\t<div class = \"row justify-content-start\">\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<div class = \"custom-control custom-checkbox\">\n\t\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\"\n\t\t\t\t\t    id=\"gm_updates\" [formControl] = \"gm_updates\">\n\t\t\t\t\t    <label class=\"custom-control-label\" for=\"gm_updates\">\n\t\t\t\t\t\t    Receive email for game updates?\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div> <!-- end container-->\n\t\t<div class=\"modal-footer\">\n\t\t\t<button type=\"submit\" id=\"submit\" class=\"btn btn-success\" \n\t\t\t[disabled]=\"!profileForm.valid\"\n\t\t\t(click)=\"bsModalRef.hide()\">{{closeBtnName}}</button>\n\t\t</div>\n\t</div>  <!-- end modal-body-->\n</form>","// profile-form-modal.component.ts\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { UntypedFormBuilder, UntypedFormGroup, AbstractControl, Validators } from '@angular/forms';\r\nimport { IUserData } from '../shared/interfaces';\r\nimport { PlayerService } from '../core/player.service';\r\n\r\n@Component({\r\n  selector: 'app-profile-form-modal',\r\n  templateUrl: './profile-form-modal.component.html',\r\n  styleUrls: ['./profile-form-modal.component.css']\r\n})\r\nexport class ProfileFormModalComponent implements OnInit {\r\n\ttitle: string;\r\n\tcloseBtnName: string;\r\n\tprofile_user: IUserData;\r\n\tprofileForm: UntypedFormGroup;\r\n\tfirst_name : AbstractControl;\r\n\tlast_name : AbstractControl;\r\n\temail : AbstractControl;\r\n\tnum_entries : AbstractControl;\r\n\tmult_entry_type : AbstractControl;\r\n  gm_updates : AbstractControl;\r\n\r\n  constructor(\r\n  \tpublic bsModalRef: BsModalRef,\r\n  \tfb: UntypedFormBuilder, \r\n  \tprivate _playerService: PlayerService\r\n  \t) {\r\n  \t\r\n  \tthis.title = \"Update profile for \"\r\n  \tthis.closeBtnName = \"Update\";\r\n\r\n  \tthis.profileForm = fb.group({\r\n\t\t\t'first_name' : ['', Validators.required],\r\n\t\t\t'last_name' : ['', Validators.required],\r\n\t\t\t'email' : ['', Validators.compose([Validators.required, Validators.email])],\r\n\t\t\t'num_entries' : ['', Validators.compose([Validators.required, Validators.maxLength(4), Validators.minLength(1)])],\r\n\t\t\t'mult_entry_type' : ['', Validators.required],\r\n      'gm_updates' : [],\r\n\t\t});\r\n    \r\n  \tthis.first_name = this.profileForm.controls['first_name']; // allows for other properties, e.g. error values\r\n  \tthis.last_name  = this.profileForm.controls['last_name'];\r\n  \tthis.email      = this.profileForm.controls['email'];\r\n  \tthis.num_entries = this.profileForm.controls['num_entries'];\r\n  \tthis.mult_entry_type = this.profileForm.controls['mult_entry_type'];\r\n    this.gm_updates = this.profileForm.controls['gm_updates'];\r\n    }\r\n\r\n  ngOnInit() {\r\n  \tthis.profileForm.patchValue(this.profile_user);\r\n  }\r\n\r\n  submitForm(value: string) {\r\n  \tthis.profile_user.first_name = this.first_name.value;\r\n  \tthis.profile_user.last_name = this.last_name.value;\r\n  \tthis.profile_user.email = this.email.value.toLowerCase();\r\n  \tthis.profile_user.num_entries = this.num_entries.value;\r\n  \tthis.profile_user.mult_entry_type = this.mult_entry_type.value;\r\n    this.profile_user.gm_updates = this.gm_updates.value;\r\n    // console.log(\"gm_updates = \", this.profile_user.gm_updates);\r\n\r\n  \tthis._playerService.updatePlayer(this.profile_user).subscribe((data) => {\r\n\t\t// console.log(\"Player updated:\", this.profile_user);\r\n\t});\r\n\r\n  }\r\n}\r\n","<!-- profile-form-modal.component.html -->\r\n\r\n<div class=\"modal-header\">\r\n\t<h4 class=\"modal-title pull-left\">{{title}} {{profile_user.full_name}}</h4>\r\n\t<button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\r\n\t\t<span aria-hidden=\"true\">&times;</span>\r\n\t</button>\r\n</div>\r\n<form [formGroup]=\"profileForm\" (ngSubmit)=\"submitForm(profileForm.value)\">\r\n\t<div class=\"modal-body\">\r\n\t\t<div class=\"container\">\r\n\t\t\t<div class=\"form-row\">\r\n\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t<label for=\"first_name\">First Name</label>\r\n\t\t\t\t    <input type=\"text\" class=\"form-control\"\r\n\t\t\t\t    id=\"first_name\" [formControl] = \"first_name\"\r\n\t\t\t\t    [class.is-invalid] = \"first_name.invalid\">\r\n\t\t\t\t    <span *ngIf=\"first_name.invalid\" class=\"text-danger\">\r\n    \t\t\t\t\tFirst Name is required\r\n  \t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t<label for=\"last_name\">Last Name</label>\r\n\t\t\t\t    <input type=\"text\" class=\"form-control\"\r\n\t\t\t\t    id=\"last_name\" [formControl] = \"last_name\"\r\n\t\t\t\t    [class.is-invalid] = \"last_name.invalid\">\r\n\t\t\t\t    <span *ngIf=\"last_name.invalid\" class=\"text-danger\">\r\n    \t\t\t\t\tLast Name is required\r\n  \t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class = \"form-group\">\r\n\t\t\t\t<label for=\"email\">Email</label>\r\n\t\t\t    <input type=\"email\" class=\"form-control\"\r\n\t\t\t    id=\"email\" [formControl] = \"email\"\r\n\t\t\t    [class.is-invalid] = \"email.invalid\">\r\n\t\t\t    <span *ngIf=\"email.invalid && email.errors.required\" class=\"text-danger\">\r\n    \t\t\t\t\tEmail is required\r\n  \t\t\t\t</span>\r\n  \t\t\t\t<span *ngIf=\"email.invalid && email.errors.email\" class=\"text-danger\">\r\n    \t\t\t\t\tEmail must be a valid address\r\n  \t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"form-row\">\r\n\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t<label for=\"num_entries\">Number of Entries</label>\r\n\t\t\t\t    <input type=\"number\" min = \"1\" max = \"4\" class=\"form-control\" #entries\r\n\t\t\t\t    id=\"num_entries\" [formControl] = \"num_entries\"\r\n\t\t\t\t    [class.is-invalid] = \"num_entries.invalid\">\r\n\t\t\t\t    <span *ngIf=\"num_entries.invalid && num_entries.errors.required\" class=\"text-danger\">\r\n    \t\t\t\t\tNumber of Entries is required\r\n  \t\t\t\t\t</span>\r\n  \t\t\t\t\t<span *ngIf=\"num_entries.invalid && (num_entries.errors.minlength || num_entries.errors.maxlength)\" class=\"text-danger\">\r\n    \t\t\t\t\tMust submit a number between 1-4\r\n  \t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"form-group col-md-6\" *ngIf=\"entries.value>1\">\r\n\t\t\t\t\t<label for=\"mult_entry_type\">(S)ame or (D)ifferent</label>\r\n\t\t\t\t    <select class=\"form-control\"\r\n\t\t\t\t    id=\"mult_entry_type\" [formControl] = \"mult_entry_type\">\r\n\t\t\t\t    \t<option>S</option>\r\n\t\t\t\t    \t<option>D</option>\r\n\t\t\t\t    </select>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"form-group\">\r\n\t\t\t\t<div class = \"custom-control custom-checkbox\">\r\n\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\"\r\n\t\t\t\t    id=\"gm_updates\" [formControl] = \"gm_updates\">\r\n\t\t\t\t    <label class=\"custom-control-label\" for=\"gm_updates\">\r\n\t\t\t\t\t    Receive email for game updates?\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>  <!-- end container -->\r\n\t\t<div class=\"modal-footer\">\r\n\t\t\t<button type=\"submit\" id=\"submit\" class=\"btn btn-success\" \r\n\t\t\t[disabled]=\"!profileForm.valid\"\r\n\t\t\t(click)=\"bsModalRef.hide()\">{{closeBtnName}}</button>\r\n\t\t</div>\r\n\t</div>  <!-- end modal-body -->\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { IUserData } from '../shared/interfaces';\r\nimport { PlayerService } from '../core/player.service';\r\nimport { UserService } from '../core/user.service';\r\nimport { faRotate } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\tuser: IUserData; // for passing player info to sub-components (profile-details & profile-edit)\r\n\t_pageTitle: string;\r\n\r\n  // fortawesome icons\r\n  faRotate = faRotate;\r\n\t\r\n\tconstructor(private route: ActivatedRoute,\r\n\t\tprivate _playerService: PlayerService,\r\n    public _userService: UserService,) { }\r\n\r\n\tngOnInit() {\r\n\t\t// this.user = this.route.snapshot.data.loggedInUser;\r\n\t\tthis.route.queryParams.subscribe(params => {\r\n\t\t\t// if profile page is called for other Player (with query param), set user = Player\r\n\t\t\tif (params.id === undefined) {\r\n\t\t\t\t\tthis.user = this.route.snapshot.data.loggedInUser;\r\n\t\t\t\t\tthis._pageTitle = \"My\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._playerService.getPlayer(params.id).subscribe((data) => {\r\n\t\t\t\t\t\tthis.user = data;\r\n\t\t\t\t\t\tthis._pageTitle = this.user.first_name + \"'s\";\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","<!--profile.component.html-->\r\n<div *ngIf=\"user\">\r\n\t<br>\r\n\t<h4>{{ _pageTitle }} Info</h4>\r\n\t<app-profile-details [player] = \"user\"></app-profile-details>\r\n\t<br>\r\n  <div class=\"d-flex flex-row align-items-center\">\r\n    <div class=\"h4\">{{ _pageTitle }} Teams</div>\r\n    <div *ngIf=\"!_userService.beforeTourney\" class=\"d-inline d-md-none pl-3\"><span class=\"rotate\"><fa-icon [icon]=\"faRotate\"></fa-icon>&nbsp;Rotate to see Next Game(s)</span></div>\r\n  </div>\r\n\t<!-- <h4>{{ _pageTitle }} Teams</h4> -->\r\n\t<app-team-details [player] = \"user\"></app-team-details>\r\n\t<br>\r\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-roster-textbox',\r\n  // templateUrl: './roster-textbox.component.html',\r\n  template: `\r\n        Search by Name: <input type=\"text\" [(ngModel)]=\"filter\" />\r\n    `,\r\n  styleUrls: ['./roster-textbox.component.css']\r\n})\r\nexport class RosterTextboxComponent implements OnInit {\r\n\r\n\tprivate _filter: string;\r\n\t\r\n    @Input() get filter() {\r\n        return this._filter;\r\n    }\r\n    \r\n    set filter(val: string) { \r\n        this._filter = val;\r\n        this.changed.emit(this.filter); //Raise changed event\r\n    }\r\n\r\n    @Output() changed: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n\tconstructor() { }\r\n\r\n\tngOnInit() {\r\n\t}\r\n\r\n}\r\n","import { Component, OnInit, OnChanges, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PlayerService } from '../core/player.service';\r\nimport { UserService } from '../core/user.service';\r\nimport { SorterService } from '../core/sorter.service';\r\nimport { IUserData } from '../shared/interfaces';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { ProfileFormModalComponent } from '../profile-form-modal/profile-form-modal.component';\r\nimport { AdminProfileFormModalComponent } from '../profile-form-modal/admin-profile-form-modal.component';\r\nimport { faCaretDown, faCaretUp, faEdit } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n\tselector: 'app-roster',\r\n\ttemplateUrl: './roster.component.html',\r\n\tstyleUrls: ['./roster.component.css']\r\n})\r\nexport class RosterComponent implements OnInit {\r\n\t_roster: IUserData[];\r\n\t_filteredRoster: IUserData[];\r\n\t_loggedInUser: IUserData; // to capture loggedInUser object from parent component\r\n\thoveredIndex: number; // to user which row a user hovers on\r\n\t_numRegistrants: number; // tally up # of registrations for display at top\r\n\t_numBrackets: number; //tally estimated # of brackets\r\n\t_numEntries: number; //tally up # of entries num bracket calculation\r\n\t_numNeededEntries: number; //# entries needed to complete another bracket\r\n\tloading: boolean;\r\n\t_property: string;\r\n\t_direction: number=1;\r\n\r\n  // fortawesome icons\r\n  faCaretDown = faCaretDown;\r\n  faCaretUp = faCaretUp;\r\n  faEdit = faEdit;\r\n\t\r\n\t// Retrieve loggedInUser from parent component\r\n\t@Input() get loggedInUser(): IUserData {\r\n\t\treturn this._loggedInUser;\r\n\t}\r\n\r\n\tset loggedInUser(value: IUserData) {\r\n\t\tif (value) {\r\n\t\t\tthis._loggedInUser = value;\r\n\t\t}\r\n\t}\r\n\r\n\t// Retrieve roster from parent component\r\n\t@Input() get roster(): IUserData[] {\r\n\t\treturn this._roster;\r\n\t}\r\n\r\n\tset roster(value: IUserData[]) {\r\n\t\tif (value) {\r\n\t\t\tthis._filteredRoster = this._roster = value;\r\n\t\t}\r\n\t}\r\n\r\n\t// Modal object to capture content\r\n\tbsModalRef: BsModalRef;\r\n\t\r\n \tconstructor(\r\n\t\tprivate _playerService: PlayerService,\r\n \t\tprivate _userService: UserService, \r\n \t\tprivate _modalService: BsModalService,\r\n \t\tprivate sorterService: SorterService,\r\n\t) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.loading = true;\r\n\t\t// Calculate registration stats needed at top of page\r\n\t\tthis._numRegistrants = 1; // start at 1 since _loggedInUser counts as 1\r\n\t\tthis._numBrackets = 0;\r\n\t\tthis._numEntries = this._loggedInUser.num_entries; // start _numEntries counter at # that loggedInUser has\r\n\t\tthis._roster.forEach(registrant => {\r\n\t\t\tthis._numRegistrants += 1;\r\n\t\t\tthis._numEntries += registrant.num_entries;\r\n\t\t})\r\n\t\tthis._numBrackets = Math.floor(this._numEntries/16);\r\n\t\tthis._numNeededEntries = (this._numBrackets+1)*16 - this._numEntries\r\n\t\tthis.loading=false;\r\n\t}\r\n\r\n\topenProfileModal() {\r\n\t\t\tconst initialState = {\r\n\t\t\t\tid: this.hoveredIndex,\r\n\t\t\t\tprofile_user: this._loggedInUser\r\n\t\t\t};\r\n\t\t\tthis.bsModalRef = this._modalService.show(ProfileFormModalComponent, {initialState});\r\n\r\n\t\t\tthis._modalService.onHidden.subscribe((reason: string) => {\r\n\t\t\t\t// Upon modal being closed run these actions\r\n\t\t\t\t// const _reason = reason ? `, dismissed by ${reason}` : '';\r\n\t\t\t\t// console.log (\"Profile modal was closed \", reason);\r\n\t\t\t\t// Update logged in User against database after modal closes\r\n\t\t\t\t// This updates the affected (1st) row for any changes that was made on the Modal\r\n\t\t\t\t// this._userService.getLoggedInUser().subscribe(data => {\r\n\t\t\t\t// \tthis._loggedInUser = data;\r\n\t\t\t\t// })\r\n\t\t\t})\r\n\t}\r\n\r\n\tfilter(data: string) {\r\n\t\t// Function that filters the Roster list based on what a user types in the roster-textbox component\r\n\t\tif (data) {\r\n\t\t\tthis._filteredRoster = this._roster.filter(item => item.full_name.toLowerCase().indexOf(data.toLowerCase()) > -1);\r\n\t\t} else {\r\n\t\t\tthis._filteredRoster = this._roster;\r\n\t\t}\r\n\t}\r\n\r\n\tsort(prop: string) {\r\n\t\tthis.sorterService.sort(this._filteredRoster, prop);\r\n\t\tthis._property = prop;\r\n\t\tthis._direction = (this._property === prop) ? this._direction * -1 : 1;\r\n\t\t// console.log (\"property = \", this._property, \" & direction = \", this._direction);\r\n\t}\r\n}","<!--roster.component.html-->\r\n<h4>Registrants</h4>\r\n<div [class.loader] = \"loading\">\r\n<div class = \"d-flex flex-row justify-content-around\">\r\n\t<div class = \"col d-none d-md-block\"></div>\r\n\t<div class = \"col col-3-md text-center bg-secondary text-white rounded py-2 mx-1\">\r\n\t\t<p class=\"mb-0\">People Registered</p>\r\n\t\t<h1 class=\"display-3 m-0\">{{_numRegistrants}}</h1>\r\n\t</div>\r\n\t<div class = \"col d-none d-md-block\"></div>\r\n\t<div class = \"col col-3-md text-center bg-secondary text-white rounded py-2 mx-1\">\r\n\t\t<p class=\"mb-0\">Number of Entries</p>\r\n\t\t<h1 class=\"display-3 m-0\">{{_numEntries}}</h1>\r\n\t</div>\r\n\t<div class = \"col d-none d-md-block\"></div>\r\n\t<div class = \"col col-2-md text-center bg-secondary text-white rounded py-2 mx-1\">\r\n\t\t<p class=\"mb-0\">Number of Brackets</p>\r\n\t\t<h1 class=\"display-4 m-0\">{{_numBrackets}}</h1>\r\n\t\t<small class=\"m-0\" *ngIf = \"_numNeededEntries > 1\">({{_numNeededEntries}} more entries for another!)</small>\r\n\t\t<small class=\"m-0\" *ngIf = \"_numNeededEntries == 1\">({{_numNeededEntries}} more entry for another!)</small>\r\n\t</div>\r\n\t<div class = \"col d-none d-md-block\"></div>\r\n</div>\r\n<br>\r\n<app-roster-textbox (changed)=\"filter($event)\"></app-roster-textbox>\r\n<br>\r\n<br>\r\n<table class=\"table table-sm\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">#</th>\r\n\t\t\t<th scope=\"col\" (click)=\"sort('last_name')\" class=\"cursor-pointer\">Name\r\n\t\t\t\t<!-- \r\n        <fa *ngIf=\"_property=='last_name' && _direction==1\" name=\"caret-down\"></fa>\r\n\t\t\t\t<fa *ngIf=\"_property=='last_name' && _direction==-1\" name=\"caret-up\"></fa>\r\n        -->\r\n        <fa-icon *ngIf=\"_property=='last_name' && _direction==1\" [icon]=\"faCaretDown\"></fa-icon>\r\n\t\t\t\t<fa-icon *ngIf=\"_property=='last_name' && _direction==-1\" [icon]=\"faCaretUp\"></fa-icon>\r\n\t\t\t</th>\r\n\t\t\t<th scope=\"col\" (click)=\"sort('num_entries')\" class=\"cursor-pointer\">Num Entries\r\n\t\t\t\t<!-- \r\n        <fa *ngIf=\"_property=='num_entries' && _direction==1\" name=\"caret-down\"></fa>\r\n\t\t\t\t<fa *ngIf=\"_property=='num_entries' && _direction==-1\" name=\"caret-up\"></fa>\r\n        -->\r\n        <fa-icon *ngIf=\"_property=='num_entries' && _direction==1\" [icon]=\"faCaretDown\"></fa-icon>\r\n\t\t\t\t<fa-icon *ngIf=\"_property=='num_entries' && _direction==-1\" [icon]=\"faCaretUp\"></fa-icon>\r\n\t\t\t</th>\r\n\t\t\t<th scope=\"col\">(S)ame/(D)iff</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 5%\">Edit</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr on-mouseover=\"hoveredIndex=_loggedInUser.id\" on-mouseleave=\"hoveredIndex=null\">\r\n\t\t\t<th scope=\"row\">1</th>\r\n\t\t\t<td><strong>{{ _loggedInUser.first_name }}&nbsp;{{ _loggedInUser.last_name }}*</strong></td>\r\n\t\t\t<td><strong>{{ _loggedInUser.num_entries }}</strong></td>\r\n\t\t\t<td><strong>{{ _loggedInUser.num_entries == 1 ? '-' : _loggedInUser.mult_entry_type }}</strong></td>\r\n\t\t\t<td>\r\n\t\t\t\t<!--\r\n        <fa name=\"edit\" *ngIf=\"hoveredIndex==_loggedInUser.id\" class = \"cursor-pointer\" tooltip = \"Edit Profile\" (click)=\"openProfileModal()\"></fa>\r\n        -->\t\r\n        <fa-icon [icon]=\"faEdit\" *ngIf=\"hoveredIndex==_loggedInUser.id\" class = \"cursor-pointer\" tooltip = \"Edit Profile\" (click)=\"openProfileModal()\"></fa-icon>\t\t\t\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr *ngFor = \"let player of _filteredRoster; let i = index\">\r\n\t\t\t<th scope=\"row\">{{i + 2}}</th>\r\n\t\t\t<td>{{ player.full_name }}</td>\r\n\t\t\t<td>{{ player.num_entries }}</td>\r\n\t\t\t<td>{{ player.num_entries == 1 ? '-' : player.mult_entry_type }}</td>\r\n\t\t\t<td></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n<br>\r\n</div>","// Functions used by the app\r\n\r\nexport const convertTime12to24 = time12h => {\r\n  // This function converts a 12 hour time returned by the Calendar widget (hh:mm PM) to\r\n  // a 24 hour time (hh:mm) that can be sent to, stored by the back-end\r\n  const [time, modifier] = time12h.split(\" \");\r\n \r\n  let [hours, minutes] = time.split(\":\");\r\n \r\n  if (hours === \"12\") {\r\n    hours = \"00\";\r\n  }\r\n \r\n  if (modifier === \"PM\") {\r\n    hours = parseInt(hours, 10) + 12;\r\n  }\r\n \r\n  return `${hours}:${minutes}`;\r\n};\r\n\r\nexport const convertTime24to12 = time24h => {\r\n  // This function converts a 24 hr time from the back-end (hh:mm) into a \r\n  // 12 hour time string (hh:mm PM) that can populate the calendar widget with the currently\r\n  // set value\r\n\r\n  // Check correct time format and split into components\r\n  var time = time24h.match (/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time24h];\r\n\r\n  if (time.length > 1) { // If time format correct\r\n    time = time.slice(1);  // Remove full string match value\r\n    time[5] = \" \"; // add space between time & AM/PM\r\n    time[6] = +time[0] < 12 ? 'AM' : 'PM'; // Set AM/PM\r\n    time[0] = +time[0] % 12 || 12; // Adjust hours\r\n  }\r\n  return time.join ('') // return adjusted time or original string\r\n}","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { TBracketService } from '../core/tbracket.service';\r\nimport { UserService } from '../core/user.service';\r\nimport { TBracketData } from '../shared/interfaces';\r\nimport { faRotate } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-standings-nav',\r\n  templateUrl: './standings-nav.component.html',\r\n  styleUrls: ['./standings-nav.component.css']\r\n})\r\nexport class StandingsNavComponent implements OnInit {\r\n\t_tbracketList: TBracketData[];\r\n\r\n  // fortawesome icons\r\n  faRotate = faRotate;\r\n\r\n\tconstructor(\r\n\t\tprivate _tbracketService: TBracketService,\r\n\t\tprivate _userService: UserService\r\n\t\t)\t{ }\r\n\r\n\tngOnInit() {\r\n\r\n\t// Retrieve list of brackets for bracket navbar\r\n\tthis._tbracketService.getListWithPlayer(this._userService.id).subscribe(data => {\r\n\t\t\tthis._tbracketList = data;\r\n\t\t});\r\n\r\n\t} //end ngOnInit\r\n\r\n}\r\n","<!-- dtandings-nav.component.html -->\r\n<div class=\"d-flex flex-row align-items-center\">\r\n  <div class=\"h4\">Standings</div>\r\n  <div class=\"d-inline d-md-none pl-3\"><span class=\"rotate\"><fa-icon [icon]=\"faRotate\"></fa-icon>&nbsp;Rotate to see Teams</span></div>\r\n</div>\r\n<small class=\"text-muted\">(Click to see bracket)</small>\r\n<tabset type=\"pills\">\r\n\t<tab *ngFor = \"let tbracket of _tbracketList\" heading=\"{{ tbracket.name }}\">\r\n\t\t<app-standings [bracket]=\"tbracket.id\"></app-standings>\r\n\t</tab>\r\n</tabset>\r\n<br>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { EntryStandingsData, RegionData } from '../shared/interfaces';\r\nimport { EntryService } from '../core/entry.service';\r\nimport { UserService } from '../core/user.service';\r\nimport { RegionService } from '../core/region.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-standings',\r\n  templateUrl: './standings.component.html',\r\n  styleUrls: ['./standings.component.css']\r\n})\r\nexport class StandingsComponent implements OnInit {\r\n\r\n\t_standingsList: EntryStandingsData[];\r\n\t_regionList: RegionData[];\r\n\t_bracketId: number;\r\n\tloading: boolean;\r\n\r\n\t@Input() get bracket(): number {\r\n\t\treturn this._bracketId;\r\n\t}\r\n\tset bracket(value: number) {\r\n\t\tif (value) {\r\n\t\t\tthis._bracketId = value;\r\n\t\t}\r\n\t}\r\n\r\n  constructor(\r\n  \tprivate _entryService: EntryService,\r\n  \tprivate _userService: UserService,\r\n  \tprivate _regionService: RegionService,\r\n  \t) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.loading = true;\r\n\t\t// Retrieve entries for players within bracket\r\n\t\tthis._entryService.getEntryStandings(this._bracketId).subscribe(data => {\r\n\t\t\tthis._standingsList = data;\r\n\t\t\t// Sort the standings by descending team_count (they're pre-sorted by last name descending)\r\n\t\t\t// this._standingsList.sort((a,b) => (a.team_count > b.team_count) ? -1 : ((b.team_count > a.team_count) ? 1 : 0));\r\n      this._standingsList.sort((a,b) => (a.standing_points > b.standing_points) ? -1 : ((b.standing_points > a.standing_points) ? 1 : 0));\r\n\t\t\tthis.loading = false;\r\n\t\t});\r\n\r\n\t\t// Retrieve list of regions to display in column titles\r\n\t\tthis._regionService.getRegionList().subscribe(data => {\r\n\t\t\tthis._regionList = data;\r\n\t\t})\r\n\t}// end ngOnInit\r\n}\r\n","<br>\r\n<div [class.loader] = \"loading\" class=\"table-responsive\">\r\n  <table class=\"table table-sm\" *ngIf=\"_regionList\">\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\">Name</th>\r\n        <th scope=\"col\" class=\"text-center\"># Active Teams</th>\r\n        <th scope=\"col\" class=\"d-none d-sm-table-cell\">{{ _regionList[0].name }}</th>\r\n        <th scope=\"col\" class=\"d-none d-sm-table-cell\">{{ _regionList[1].name }}</th>\r\n        <th scope=\"col\" class=\"d-none d-sm-table-cell\">{{ _regionList[2].name }}</th>\r\n        <th scope=\"col\" class=\"d-none d-sm-table-cell\">{{ _regionList[3].name }}</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor = \"let entry of _standingsList; let i = index\" \r\n      [class.bg-success]=\"entry.player_id == _userService.id\" \r\n      [class.text-white]=\"entry.player_id == _userService.id\">\r\n        <td *ngIf=\"entry.player_id == _userService.id\">{{ entry.player }}</td>\r\n        <td *ngIf=\"entry.player_id != _userService.id\">\r\n          <a [routerLink]=\"['/profile']\" [queryParams]=\"{id: entry.player_id}\">{{ entry.player }}</a>\r\n        </td>\r\n        <td class=\"text-center\">{{ entry.team_count }}</td>\r\n        <td class=\"d-none d-sm-table-cell\"><span [class.standings-out]=\"entry.team_a_status == '(OUT)'\">{{ entry.team_a }}\r\n          <small class=\"d-none d-lg-table-cell\"> {{ entry.team_a_status }}</small></span>\r\n        </td>\r\n        <td class=\"d-none d-sm-table-cell\"><span [class.standings-out]=\"entry.team_b_status == '(OUT)'\">{{ entry.team_b }}\r\n          <small class=\"d-none d-lg-table-cell\"> {{ entry.team_b_status }}</small></span>\r\n        </td>\r\n        <td class=\"d-none d-sm-table-cell\"><span [class.standings-out]=\"entry.team_c_status == '(OUT)'\">{{ entry.team_c }}\r\n          <small class=\"d-none d-lg-table-cell\"> {{ entry.team_c_status }}</small></span>\r\n        </td>\r\n        <td class=\"d-none d-sm-table-cell\"><span [class.standings-out]=\"entry.team_d_status == '(OUT)'\">{{ entry.team_d }}\r\n          <small class=\"d-none d-lg-table-cell\"> {{ entry.team_d_status }}</small></span>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { IUserData, EntryData, GameData, RegionData, EntryMyTeamsData } from '../shared/interfaces';\r\nimport { EntryService } from '../core/entry.service';\r\nimport { GameService } from '../core/game.service';\r\nimport { RegionService } from '../core/region.service';\r\nimport { UserService } from '../core/user.service';\r\n\r\n@Component({\r\n  selector: 'app-team-details',\r\n  templateUrl: './team-details.component.html',\r\n  styleUrls: ['./team-details.component.css']\r\n})\r\nexport class TeamDetailsComponent implements OnInit {\r\n\r\n\t_player: IUserData;\r\n\t_entryList: EntryMyTeamsData[];\r\n\t_regionList: RegionData[];\r\n\tloading: boolean;\r\n\r\n\t@Input() get player(): IUserData {\r\n\t\treturn this._player;\r\n\t}\r\n\tset player(value: IUserData) {\r\n\t\tif (value) {\r\n\t\t\tthis._player = value;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(private _entryService: EntryService,\r\n\t\tprivate router: Router,\r\n\t\tprivate _regionService: RegionService,\r\n\t\tpublic _userService: UserService,) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.loading=true;\r\n\t\t//retrieve entries for user\r\n\t\t\r\n\t\tthis._entryService.getEntryDetailsListMyTeamsByPlayer(this._player.id).subscribe(data => {\r\n\t\t\tthis._entryList = data;\r\n\r\n\t\t\t// Retrieve list of regions to display in tabs\r\n\t\t\tthis._regionService.getRegionList().subscribe(data => {\r\n\t\t\t\tthis._regionList = data;\r\n\t\t\t\tthis.loading=false;\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t// Function to create url that to which user is sent when click on Bracket name\r\n\tsendToBracket(bracket) {\r\n\t\tthis.router.navigate(['/brackets', bracket])\r\n\t} // end sendToBracket()\r\n\r\n}\r\n","<!-- team-details.component.html-->\r\n<div *ngIf=\"!_userService.beforeTourney\">\r\n<div [class.loader] = \"loading\">\r\n<div *ngIf=\"_entryList && _entryList.length\">\r\n\t<!-- <div class = \"table table-borderless table-sm table-responsive\" *ngFor = \"let entry of _entryList\" id=\"my-teams\"> -->\r\n  <table class = \"table table-borderless table-sm w-100\" *ngFor = \"let entry of _entryList\" id=\"my-teams\">\r\n\t\t<thead>\r\n\t\t\t<tr class=\"table-active\">\r\n\t\t\t\t<th scope=\"col\">Bracket</th>\r\n\t\t\t\t<th scope=\"col\">Region</th>\r\n\t\t\t\t<th scope=\"col\">Original Teams</th>\r\n\t\t\t\t<th scope=\"col\">Active Team(s)</th>\r\n\t\t\t\t<th scope=\"col\" class=\"d-none d-sm-table-cell\">Next Game</th>\r\n\t\t\t</tr>\r\n\t\t</thead>\r\n\t\t<tbody *ngIf=\"_regionList\">\r\n\t\t\t<tr>\r\n\t\t\t\t<td class=\"text-primary text-pointer\" (click)=\"sendToBracket(entry.tbracket_id)\"><strong>{{ entry.tbracket }}</strong></td>\r\n\t\t\t\t<td>{{ _regionList[0].name }}</td>\r\n\t\t\t\t<td>{{ entry.orig_team_a }}</td>\r\n\t\t\t\t<td>{{ entry.team_a || '**OUT**'}}</td>\r\n\t\t\t\t<td class=\"d-none d-sm-table-cell\"><a [routerLink]=\"['/brackets', entry.tbracket_id]\" fragment={{entry.region_a-1}}>{{ entry.next_team_a }}</a></td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<td></td>\r\n\t\t\t\t<td>{{ _regionList[1].name }}</td>\r\n\t\t\t\t<td>{{ entry.orig_team_b }}</td>\r\n\t\t\t\t<td>{{ entry.team_b || '**OUT**'}}</td>\r\n\t\t\t\t<td class=\"d-none d-sm-table-cell\"><a [routerLink]=\"['/brackets', entry.tbracket_id]\" fragment={{entry.region_b-1}}>{{ entry.next_team_b }}</a></td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<td></td>\r\n\t\t\t\t<td>{{ _regionList[2].name }}</td>\r\n\t\t\t\t<td>{{ entry.orig_team_c }}</td>\r\n\t\t\t\t<td>{{ entry.team_c || '**OUT**'}}</td>\r\n\t\t\t\t<td class=\"d-none d-sm-table-cell\"><a [routerLink]=\"['/brackets', entry.tbracket_id]\" fragment={{entry.region_c-1}}>{{ entry.next_team_c }}</a></td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<td></td>\r\n\t\t\t\t<td>{{ _regionList[3].name }}</td>\r\n\t\t\t\t<td>{{ entry.orig_team_d }}</td>\r\n\t\t\t\t<td>{{ entry.team_d || '**OUT**'}}</td>\r\n\t\t\t\t<td class=\"d-none d-sm-table-cell\"><a [routerLink]=\"['/brackets', entry.tbracket_id]\" fragment={{entry.region_d-1}}>{{ entry.next_team_d }}</a></td>\r\n\t\t\t</tr>\r\n\t\t</tbody>\r\n\t<!-- </div> -->\r\n  </table>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n\r\n<div *ngIf=\"_userService.beforeTourney\">\r\n\t<br>\r\n\t<div class=\"text-center\">\r\n\t\t<br>\r\n\t\t<h5 class=\"font-italic text-muted\">** Teams will be assigned by Thursday, March 16, 2023, at 10am CST **</h5>\r\n\t\t<small>Check back then to see which brackets your entries were assigned (4 teams, 1 per Region, assigned to each entry)</small>\r\n    <br>\r\n\t</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<!--src/app/ui/header/footer.component.html-->\r\n\r\n<nav class=\"navbar navbar-dark bg-primary fixed-bottom footer\">\r\n  <div class=\"navbar-expand m-auto navbar-text footer\">\r\n  \t<i class = \"fa fa-ban\"></i>&nbsp;Exit Zero Technologies 2018-2023\r\n  </div>\r\n</nav>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { UserService } from '../../core/user.service';\r\nimport { EntryService } from '../../core/entry.service';\r\nimport { TBracketService } from '../../core/tbracket.service';\r\nimport { GameService } from '../../core/game.service';\r\nimport { EntryBracketData, TBracketData, IUserData, GameData } from '../../shared/interfaces';\r\n\r\nimport { Store } from 'redux';\r\nimport { AppStore } from '../../app.store';\r\nimport { AppState } from '../../app.state';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\tisCollapsed = true;\r\n\t_bracketToShow: number;\r\n\tcurrentUser : IUserData;\r\n\ttbracketList: TBracketData[];\r\n\t_mobile: boolean = false;\r\n\t_region_id: number;\r\n\r\n\tconstructor(\r\n\t\tprivate router: Router,\r\n\t\tprivate _userService: UserService,\r\n\t\tprivate _entryService: EntryService,\r\n\t\tprivate _tbracketService: TBracketService,\r\n\t\tprivate _gameService: GameService,\r\n\t\t@Inject(AppStore) private store: Store<AppState>\r\n\t\t) {\r\n\r\n\t\tstore.subscribe(() => this.readState());\r\n\t\tthis.readState(); \r\n\r\n\t\t}\r\n\r\n\tngOnInit() {\r\n\t\t// See if the tourney is at the Final Four and show Final Four tab if true\r\n\t\tthis._gameService.isFinalFour().subscribe(data => {\r\n\t\t\t// console.log(\"The Final Four is happening now is: \", data['happening']);\r\n\t\t\tif (data['happening']) {\r\n\t\t\t\tthis._region_id = 4;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._region_id = 0\r\n\t\t\t}\r\n\t\t\t// Attempted to use redux currentUser but doesn't render quick enough\r\n\t\t\t// Instead use _userService to get logged in user id, then tbracketService to get player's bracket id\r\n\t\t\tthis._tbracketService.getListWithPlayer(this._userService.id).subscribe(data => {\r\n\t\t\t\tif (data.length > 0) {\r\n\t\t\t\t\tthis._bracketToShow = data[0].id;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._bracketToShow = null;\r\n\t\t\t\t}\r\n\t\t\t\t// console.log(\"The bracketToShow is \", this._bracketToShow)\r\n\t\t\t\tthis.tbracketList = data;\r\n\t\t\t});\r\n\t\t})\r\n\t\t\r\n\t\t\r\n\t} //end ngOnInit()\r\n\r\n  \t// This function is used to keep Brackets nav bar option 'active' regardless of parameter\r\n\tisActive(instruction: any[]): boolean {\r\n\t\t// Set the second parameter to true if you want to require an exact match.\r\n\t\treturn this.router.isActive(this.router.createUrlTree(instruction), false);\r\n\t}\r\n\r\n\t// Invoke logout() method on userService and re-direct user to \"/logout/\"\r\n\tlogout() {\r\n\t\tthis._userService.logout();\r\n\t\tthis.router.navigate(['/logout']);\r\n\t}\r\n\r\n\t// Redux store methods\r\n\treadState() {\r\n\t\tconst state: AppState = this.store.getState() as AppState;\r\n\t\tthis.currentUser = state.currentUser;\r\n\t}\r\n\r\n\tisUserAdmin() {\r\n\t\tif (this.currentUser) {\r\n\t\t\treturn (this.currentUser.is_staff==1);\r\n\t\t}\r\n\t\telse return false;\r\n\t}\r\n}\r\n","<!--src/app/ui/header/header.component.html-->\r\n\r\n<!-- Navigation Menu for site -->\r\n<nav class=\"navbar navbar-expand-md navbar-dark bg-primary\">\r\n\t<div class=\"container-fluid\">\r\n\t\t<a class=\"navbar-brand p-2\" [routerLink]=\"['/home']\">\r\n\t\t\t<img src=\"../static/front-end/assets/spreadpool_white_no_background_48x114.png\" alt=\"Spreadpool\">\r\n\t\t</a>\r\n\t\t<div class=\"d-flex ml-auto p-2 flex-row order-2 order-md-3 align-middle\">\r\n\t\t\t<a *ngIf=\"currentUser\" class=\"navbar-text\" [routerLink]=\"['/profile']\">Hi, {{ currentUser.first_name }}!</a>\r\n\t        <form class=\"form-inline\">\r\n\t\t    \t<button type=\"button\" class=\"btn btn-outline-light\" (click)=\"logout()\">Log Out</button>\r\n\t\t  \t</form>\r\n\t\t</div>\r\n    <div class=\"p-2 order-3 order-md-2 mob-display\">\r\n      <ul class=\"navbar-nav d-flex flex-row justify-content-between\">\r\n        <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/home']\">Home</a>\r\n        </li>\r\n        <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/profile']\">My Teams</a>\r\n        </li>\r\n        <li class=\"nav-item\" [class.active]=\"isActive(['/brackets'])\" *ngIf = \"_bracketToShow\">\r\n          <a *ngIf=\"_bracketToShow\" class=\"nav-link\" [routerLink]=\"['/brackets', _bracketToShow]\" [fragment]=\"_region_id\">Brackets</a>\r\n        </li>\r\n        <li class=\"nav-item dropdown\" dropdown *ngIf=\"isUserAdmin()\">\r\n          <a class=\"nav-link dropdown-toggle\" dropdownToggle (click)=\"false\" \r\n          href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            Admin\r\n          </a>\r\n          <div class=\"dropdown-menu\" *dropdownMenu aria-labelledby=\"navbarDropdown\">\r\n            <a class=\"dropdown-item\" [routerLink]=\"['/admin/c-brackets']\">Manage Brackets</a>\r\n            <a class=\"dropdown-item\" [routerLink]=\"['/admin/a-brackets', _bracketToShow]\">Assign Entries</a>\r\n            <a class=\"dropdown-item\" [routerLink]=\"['/admin/u-games']\">Update Games</a>\r\n            <a class=\"dropdown-item\" [routerLink]=\"['/admin/s-emails']\">Send Emails</a>\r\n            <a class=\"dropdown-item\" [routerLink]=\"['/admin/e-roster']\">Edit Roster</a>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div> <!--end container-fluid -->\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.css']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\r\n<div class=\"container mb-3\">\r\n\t<ng-content></ng-content>\r\n</div>\r\n<app-footer></app-footer>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LayoutComponent } from './layout/layout.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\n\r\nimport { AppRoutingModule } from '../app-routing.module';\r\nimport { AppBootstrapModule } from '../app-bootstrap.module';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\n@NgModule({\r\n  declarations: [LayoutComponent, HeaderComponent, FooterComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AppRoutingModule,\r\n    AppBootstrapModule,\r\n    FontAwesomeModule,\r\n  ],\r\n  exports: [LayoutComponent]\r\n})\r\nexport class UiModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["CommonModule","RouterModule","Routes","FormsModule","ReactiveFormsModule","FontAwesomeModule","PickListModule","CalendarModule","BrowserAnimationsModule","AssignBracketsComponent","CreateBracketsComponent","UpdateGamesComponent","GameDetailComponent","SendEmailsComponent","EditRosterComponent","EditRosterTextboxComponent","routes","path","redirectTo","pathMatch","component","AdminModule","declarations","imports","exports","EntryService","TBracketService","Router","ActivatedRoute","i0","constructor","_entryService","route","_tbracketService","router","ngOnInit","params","subscribe","id","refreshData","getList","data","_tbracketList","tbracket_id","getTbracket","_activeBracket","getEntryListByBracket","_assignedEntries","_assignEntries_len","length","getEntryListbyNullBracket","_unassignedEntries","_unassignedEntries_len","saveAndGoBack","forEach","entry","tbracket","updateEntry","navigate","goBack","recalculate","onBracketSelected","tbracket_id_num","Number","selectors","decls","vars","consts","template","ctx","TemplateRef","TBracketData","UserService","UntypedFormBuilder","Validators","BsModalService","DeleteModalComponent","ReassignModalComponent","ResetModalComponent","_userService","fb","modalService","bracketAddForm","group","required","bracket_name","controls","new_bracket","resetList","ngOnChanges","showEntriesMsg","addBracket","value","name","createTbracket","token","reset","navToAssign","openEntriesModal","confirmEntriesModalRef","show","class","confirmDeleteEntries","resetAllEntries","console","log","hide","entriesMsg","declineDeleteEntries","openDeleteModal","bracket_id","initialState","tbracket_name","deleteModalRef","onHidden","reason","openReassignModal","confirmReassignModalRef","openResetModal","confirmResetModalRef","features","BsModalRef","deleteBracket","deleteTbracket","reassignBracket","reassignTbracket","resetBracket","resetTbracket","EventEmitter","filter","_filter","val","changed","emit","inputs","outputs","PlayerService","SorterService","AdminProfileFormModalComponent","faCaretDown","faCaretUp","faCheckSquare","faSquare","faEdit","_playerService","_modalService","_sorterService","_filteredRoster","_roster","openAdminProfileModal","_player","profile_user","bsModalRef","item","full_name","toLowerCase","indexOf","email","sort","prop","_property","_direction","GameService","convertTime12to24","convertTime24to12","game","_game","_gameService","Date","gameUpdateForm","_todayDate","toISOString","substring","spread","team1_score","team2_score","game_date","game_time","send_email","patchValue","tipoff_date_time","showMsg","updateGame","msg","updateGame_sendEmail","resetGame","getGameDetails","SendOrigModalComponent","SendGamesModalComponent","openSendOrigModal","emailTargetList","map","target","player_id","player","ids","o","index","includes","num_targets","sendOrigModalRef","openSendGamesModal","sendGamesModalRef","ctx_r11","tround_values","refreshGameListing","sendGamesEmail","round_id","emailGamesToOwners","onOptionsSelected","getGamesSpreadNoScore","gamesList","game_entry","team1","team2","tipoff_date","tipoff_time","sendOriginalTeamsEmail","emailOrigTeamsToOwners","gameRetrieveForm","game_id","retrieveGame","_currentGame","resetAllGames","replayAllGames","BsDropdownModule","TooltipModule","ModalModule","CollapseModule","TabsModule","AppBootstrapModule","forRoot","childRoutes","UserResolver","HomeComponent","ProfileComponent","LogoutComponent","BracketsComponent","IsAdminGuard","resolve","loggedInUser","runGuardsAndResolvers","url","externalUrl","canActivate","children","AppRoutingModule","provide","useValue","state","window","location","href","onSameUrlNavigation","AppComponent","localStorage","getItem","token_id","JSON","parse","beforeTourney","refreshToken","clear","login","BrowserModule","HttpClientModule","appStoreProviders","UiModule","RosterComponent","ProfileDetailsComponent","ProfileFormModalComponent","TeamDetailsComponent","StandingsComponent","StandingsNavComponent","BracketTabComponent","RosterTextboxComponent","PartialProfileFormModalComponent","AppModule","bootstrap","InjectionToken","configureStore","UserReducer","reducer","AppStore","createAppStore","useFactory","RegionService","bracketOwners","_bracketOwners","_regionService","_rnd_game_ids","Array","from","v","k","getRdIncr","_region_id","getRegionList","_regionList","x","getTeam1Result","getTeam2Result","getChampion","isChampion","_bracketGames","_champion","_winningTeamOwner","winner","TabsetComponent","loading","getNewGameWithMatchupDataList","region1Owners","Object","assign","region_id","region2Owners","region3Owners","region4Owners","ffourOwners","getGameList","region1Games","region2Games","region3Games","region4Games","ffourGames","getListWithPlayer","tbracketList","regionList","fragment","parseInt","setTimeout","staticTabs","tabs","active","isActive","navbarId","viewQuery","HttpClient","HttpHeaders","entryUrl","entry_bracketsUrl","entry_namesUrl","entry_standingsURL","entry_myteamsURL","http","getEntryDetailsListByPlayer","get","getEntryBracketListByPlayer","getEntryNameByTeamAndBracket","b_id","t_id","patch","stringify","getHttpOptions","getEntryStandings","getEntryDetailsListMyTeamsByPlayer","headers","factory","providedIn","gameUrl","new_game_matchupURL","getGameListByTeam","team_id","getGameListByRegion","isFinalFour","tround_id","ActivatedRouteSnapshot","RouterStateSnapshot","store","readState","next","currentUser","is_staff","getState","userUrl","getListOtherThan","pipe","users","user","getPlayer","deletePlayer","delete","updatePlayer","regionUrl","getRegionDetails","collection","property","direction","a","b","aVal","bVal","resolveProperty","isString","trim","toUpperCase","String","obj","split","reduce","prev","curr","undefined","self","tbracketUrl","playerid","post","getLoggedInUser","SET_CURRENT_USER","setCurrentUser","type","UserActions","action","httpOptions","updateData","err","errors","logout","token_expires","username","token_parts","token_decoded","atob","exp","user_id","snapshot","roster","dispatch","faPaypal","faVimeoSquare","faUsd","bsModalService","queryParams","_showEditButton","openModal","modalRef","openProfileModal","title","closeBtnName","adminProfileForm","compose","maxLength","minLength","first_name","last_name","num_entries","mult_entry_type","gm_updates","paid","submitForm","UntypedFormGroup","AbstractControl","profileForm","faRotate","_pageTitle","_loggedInUser","sorterService","_numRegistrants","_numBrackets","_numEntries","registrant","Math","floor","_numNeededEntries","hoveredIndex","time12h","time","modifier","hours","minutes","time24h","match","slice","join","bracket","_bracketId","_standingsList","standing_points","IUserData","RegionData","EntryMyTeamsData","_entryList","sendToBracket","FooterComponent","HeaderComponent","_bracketToShow","instruction","createUrlTree","isUserAdmin","LayoutComponent","ngContentSelectors","environment","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}