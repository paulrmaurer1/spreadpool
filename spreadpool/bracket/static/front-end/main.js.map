{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/admin/assign-brackets/assign-brackets.component.css","webpack:///./src/app/admin/assign-brackets/assign-brackets.component.html","webpack:///./src/app/admin/assign-brackets/assign-brackets.component.ts","webpack:///./src/app/admin/create-brackets/create-brackets.component.css","webpack:///./src/app/admin/create-brackets/create-brackets.component.html","webpack:///./src/app/admin/create-brackets/create-brackets.component.ts","webpack:///./src/app/admin/create-brackets/delete-bracket-modal.component.html","webpack:///./src/app/admin/create-brackets/delete-bracket-modal.component.ts","webpack:///./src/app/admin/create-brackets/reassign-bracket-modal.component.html","webpack:///./src/app/admin/create-brackets/reassign-bracket-modal.component.ts","webpack:///./src/app/admin/create-brackets/reset-bracket-modal.component.html","webpack:///./src/app/admin/create-brackets/reset-bracket-modal.component.ts","webpack:///./src/app/admin/game-detail/game-detail.component.css","webpack:///./src/app/admin/game-detail/game-detail.component.html","webpack:///./src/app/admin/game-detail/game-detail.component.ts","webpack:///./src/app/admin/send-emails/send-emails.component.css","webpack:///./src/app/admin/send-emails/send-emails.component.html","webpack:///./src/app/admin/send-emails/send-emails.component.ts","webpack:///./src/app/admin/send-emails/send-games-modal.component.html","webpack:///./src/app/admin/send-emails/send-games-modal.component.ts","webpack:///./src/app/admin/send-emails/send-orig-modal.component.html","webpack:///./src/app/admin/send-emails/send-orig-modal.component.ts","webpack:///./src/app/admin/update-games/update-games.component.css","webpack:///./src/app/admin/update-games/update-games.component.html","webpack:///./src/app/admin/update-games/update-games.component.ts","webpack:///./src/app/app-bootstrap.module.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.store.ts","webpack:///./src/app/bracket-tab/bracket-tab.component.css","webpack:///./src/app/bracket-tab/bracket-tab.component.html","webpack:///./src/app/bracket-tab/bracket-tab.component.ts","webpack:///./src/app/brackets/brackets.component.css","webpack:///./src/app/brackets/brackets.component.html","webpack:///./src/app/brackets/brackets.component.ts","webpack:///./src/app/core/entry.service.ts","webpack:///./src/app/core/game.service.ts","webpack:///./src/app/core/is-admin.guard.ts","webpack:///./src/app/core/matchup.service.ts","webpack:///./src/app/core/player.service.ts","webpack:///./src/app/core/region.service.ts","webpack:///./src/app/core/sorter.service.ts","webpack:///./src/app/core/tbracket.service.ts","webpack:///./src/app/core/user-resolver.ts","webpack:///./src/app/core/user.actions.ts","webpack:///./src/app/core/user.reducer.ts","webpack:///./src/app/core/user.service.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/logout/logout.component.css","webpack:///./src/app/logout/logout.component.html","webpack:///./src/app/logout/logout.component.ts","webpack:///./src/app/profile-details/profile-details.component.css","webpack:///./src/app/profile-details/profile-details.component.html","webpack:///./src/app/profile-details/profile-details.component.ts","webpack:///./src/app/profile-form-modal/profile-form-modal.component.css","webpack:///./src/app/profile-form-modal/profile-form-modal.component.html","webpack:///./src/app/profile-form-modal/profile-form-modal.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/roster-textbox/roster-textbox.component.css","webpack:///./src/app/roster-textbox/roster-textbox.component.ts","webpack:///./src/app/roster/roster.component.css","webpack:///./src/app/roster/roster.component.html","webpack:///./src/app/roster/roster.component.ts","webpack:///./src/app/standings-nav/standings-nav.component.css","webpack:///./src/app/standings-nav/standings-nav.component.html","webpack:///./src/app/standings-nav/standings-nav.component.ts","webpack:///./src/app/standings/standings.component.css","webpack:///./src/app/standings/standings.component.html","webpack:///./src/app/standings/standings.component.ts","webpack:///./src/app/team-details/team-details.component.css","webpack:///./src/app/team-details/team-details.component.html","webpack:///./src/app/team-details/team-details.component.ts","webpack:///./src/app/team-nextup/team-nextup.component.css","webpack:///./src/app/team-nextup/team-nextup.component.html","webpack:///./src/app/team-nextup/team-nextup.component.ts","webpack:///./src/app/ui/footer/footer.component.css","webpack:///./src/app/ui/footer/footer.component.html","webpack:///./src/app/ui/footer/footer.component.ts","webpack:///./src/app/ui/header/header.component.css","webpack:///./src/app/ui/header/header.component.html","webpack:///./src/app/ui/header/header.component.ts","webpack:///./src/app/ui/layout/layout.component.css","webpack:///./src/app/ui/layout/layout.component.html","webpack:///./src/app/ui/layout/layout.component.ts","webpack:///./src/app/ui/ui.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { RouterModule, ActivatedRoute, Router, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularFontAwesomeModule } from 'angular-font-awesome'\r\n\r\nimport { PickListModule } from 'primeng/picklist'; //Needed for Assign Entries page, assign-brackets.component\r\n\r\nimport { AssignBracketsComponent } from './assign-brackets/assign-brackets.component';\r\nimport { CreateBracketsComponent } from './create-brackets/create-brackets.component';\r\nimport { UpdateGamesComponent } from './update-games/update-games.component';\r\nimport { GameDetailComponent } from './game-detail/game-detail.component';\r\nimport { SendEmailsComponent } from './send-emails/send-emails.component';\r\n\r\n\r\nexport const routes: Routes = [\r\n  { path: '', redirectTo: 'c-brackets', pathMatch: 'full' },\r\n  { path: 'c-brackets', component: CreateBracketsComponent },\r\n  { path: 'a-brackets/:id', component: AssignBracketsComponent },\r\n  { path: 'u-games', component: UpdateGamesComponent },\r\n  { path: 's-emails', component: SendEmailsComponent },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n  \tAssignBracketsComponent,\r\n  \tCreateBracketsComponent,\r\n  \tUpdateGamesComponent,\r\n  \tGameDetailComponent,\r\n  \tSendEmailsComponent\r\n  ],\r\n  exports: [\r\n  \tAssignBracketsComponent,\r\n  \tCreateBracketsComponent,\r\n  \tUpdateGamesComponent,\r\n    SendEmailsComponent,\r\n    RouterModule\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PickListModule,\r\n    AngularFontAwesomeModule,\r\n    RouterModule\r\n  ]\r\n\r\n})\r\nexport class AdminModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Fzc2lnbi1icmFja2V0cy9hc3NpZ24tYnJhY2tldHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!--assign-brackets.component.html-->\\r\\n<br>\\r\\n<div class = \\\"container\\\">\\r\\n\\t<div class = \\\"row justify-content-start\\\">\\r\\n\\t\\t<div class = \\\"col align-self-center\\\">\\r\\n\\t\\t\\t<h6 *ngIf=\\\"_activeBracket\\\"><strong>Assign Entries to the \\r\\n\\t\\t\\t<select class = \\\"select-option\\\" #tbracketSelect (change)=\\\"onBracketSelected(tbracketSelect.value)\\\">\\r\\n\\t\\t\\t\\t<option class = \\\"option\\\" *ngFor = \\\"let tbracket of _tbracketList\\\" \\r\\n\\t\\t\\t\\t[selected] = \\\"tbracket.id == _activeBracket.id\\\" [value]=\\\"tbracket.id\\\">{{tbracket.name}}</option>\\r\\n\\t\\t\\t</select> Bracket</strong></h6>\\r\\n\\r\\n\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class = \\\"col\\\">\\r\\n\\t\\t\\t<button class=\\\"btn btn-secondary\\\" (click)=\\\"goBack()\\\">Go Back</button>\\r\\n\\t\\t\\t&nbsp;\\r\\n\\t\\t\\t<button class=\\\"btn btn-success\\\" (click)=\\\"saveAndGoBack()\\\">Save Assignments & Go Back</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n<br>\\r\\n<div *ngIf=\\\"_unassignedEntries && _assignedEntries && _activeBracket\\\">\\r\\n\\t<p-pickList [source] = \\\"_unassignedEntries\\\" [target] = \\\"_assignedEntries\\\" \\r\\n\\t(onMoveToTarget)=\\\"recalculate()\\\" (onMoveToSource)=\\\"recalculate()\\\"\\r\\n\\tsourceHeader=\\\"Unassigned Entries ({{ _unassignedEntries_len ? _unassignedEntries_len : '0' }})\\\" \\r\\n\\ttargetHeader=\\\"{{_activeBracket.name}} Bracket Entries ({{ _assignEntries_len ? _assignEntries_len : '0'}})\\\" \\r\\n\\t[responsive]=\\\"true\\\" filterBy=\\\"e_name\\\" dragdrop=\\\"true\\\" \\r\\n\\tsourceFilterPlaceholder=\\\"Search by entry name\\\" targetFilterPlaceholder=\\\"Search by entry name\\\" \\r\\n\\t[sourceStyle]=\\\"{'height':'500px'}\\\" [targetStyle]=\\\"{'height':'500px'}\\\">\\r\\n\\t\\t<ng-template let-entry pTemplate=\\\"item\\\">\\r\\n\\t\\t\\t<div class=\\\"ui-helper-clearfix\\\">\\r\\n\\t\\t\\t\\t{{ entry.e_name }}\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</ng-template>\\r\\n\\t</p-pickList>\\r\\n</div>\\r\\n<br>\"","import { Component, OnInit } from '@angular/core';\r\nimport { EntryNameData, TBracketData } from '../../shared/interfaces';\r\nimport { EntryService } from '../../core/entry.service';\r\nimport { TBracketService } from '../../core/tbracket.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-assign-brackets',\r\n  templateUrl: './assign-brackets.component.html',\r\n  styleUrls: ['./assign-brackets.component.css']\r\n})\r\nexport class AssignBracketsComponent implements OnInit {\r\n\r\n\t_unassignedEntries: EntryNameData[];\r\n\t_assignedEntries: EntryNameData[];\r\n\t_activeBracket: TBracketData;\r\n\tprivate id: number; //capture tbracket id url parameter\r\n\t_assignEntries_len: number;\r\n\t_unassignedEntries_len: number;\r\n\t_tbracketList: TBracketData[];\r\n\r\n\tconstructor(\r\n\t\tprivate _entryService: EntryService, \r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate _tbracketService: TBracketService,\r\n\t\tprivate router: Router) { }\r\n\r\n\tngOnInit() {\r\n\r\n\t\t// Find tbracket id from parameter of url and refresh data\r\n\t\tthis.route.params.subscribe((params) => {\r\n\t\t\tthis.id = params['id'];\r\n\t\t\tthis.refreshData(this.id);\r\n\t\t});\r\n\t\t\t\r\n\t\t// Update bracket list to build drop-down menu contents\r\n\t\tthis._tbracketService.getList().subscribe(data => {\r\n\t\t\tthis._tbracketList = data;\r\n\t\t});\r\n\t\t\r\n\t}\r\n\r\n\trefreshData(tbracket_id: number) {\r\n\t\t// Update arrays to show in picklists as well as activeBracket for proper page display\r\n\r\n\t\tthis._tbracketService.getTbracket(tbracket_id).subscribe((data) => {\r\n\t\t\tthis._activeBracket = data;\r\n\t\t});\r\n\r\n\t\tthis._entryService.getEntryListByBracket(tbracket_id).subscribe((data) => {\r\n\t\t\tthis._assignedEntries = data;\r\n\t\t\tthis._assignEntries_len = this._assignedEntries.length;\r\n\t\t\t// console.log(\"Entries that have bracket = \", this._activeBracket.name, \" assigned: \", this._assignedEntries);\r\n\t\t});\r\n\r\n\t\t// source array = all entries without a tbracket assigned (_unassignedEntries)\r\n\t\tthis._entryService.getEntryListbyNullBracket().subscribe((data) => {\r\n\t\t\tthis._unassignedEntries = data;\r\n\t\t\tthis._unassignedEntries_len = this._unassignedEntries.length;\r\n\t\t\t// console.log(\"Entries that don't have a bracket assigned: \", this._unassignedEntries);\r\n\t\t});\r\n\t}\r\n\r\n\tsaveAndGoBack() {\r\n\t\t//Update tbracket_id for all entries in target array isn't already assigned tbracket_id\r\n\t\tthis._assignedEntries.forEach((entry) => {\r\n\t\t\tif (entry.tbracket != this._activeBracket.id) {\r\n\t\t\t\tentry.tbracket = this._activeBracket.id;\r\n\t\t\t\t// console.log (\"Updated entry is: \", entry);\r\n\t\t\t\tthis._entryService.updateEntry(entry).subscribe((data) => {\r\n\t\t\t\t// console.log (\"Entry updated for...\", entry, data);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//Update tbracket_id for all entries in source array whose tbracket isn't null\r\n\t\tthis._unassignedEntries.forEach((entry) => {\r\n\t\t\tif (entry.tbracket != null) {\r\n\t\t\t\tentry.tbracket = null;\r\n\t\t\t\t// console.log (\"Updated entry is: \", entry);\r\n\t\t\t\tthis._entryService.updateEntry(entry).subscribe((data) => {\r\n\t\t\t\t// console.log (\"Entry updated for...\", entry, data);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.router.navigate(['/admin/c-brackets']);\t\t\r\n\r\n\t} //end saveAndGoBack()\r\n\r\n\tgoBack() {\r\n\t\t//Just go back to Admin->Create Brackets page without making changes\r\n\t\tthis.router.navigate(['/admin/c-brackets']);\t\r\n\t} //end goBack()\r\n\r\n\t// method to run each time an entry gets moved between lists, for updating title of each picklist\r\n\trecalculate() {\r\n\t\tthis._assignEntries_len = this._assignedEntries.length;\r\n\t\tthis._unassignedEntries_len = this._unassignedEntries.length;\r\n\t}\r\n\r\n\tonBracketSelected(tbracket_id: number) {\r\n\t\tthis.refreshData(tbracket_id);\r\n\t}\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NyZWF0ZS1icmFja2V0cy9jcmVhdGUtYnJhY2tldHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!--create-brackets.component.html-->\\r\\n<br>\\r\\n<h6><strong>Add Bracket</strong></h6>\\r\\n<div class=\\\"container\\\">\\r\\n\\t<div class = \\\"row\\\">\\r\\n\\t\\t<div class = \\\"col\\\">\\r\\n\\t\\t\\t<form [formGroup]=\\\"bracketAddForm\\\" (ngSubmit)=\\\"addBracket(bracketAddForm.value)\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"container\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- <label for=\\\"bracket_name\\\">Bracket</label> -->\\r\\n\\t\\t\\t\\t\\t\\t    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Type bracket name..\\\" \\r\\n\\t\\t\\t\\t\\t\\t    id=\\\"bracket_name\\\" [formControl] = \\\"bracket_name\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" id=\\\"submit\\\" class=\\\"btn btn-success\\\" \\r\\n\\t\\t\\t\\t\\t\\t\\t[disabled]=\\\"!bracketAddForm.valid\\\">Add Bracket</button>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</form>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class = \\\"col\\\">\\r\\n\\t\\t\\t<span *ngIf=\\\"showEntriesMsg\\\" class=\\\"text-success\\\">{{ entriesMsg }}</span>\\r\\n\\t\\t\\t<button class=\\\"btn btn-dark\\\" (click)=\\\"openEntriesModal(entries_template)\\\">Delete/Create All Entries</button>\\r\\n\\t\\t\\t&nbsp;\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<br>\\r\\n<div class = \\\"d-flex flex-row\\\">\\r\\n\\t<div class = \\\"p-2\\\">\\r\\n\\t\\t<h6><strong>Brackets</strong></h6>\\r\\n\\t</div>\\r\\n\\t<div class = \\\"p-2\\\">\\r\\n\\t\\t<a [routerLink]=\\\"\\\" (click)=\\\"resetList()\\\">refresh</a>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<table class=\\\"table table-sm\\\">\\r\\n\\t<thead>\\r\\n\\t\\t<tr>\\r\\n\\t\\t\\t<th scope=\\\"col\\\">#</th>\\r\\n\\t\\t\\t<th scope=\\\"col\\\">Name</th>\\r\\n\\t\\t\\t<th scope=\\\"col\\\" style=\\\"width: 10%\\\">Num Entries</th>\\r\\n\\t\\t\\t<th scope=\\\"col\\\" style=\\\"width: 10%\\\">Id</th>\\r\\n\\t\\t\\t<th scope=\\\"col\\\">Actions</th>\\r\\n\\t\\t</tr>\\r\\n\\t</thead>\\r\\n\\t<tbody>\\r\\n\\t\\t<tr *ngFor = \\\"let tbracket of _tbracketList; let i = index\\\">\\r\\n\\t\\t\\t<th scope=\\\"row\\\" class=\\\"align-middle\\\">{{i + 1}}</th>\\r\\n\\t\\t\\t<td class=\\\"align-middle\\\">{{ tbracket.name }}</td>\\r\\n\\t\\t\\t<td class=\\\"align-middle\\\">{{ tbracket.entry_count}}</td>\\r\\n\\t\\t\\t<td class=\\\"align-middle\\\">{{ tbracket.id }}</td>\\r\\n\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t<button class=\\\"btn btn-danger custom\\\" (click)=\\\"openDeleteModal(tbracket.id, tbracket.name)\\\">Delete</button>\\r\\n\\t\\t\\t\\t&nbsp;\\r\\n\\t\\t\\t\\t<button class=\\\"btn btn-warning\\\" (click)=\\\"openReassignModal(tbracket.id, tbracket.name)\\\">(Re)Assign</button>\\r\\n\\t\\t\\t\\t&nbsp;\\r\\n\\t\\t\\t\\t<button class=\\\"btn btn-info custom\\\" (click)=\\\"openResetModal(tbracket.id, tbracket.name)\\\">Reset</button>\\r\\n\\t\\t\\t\\t&nbsp;\\r\\n\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" (click)=\\\"navToAssign(tbracket.id)\\\">Assign Entries</button>\\r\\n\\t\\t\\t</td>\\r\\n\\t\\t</tr>\\r\\n\\t</tbody>\\r\\n</table>\\r\\n\\r\\n<!-- Template modal that gets displayed when user clicks on Delete/Create All Entries -->\\r\\n<ng-template #entries_template>\\r\\n  <div class=\\\"modal-body text-center\\\">\\r\\n    <h6><small>You are about to delete all existing Bracket Entry assignments and create new Entries based on currently registered Users. This will unassign all Entries from Brackets. Would you like to proceed?</small></h6>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"confirmDeleteEntries()\\\" >Yes, Proceed</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"declineDeleteEntries()\\\" >No, Go Back</button>\\r\\n  </div>\\r\\n</ng-template>\"","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { TBracketService } from '../../core/tbracket.service';\r\nimport { TBracketData, EntryData } from '../../shared/interfaces';\r\nimport { UserService } from '../../core/user.service';\r\nimport { EntryService } from '../../core/entry.service';\r\nimport { FormBuilder, FormGroup, AbstractControl, Validators } from '@angular/forms';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DeleteModalComponent } from './delete-bracket-modal.component';\r\nimport { ReassignModalComponent } from './reassign-bracket-modal.component';\r\nimport { ResetModalComponent } from './reset-bracket-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-create-brackets',\r\n  templateUrl: './create-brackets.component.html',\r\n  styleUrls: ['./create-brackets.component.css']\r\n})\r\n\r\nexport class CreateBracketsComponent implements OnInit {\r\n\r\n\t_tbracketList: TBracketData[];\r\n\tbracketAddForm: FormGroup;\r\n\tbracket_name : AbstractControl;\r\n\tnew_bracket : TBracketData;\r\n\tdeleteModalRef: BsModalRef;\r\n\tconfirmEntriesModalRef: BsModalRef;\r\n\tshowEntriesMsg: boolean;\r\n\tentriesMsg: string = '';\r\n\tconfirmReassignModalRef: BsModalRef;\r\n\tconfirmResetModalRef: BsModalRef;\r\n\r\n\tconstructor(\r\n\t\tprivate _tbracketService: TBracketService,\r\n\t\tprivate _userService: UserService,\r\n\t\tprivate fb: FormBuilder,\r\n\t\tprivate modalService: BsModalService,\r\n\t\tprivate _entryService: EntryService,\r\n\t\tprivate router: Router,\r\n\t\t) {\r\n\r\n\t\tthis.bracketAddForm = fb.group({\r\n\t\t\t'bracket_name' : ['', Validators.required],\r\n\t\t});\r\n\r\n\t\tthis.bracket_name = this.bracketAddForm.controls['bracket_name']; // allows for other properties, e.g. error values\r\n\r\n\t }\r\n\r\n\tngOnInit() {\r\n\t\tthis.new_bracket = {'id': null, 'name': '', 'entry_count': null};  //initialize new_bracket\r\n\t\tthis.resetList();\r\n\t}\r\n\r\n\tngOnChanges() {\r\n\t\tthis.resetList();\r\n\t\tthis.showEntriesMsg = false;\r\n\t}\r\n\r\n\taddBracket(value: string) {\r\n\t\tthis.new_bracket.name = this.bracket_name.value;\r\n\t\t// console.log (\"New Bracket name is: \", this.new_bracket);\r\n\t\t\r\n\t\tthis._tbracketService.createTbracket(this.new_bracket, this._userService.token).subscribe((data) => {\r\n\t\t\t// console.log(\"Tbracket added:\", value);\r\n\t\t\tthis.bracketAddForm.reset(); // clear out fields after form submit\r\n\t\t\tthis.resetList();\r\n\t\t});\r\n\t\t\r\n\t} //end addBracket()\r\n\r\n\tresetList() {\r\n\t\t//refresh Tbracket list\r\n\t\tthis._tbracketService.getList().subscribe(data => {\r\n\t\t\tthis._tbracketList = data;\r\n\t\t})\r\n\t\t// console.log(\"Tbracket List has been reset\")\r\n\t} // end resetList()\r\n\r\n\t// function to invoke when click on 'Assign Entries' so navigates properly\r\n\tnavToAssign(tbracket_id: number) {\r\n\t\tthis.router.navigate(['/admin/a-brackets', tbracket_id]);\r\n\t} //end navToAssign\r\n\r\n\t\r\n\t// function to open confirmEntries template modal followed by button functions\r\n\topenEntriesModal(template: TemplateRef<any>) {\r\n\t\tthis.confirmEntriesModalRef = this.modalService.show(template, {class: 'modal-lg'})\r\n\t}\r\n\tconfirmDeleteEntries(): void {\r\n\t\tthis._entryService.resetAllEntries().subscribe((data) => {\r\n\t\t\tconsole.log(\"All Entries have been deleted, then re-created based on User data!\");\r\n\t\t\tthis.confirmEntriesModalRef.hide();\r\n\t\t\tthis.entriesMsg = \"All Entries have been deleted & re-created!\";\r\n\t\t\tthis.showEntriesMsg = true;\r\n\t\t\tthis.resetList();\r\n\t\t});\r\n\t}\r\n\tdeclineDeleteEntries(): void {\r\n\t\tthis.confirmEntriesModalRef.hide();\r\n\t}\r\n\r\n\t// function to open delete-bracket-modal.component.ts component modal\r\n\topenDeleteModal(bracket_id: number, bracket_name: string) {\r\n\t\tconst initialState = {\r\n\t\t\ttbracket_id: bracket_id,\r\n\t\t\ttbracket_name: bracket_name\r\n\t\t};\r\n\t\tthis.deleteModalRef = this.modalService.show(DeleteModalComponent, {initialState});\r\n\r\n\t\tthis.modalService.onHidden.subscribe((reason: string) => {\r\n\t    \t// Upon modal being closed run these actions\r\n\t        this.resetList();\r\n\t    })\r\n\r\n\t} // end openDeleteModeal()\r\n\r\n\r\n\t// code for Bracket -> Reassign confirmation popup component modal\r\n\topenReassignModal(bracket_id: number, bracket_name: string) {\r\n\t\tconst initialState = {\r\n\t\t\ttbracket_id: bracket_id,\r\n\t\t\ttbracket_name: bracket_name\r\n\t\t};\r\n\t\tthis.confirmReassignModalRef = this.modalService.show(ReassignModalComponent, {initialState});\r\n\t\r\n\t\tthis.modalService.onHidden.subscribe((reason: string) => {\r\n\t    \t// Upon modal being closed run these actions\r\n\t        this.resetList();\r\n\t    })\r\n\r\n\t} // end openReassignModal()\r\n\r\n\r\n\t// code for Bracket -> Reset confirmation popup component modal\r\n\topenResetModal(bracket_id: number, bracket_name: string) {\r\n\t\tconst initialState = {\r\n\t\t\ttbracket_id: bracket_id,\r\n\t\t\ttbracket_name: bracket_name\r\n\t\t};\r\n\t\tthis.confirmResetModalRef = this.modalService.show(ResetModalComponent, {initialState});\r\n\t\r\n\t\tthis.modalService.onHidden.subscribe((reason: string) => {\r\n\t    \t// Upon modal being closed run these actions\r\n\t        this.resetList();\r\n\t    })\r\n\r\n\t} // end openReassignModal()\r\n\r\n} // export class CreateBracketsComponent","module.exports = \"\\r\\n<div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title pull-left\\\">Confirm Bracket Deletion</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"deleteModalRef.hide()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <h6>Are you sure you want to delete the <strong>{{ tbracket_name }}</strong> bracket?</h6>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteModalRef.hide(); deleteBracket(tbracket_id)\\\">Delete</button>\\r\\n</div>\"","import { Component, OnInit, } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { TBracketService } from '../../core/tbracket.service';\r\nimport { UserService } from '../../core/user.service';\r\n\r\n\r\n@Component({\r\n  selector: 'modal-content',\r\n  templateUrl: './delete-bracket-modal.component.html'\r\n})\r\n\r\nexport class DeleteModalComponent implements OnInit {\r\n  tbracket_id: number;\r\n  tbracket_name: string;\r\n \r\n  constructor(\r\n\tpublic deleteModalRef: BsModalRef,\r\n\tprivate _tbracketService: TBracketService,\r\n\tprivate _userService: UserService\r\n\t) {}\r\n \r\n\tngOnInit() {\r\n\t}\r\n\r\n\tdeleteBracket(bracket_id: number) {\r\n\t\t// console.log(\"deleteBracket method invoked for Tbracket id:\", bracket_id);\r\n\t\tthis._tbracketService.deleteTbracket(bracket_id, this._userService.token).subscribe((data) => {\r\n\t\t\tconsole.log(\"delete Tbracket successful\");\r\n\t\t});\r\n\t}\r\n}","module.exports = \"\\r\\n<div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title pull-left\\\">Confirm Bracket Reassignment</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"confirmReassignModalRef.hide()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <h6>Are you sure you want to (Re)Assign the <strong>{{ tbracket_name }}</strong> bracket? This will randomly assign\\r\\n  new original & active teams to every entry, reset Round 1 matchups and clear out Round 2-6 matchups.</h6>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"confirmReassignModalRef.hide(); reassignBracket(tbracket_id)\\\">(Re)Assign</button>\\r\\n</div>\"","import { Component, OnInit, } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { TBracketService } from '../../core/tbracket.service';\r\nimport { UserService } from '../../core/user.service';\r\n\r\n\r\n@Component({\r\n  selector: 'modal-content',\r\n  templateUrl: './reassign-bracket-modal.component.html'\r\n})\r\n\r\nexport class ReassignModalComponent implements OnInit {\r\n  tbracket_id: number;\r\n  tbracket_name: string;\r\n \r\n  constructor(\r\n\tpublic confirmReassignModalRef: BsModalRef,\r\n\tprivate _tbracketService: TBracketService,\r\n\tprivate _userService: UserService\r\n\t) {}\r\n \r\n\tngOnInit() {\r\n\t}\r\n\r\n\treassignBracket(bracket_id: number) {\r\n\t\t// console.log(\"Tbracket id for re-assignment is\", bracket_name);\r\n\t\tthis._tbracketService.reassignTbracket(bracket_id, this._userService.token).subscribe((data) => {\r\n\t\t\tconsole.log(\"Tbracket id:\", bracket_id, \" entries re-assigned!\");\r\n\t\t});\r\n\t}\r\n}","module.exports = \"\\r\\n<div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title pull-left\\\">Confirm Bracket Reset</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"confirmResetModalRef.hide()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <h6>Are you sure you want to Reset the <strong>{{ tbracket_name }}</strong> bracket? This will set all active teams = original teams, reset all Round 1 matchups, and clear out Round 2-6 matchups for this bracket.</h6>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"confirmResetModalRef.hide(); resetBracket(tbracket_id, tbracket_name)\\\">Reset</button>\\r\\n</div>\"","import { Component, OnInit, } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { TBracketService } from '../../core/tbracket.service';\r\n\r\n\r\n@Component({\r\n  selector: 'modal-content',\r\n  templateUrl: './reset-bracket-modal.component.html'\r\n})\r\n\r\nexport class ResetModalComponent implements OnInit {\r\n  tbracket_id: number;\r\n  tbracket_name: string;\r\n \r\n  constructor(\r\n\tpublic confirmResetModalRef: BsModalRef,\r\n\tprivate _tbracketService: TBracketService,\r\n\t) {}\r\n \r\n\tngOnInit() {\r\n\t}\r\n\r\n\tresetBracket(bracket_id: number, bracket_name: string) {\r\n\t\t\tthis._tbracketService.resetTbracket(bracket_id).subscribe((data) => {\r\n\t\t\t\tconsole.log(bracket_name, \" Tbracket has been reset!\");\r\n\t\t\t});\r\n\t}\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2dhbWUtZGV0YWlsL2dhbWUtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!--game-detail.component.html-->\\r\\n<form [formGroup]=\\\"gameUpdateForm\\\" (ngSubmit)=\\\"updateGame()\\\">\\r\\n\\t<div class=\\\"container\\\">\\r\\n\\t\\t<span *ngIf = \\\"showMsg\\\" class=\\\"text-success\\\">{{msg}}</span>\\r\\n\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t<div class=\\\"col non-form-element\\\"><strong>Game id: </strong>{{ _game.id }}</div>\\r\\n\\t\\t\\t<div class=\\\"col non-form-element\\\"><strong>Region: </strong>{{ _game.region }}</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t<div class=\\\"form-row align-items-center\\\">\\r\\n\\t\\t\\t<div class=\\\"col non-form-element\\\"><strong>Team 1: </strong>{{ _game.team1 }}</div>\\r\\n\\t\\t\\t<div class=\\\"form-group col\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"team1_score\\\">Team 1 Score:</label>\\r\\n\\t\\t\\t    <input type=\\\"number\\\" class=\\\"form-control\\\"\\r\\n\\t\\t\\t    id=\\\"team1_score\\\" [formControl] = \\\"team1_score\\\">\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"form-group col\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"spread\\\">Game Spread:</label>\\r\\n\\t\\t\\t    <input type=\\\"number\\\" class=\\\"form-control\\\"\\r\\n\\t\\t\\t    id=\\\"spread\\\" [formControl] = \\\"spread\\\">\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"form-row align-items-center\\\">\\r\\n\\t\\t\\t<div class=\\\"col non-form-element\\\"><strong>Team 2: </strong>{{ _game.team2 }}</div>\\r\\n\\t\\t\\t<div class=\\\"form-group col\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"team2_score\\\">Team 2 Score:</label>\\r\\n\\t\\t\\t    <input type=\\\"number\\\" class=\\\"form-control\\\"\\r\\n\\t\\t\\t    id=\\\"team2_score\\\" [formControl] = \\\"team2_score\\\">\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"form-group col\\\"></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t<button type=\\\"submit\\\" id=\\\"submit\\\" class=\\\"btn btn-success\\\">Update Game</button>\\r\\n\\t\\t\\t&nbsp;\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</form>\\r\\n<br>\\r\\n<br>\\r\\n<br>\\r\\n<div class = \\\"container\\\">\\r\\n\\t<div class=\\\"row justify-content-start\\\">\\r\\n\\t\\t<div class = \\\"col\\\">\\r\\n\\t\\t\\t<button class=\\\"btn btn-info\\\" (click)=\\\"resetGame()\\\">Reset Game</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n<br>\"","import { Component, OnInit, Input, OnChanges } from '@angular/core';\r\nimport { GameService } from '../../core/game.service';\r\nimport { GameData } from '../../shared/interfaces';\r\nimport { FormBuilder, FormGroup, AbstractControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-game-detail',\r\n  templateUrl: './game-detail.component.html',\r\n  styleUrls: ['./game-detail.component.css']\r\n})\r\nexport class GameDetailComponent implements OnInit {\r\n\r\n\t// Update Game form variables\r\n\tgameUpdateForm: FormGroup;\r\n\tspread : AbstractControl;\r\n\tteam1_score : AbstractControl;\r\n\tteam2_score : AbstractControl;\r\n\t_game: GameData;\r\n\tshowMsg: boolean;\r\n\tmsg: string = '';\r\n\t\r\n\t@Input() get game(): GameData {\r\n\t\treturn this._game;\r\n\t}\r\n\r\n\tset game(value: GameData) {\r\n\t\tif (value) {\r\n\t\t\tthis._game = value;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(\r\n\t\tprivate _gameService: GameService,\r\n\t\tprivate fb: FormBuilder,\r\n\t\tprivate router: Router\r\n\t\t) { \r\n\t\t// Update Game form setup\r\n\t\tthis.gameUpdateForm = fb.group({\r\n\t\t\t'spread' : ['', Validators.required],\r\n\t\t\t'team1_score' : ['', Validators.required],\r\n\t\t\t'team2_score' : ['', Validators.required],\r\n\t\t});\r\n\t\tthis.spread = this.gameUpdateForm.controls['spread'];\r\n\t\tthis.team1_score = this.gameUpdateForm.controls['team1_score'];\r\n\t\tthis.team2_score = this.gameUpdateForm.controls['team2_score'];\r\n\t\t}\r\n\r\n\tngOnInit() {\r\n\t\t\r\n\t}\r\n\r\n\tngOnChanges() {\r\n\t\t// console.log(\"game-detail component received _game update..\", this._game);\r\n\t\tthis.gameUpdateForm.patchValue(this._game);\r\n\t\tthis.showMsg = false;\r\n\t}\r\n\r\n\tupdateGame() {\r\n\t\tthis._game.team1_score = this.team1_score.value;\r\n\t\tthis._game.spread = this.spread.value;\r\n\t\tthis._game.team2_score = this.team2_score.value;\r\n\t\t\r\n\t\tthis._gameService.updateGame(this._game).subscribe((data) => {\r\n\t\t\t// console.log(\"Game updated with:\", this._game);\r\n\t\t\tthis.msg = \"Game #: \" + this._game.id + \" has been updated!\";\r\n\t\t\tthis.showMsg = true;\r\n\t\t});\r\n\t} //end updateGame()\r\n\r\n\tresetGame() {\r\n\t\t// console.log(\"Game id for reset is\", this._game.id);\r\n\t\tthis._gameService.resetGame(this._game.id).subscribe((data) => {\r\n\t\t\t// console.log(\"Game #\", this._game.id, \"has been reset!\");\r\n\r\n\t\t\t// navigate back to Retrieve Game page *** not working ***\r\n\t\t\t// this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\r\n\t\t\t// \tthis.router.navigate(['/admin/u-games']));\r\n\r\n\t\t\t// retrieve newly updated game and update form\r\n\t\t\tthis._gameService.getGameDetails(this._game.id).subscribe((data) => {\r\n\t\t\t\tthis._game = data;\r\n\t\t\t\tthis.gameUpdateForm.reset();\r\n\t\t\t\tthis.gameUpdateForm.patchValue(this._game);\r\n\t\t\t\tthis.msg = \"Game #: \" + this._game.id + \" has been reset!\"\r\n\t\t\t\tthis.showMsg = true\r\n\t\t\t})\r\n\t\t});\r\n\t} //end resetGame()\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NlbmQtZW1haWxzL3NlbmQtZW1haWxzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!--send-emails.component.html-->\\r\\n\\r\\n<br>\\r\\n<h6><strong>Email Actions</strong></h6>\\r\\n<br>\\r\\n<table class=\\\"table table-sm\\\">\\r\\n\\t<thead>\\r\\n\\t\\t<tr>\\r\\n\\t\\t\\t<th scope=\\\"col\\\">#</th>\\r\\n\\t\\t\\t<th scope=\\\"col\\\">Name</th>\\r\\n\\t\\t\\t<th scope=\\\"col\\\" style=\\\"width: 10%\\\">Num Entries</th>\\r\\n\\t\\t\\t<th scope=\\\"col\\\" style=\\\"width: 10%\\\">Id</th>\\r\\n\\t\\t\\t<th scope=\\\"col\\\">Email Actions</th>\\r\\n\\t\\t</tr>\\r\\n\\t</thead>\\r\\n\\t<tbody>\\r\\n\\t\\t<tr *ngFor = \\\"let tbracket of _tbracketList; let i = index\\\">\\r\\n\\t\\t\\t<th scope=\\\"row\\\">{{i + 1}}</th>\\r\\n\\t\\t\\t<td>{{ tbracket.name }}</td>\\r\\n\\t\\t\\t<td>{{ tbracket.entry_count}}</td>\\r\\n\\t\\t\\t<td>{{ tbracket.id }}</td>\\r\\n\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" (click)=\\\"openSendOrigModal(tbracket.id, tbracket.name)\\\">Send Orig Teams</button>\\r\\n\\t\\t\\t\\t&nbsp;\\r\\n\\t\\t\\t\\t<button class=\\\"btn btn-outline-success\\\" (click)=\\\"openSendGamesModal(tbracket.id, tbracket.name)\\\">Send Games</button>\\r\\n\\t\\t\\t\\t&nbsp;\\r\\n\\t\\t\\t</td>\\r\\n\\t\\t</tr>\\r\\n\\t</tbody>\\r\\n</table>\\r\\n\"","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { TBracketService } from '../../core/tbracket.service';\r\nimport { EntryService } from '../../core/entry.service';\r\nimport { GameService } from '../../core/game.service';\r\n\r\nimport { TBracketData, EntryData } from '../../shared/interfaces';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\nimport { SendOrigModalComponent } from './send-orig-modal.component';\r\nimport { SendGamesModalComponent } from './send-games-modal.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-send-emails',\r\n  templateUrl: './send-emails.component.html',\r\n  styleUrls: ['./send-emails.component.css']\r\n})\r\nexport class SendEmailsComponent implements OnInit {\r\n\r\n\t_tbracketList: TBracketData[];\r\n\tsendOrigModalRef: BsModalRef;\r\n\tsendGamesModalRef: BsModalRef;\r\n\temailTargetList: string[];\r\n\r\n\tconstructor(\r\n\t\tprivate _tbracketService: TBracketService,\r\n\t\tprivate _entryService: EntryService,\r\n\t\tprivate _gameService: GameService,\r\n\t\tprivate modalService: BsModalService,\r\n\t) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.resetList();\r\n\t}\r\n\r\n\tresetList() {\r\n\t\t//refresh Tbracket list\r\n\t\tthis._tbracketService.getList().subscribe(data => {\r\n\t\t\tthis._tbracketList = data;\r\n\t\t})\r\n\t\t// console.log(\"Tbracket List has been reset\")\r\n\t} // end resetList()\r\n\r\n\topenSendOrigModal(bracket_id: number, bracket_name: string) {\r\n\t\tthis._entryService.getEntryListByBracket(bracket_id).subscribe(data => {\r\n\t\t\tconst emailTargetList = data.map(target => {\r\n\t\t\t\t// Create an array of player names to display in modal\r\n\t\t\t\treturn target.player;\r\n\t\t\t});\r\n\t\t\t// Create a unique list of targets users, eliminating duplicates of owner(s) having 2+ entries\r\n\t\t\tthis.emailTargetList = emailTargetList.filter(function(item, pos) {\r\n\t\t\t    return emailTargetList.indexOf(item) == pos;\r\n\t\t\t})\r\n\t\t\t// console.log(\"List of players = \", this.emailTargetList);\r\n\t\t\tconst initialState = {\r\n\t\t\t\ttbracket_id: bracket_id,\r\n\t\t\t\ttbracket_name: bracket_name,\r\n\t\t\t\temailTargetList: this.emailTargetList,\r\n\t\t\t\tnum_targets: this.emailTargetList.length\r\n\t\t\t};\r\n\t\t\tthis.sendOrigModalRef = this.modalService.show(SendOrigModalComponent, {initialState});\r\n\t\t})\r\n\t\t\r\n\t\tthis.modalService.onHidden.subscribe((reason: string) => {\r\n\t    \t// Upon modal being closed run these actions\r\n\t        this.resetList();\r\n\t    })\r\n\t\t// console.log(\"Tbracket \", bracket_name, \" with id: \", bracket_id, \"will invoke send_emails API\");\r\n\t}\r\n\r\n\topenSendGamesModal(bracket_id: number, bracket_name: string){\r\n\t\t\tconst initialState = {\r\n\t\t\t\ttbracket_id: bracket_id,\r\n\t\t\t\ttbracket_name: bracket_name,\r\n\t\t\t};\r\n\t\t\tthis.sendGamesModalRef = this.modalService.show(SendGamesModalComponent, {initialState});\r\n\t\t// })\r\n\r\n\t\tthis.modalService.onHidden.subscribe((reason: string) => {\r\n\t    \t// Upon modal being closed run these actions\r\n\t        this.resetList();\r\n\t    })\r\n\r\n\t}\r\n\r\n\r\n}","module.exports = \"<!--send-games-modal.component.html-->\\r\\n\\r\\n<div *ngIf = \\\"gamesList\\\">\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title pull-left\\\">Confirm Send Games Emails</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"sendGamesModalRef.hide()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t<h6>Are you sure you want to send emails to players of <strong>{{ tbracket_name }}</strong></h6>\\r\\n\\t\\t<h6>bracket involved with games in Round #:\\t\\r\\n\\t\\t<select class = \\\"select-option\\\" #troundSelect (change)=\\\"onOptionsSelected(troundSelect.value)\\\">\\r\\n\\t\\t\\t<option class = \\\"option\\\" *ngFor = \\\"let value of tround_values\\\" [value]=\\\"value\\\">{{value}}</option>\\r\\n\\t\\t</select></h6>\\r\\n\\t\\t<br>\\r\\n\\t\\t<ol>\\r\\n\\t\\t\\t<li *ngFor = \\\"let game of gamesList; let i = index\\\">{{ game }}</li>\\r\\n\\t\\t</ol>\\r\\n\\t\\t<p *ngIf = \\\"gamesList.length==0\\\" class=\\\"text-danger\\\">There aren't any new games with spreads posted that Round!</p>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-outline-success\\\" (click)=\\\"sendGamesModalRef.hide(); \\r\\n\\t\\tsendGamesEmail(tbracket_id, troundSelect.value)\\\">Send emails</button>\\r\\n\\t</div>\\r\\n</div>\"","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { GameService } from '../../core/game.service';\r\n\r\nimport { TBracketData, EntryData } from '../../shared/interfaces';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n  selector: 'modal-content',\r\n  templateUrl: './send-games-modal.component.html'\r\n})\r\n \r\nexport class SendGamesModalComponent implements OnInit {\r\n\ttbracket_id: number;\r\n\ttbracket_name: string;\r\n\ttround_values: number[];\r\n\tgamesList: string[];\r\n \r\n\tconstructor(\r\n\t\tpublic sendGamesModalRef: BsModalRef,\r\n\t\tprivate _gameService: GameService,\r\n\t) {}\r\n\r\n\tngOnInit() {\r\n\t\tthis.tround_values = [1, 2, 3, 4, 5, 6]; // Tournament rounds possible from which to select games\r\n\t\tthis.refreshGameListing(this.tround_values[0]); // Generate games listing based on Round 1 as default\r\n\t}\r\n\r\n\tsendGamesEmail(bracket_id: number, round_id: number) {\r\n\t\t// console.log(\"Tbracket with id: \", bracket_id, \"for tround\", round_id, \"will invoke emailGamesToOwners API\");\r\n\t\t\r\n\t\tthis._gameService.emailGamesToOwners(bracket_id, round_id).subscribe((data) => {\r\n\t\t\tconsole.log(\"Tbracket with id: \", data['tbracketid'] ,\" for Round\", round_id, \"owners have had today's games sent!\");\r\n\t\t});\r\n\t}\r\n\r\n\tonOptionsSelected(value:number){\r\n\t     // console.log(\"the selected value is \" + value);\r\n\t     this.refreshGameListing(value);\r\n\r\n     }\r\n\r\n    refreshGameListing(value: number){\r\n\t     this._gameService.getGamesSpreadNoScore(value).subscribe(data => {\r\n\t\t\tthis.gamesList = data.map(target => {\r\n\t\t\t\t// Build an array of games to display in modal\r\n\t\t\t\tif (target.spread > 0) {\r\n\t\t\t\t\treturn ' '+ target.team1 + ' [-' + target.spread + '.5] vs. ' + target.team2;\r\n\t\t\t\t}\r\n\t\t\t\telse if (target.spread == 0) {\r\n\t\t\t\t\treturn ' '+ target.team1 + ' [PICK EM] vs. ' + target.team2;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn ' '+ target.team1 + ' vs. ' + target.team2 + ' [-' + -target.spread + '.5]';\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n    }\r\n}","module.exports = \"<!--send-orig-modal.component.html-->\\r\\n\\r\\n<div class=\\\"modal-header\\\">\\r\\n\\t<h4 class=\\\"modal-title pull-left\\\">Confirm Send Original Teams Email</h4>\\r\\n\\t<button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"sendOrigModalRef.hide()\\\">\\r\\n\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t</button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n\\t<h6>Are you sure you want to send emails to these {{num_targets}} players of <strong>{{ tbracket_name }}</strong> bracket?</h6>\\r\\n\\t<ol>\\r\\n\\t\\t<li *ngFor = \\\"let target of emailTargetList; let i = index\\\">{{ target }}</li>\\r\\n\\t</ol>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"sendOrigModalRef.hide(); \\r\\n\\tsendOriginalTeamsEmail(tbracket_id)\\\">Send emails</button>\\r\\n</div>\"","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { EntryService } from '../../core/entry.service';\r\n\r\nimport { EntryData } from '../../shared/interfaces';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n  selector: 'modal-content',\r\n  templateUrl: './send-orig-modal.component.html'\r\n})\r\n \r\nexport class SendOrigModalComponent implements OnInit {\r\n  tbracket_id: number;\r\n  tbracket_name: string;\r\n  emailTargetList: string[];\r\n  num_targets: number;\r\n \r\n  constructor(\r\n\tpublic sendOrigModalRef: BsModalRef,\r\n\tprivate _entryService: EntryService,\r\n\t) {}\r\n \r\n\tngOnInit() {\r\n\t}\r\n\r\n\tsendOriginalTeamsEmail(bracket_id: number) {\r\n\t\t// console.log(\"Tbracket with id: \", bracket_id, \"will invoke send_emails API\");\r\n\t\t\r\n\t\tthis._entryService.emailOrigTeamsToOwners(bracket_id).subscribe((data) => {\r\n\t\t\tconsole.log(\"Tbracket with id: \", data['tbracketid'] ,\" have had emails sent!\");\r\n\t\t});\r\n\t}\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3VwZGF0ZS1nYW1lcy91cGRhdGUtZ2FtZXMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!--update-gamess.component.html-->\\r\\n<br>\\r\\n<h5><strong>Retrieve Game</strong></h5>\\r\\n<div class=\\\"container\\\">\\r\\n\\t<div class = \\\"row\\\">\\r\\n\\t\\t<div class = \\\"col\\\">\\r\\n\\t\\t\\t<form [formGroup]=\\\"gameRetrieveForm\\\" (ngSubmit)=\\\"retrieveGame()\\\">\\r\\n\\t\\t\\t\\t<!-- <div class=\\\"container\\\"> -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- <label for=\\\"bracket_name\\\">Bracket</label> -->\\r\\n\\t\\t\\t\\t\\t\\t    <input type=\\\"number\\\" min = \\\"1\\\" max = \\\"63\\\" class=\\\"form-control\\\" placeholder=\\\"Enter game id to Update..\\\" \\r\\n\\t\\t\\t\\t\\t\\t    id=\\\"game_id\\\" [formControl] = \\\"game_id\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" id=\\\"submit\\\" class=\\\"btn btn-success\\\" \\r\\n\\t\\t\\t\\t\\t\\t\\t[disabled]=\\\"!gameRetrieveForm.valid\\\">Retrieve Game</button>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!-- </div> -->\\r\\n\\t\\t\\t</form>\\r\\n\\t\\t</div>\\r\\n\\t</div> <!--row-->\\r\\n</div> <!--container-->\\r\\n<br>\\r\\n\\r\\n<h5><strong>Update Game</strong></h5>\\r\\n<app-game-detail *ngIf=\\\"_currentGame\\\" [game]=\\\"_currentGame\\\"></app-game-detail>\\r\\n<br>\\r\\n<h5><strong>Testing Features</strong></h5>\\r\\n<div class = \\\"col\\\">\\r\\n\\t<button class=\\\"btn btn-dark\\\" (click)=\\\"replayAllGames()\\\">Replay All Games</button>\\r\\n\\t&nbsp;\\r\\n\\t<button class=\\\"btn btn-warning\\\" (click)=\\\"resetAllGames()\\\">Reset All Games (Testing Only)</button>\\r\\n</div>\\r\\n<br>\"","import { Component, OnInit } from '@angular/core';\r\nimport { GameService } from '../../core/game.service';\r\nimport { GameData } from '../../shared/interfaces';\r\nimport { FormBuilder, FormGroup, AbstractControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-update-games',\r\n  templateUrl: './update-games.component.html',\r\n  styleUrls: ['./update-games.component.css']\r\n})\r\nexport class UpdateGamesComponent implements OnInit {\r\n\r\n\t// Retrieve Game form variables\r\n\tgameRetrieveForm: FormGroup;\r\n\tgame_id : AbstractControl;\r\n\t_currentGame : GameData;\r\n\t\r\n\r\n\tconstructor(\r\n\t\tprivate _gameService: GameService,\r\n\t\tprivate fb: FormBuilder,\r\n\t\t) {\r\n\t\t// Retrieve Game form setup\r\n\t\tthis.gameRetrieveForm = fb.group({\r\n\t\t\t'game_id' : ['', Validators.required],\r\n\t\t});\r\n\t\tthis.game_id = this.gameRetrieveForm.controls['game_id']; // allows for other properties, e.g. error values\r\n\r\n\t\t}\r\n\r\n\tngOnInit() {\r\n\t}\r\n\r\n\tretrieveGame() {\r\n\t\tthis._gameService.getGameDetails(this.game_id.value).subscribe((data) => {\r\n\t\t\t// console.log(\"Game retrieved is:\", data);\r\n\t\t\tthis._currentGame = data;\r\n\t\t\tthis.gameRetrieveForm.reset(); // clear out fields after form submit\r\n\t\t});\r\n\t\t\r\n\t} //end retrieveGame()\r\n\r\n\tresetAllGames() {\r\n\t\tthis._gameService.resetAllGames().subscribe((data) => {\r\n\t\t\tconsole.log(\"All Games Reset!\");\r\n\t\t});\r\n\t}\r\n\r\n\treplayAllGames() {\r\n\t\tthis._gameService.replayAllGames().subscribe((data) => {\r\n\t\t\tconsole.log(\"All Games Replayed!\");\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","// ./src/app/app-bootstrap.module.ts\r\n// This module is used to import 3rd party UI modules \r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n// ngx-bootstrap modules\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BsDropdownModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    CollapseModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n  ],\r\n  exports: [BsDropdownModule, TooltipModule, ModalModule, CollapseModule, TabsModule]\r\n})\r\nexport class AppBootstrapModule {}","// ./src/app/app-routing.module.ts\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport {\r\n  routes as childRoutes,\r\n  AdminModule\r\n} from './admin/admin.module';\r\n\r\nimport { UserResolver } from './core/user-resolver';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RosterComponent } from './roster/roster.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { ProfileDetailsComponent } from './profile-details/profile-details.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { BracketsComponent } from './brackets/brackets.component';\r\n\r\nimport { IsAdminGuard } from './core/is-admin.guard';\r\n\r\nconst routes: Routes = [\r\n\t{ path: '', redirectTo: '/home', pathMatch: 'full' },\r\n  { path: 'home',\r\n    component: HomeComponent,\r\n    resolve: { loggedInUser: UserResolver },\r\n    runGuardsAndResolvers: 'always' },\r\n  { path: 'profile', \r\n    component: ProfileComponent,\r\n    resolve: { loggedInUser: UserResolver } },\r\n  { path: 'brackets/:id', component: BracketsComponent },\r\n\t{ path: 'logout', \r\n      component: LogoutComponent,\r\n      resolve: {url: 'externalUrlRedirectResolver'},\r\n      data: {externalUrl: '/logout/'}},\r\n  { path: 'admin',\r\n    canActivate: [IsAdminGuard],\r\n    children: childRoutes\r\n  },\r\n  { path: '**', redirectTo: '/home', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\r\n  exports: [RouterModule],\r\n  providers: [\r\n  \t{ // to be able to reference an external url within Routes\r\n      provide: 'externalUrlRedirectResolver',\r\n      useValue: (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) =>\r\n      { window.location.href = (route.data as any).externalUrl; }\r\n    },\r\n    UserResolver,\r\n  ],\r\n})\r\n\r\nexport class AppRoutingModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--src/app/app.component.html-->\\r\\n\\r\\n<app-layout>\\r\\n\\r\\n<router-outlet>\\r\\n<!-- Displays what is specified in path: '' to start, then whatever is clicked above -->\\r\\n</router-outlet>\\r\\n\\r\\n</app-layout>\"","import { Component, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from './core/user.service';\r\nimport { IUserData } from './shared/interfaces';\r\n\r\nimport { Store } from 'redux';\r\nimport { AppStore } from './app.store';\r\nimport { AppState } from './app.state';\r\nimport * as UserActions from './core/user.actions';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'front-end';\r\n  token_id : object;\r\n  currentUser : IUserData;\r\n  // isCollapsed = true;\r\n  \r\n  constructor(\r\n    private router: Router, \r\n    private _userService: UserService, \r\n    ) { };\r\n\r\n  ngOnInit() {\r\n    // Check to see if app is being intiatiated from Django shell or directly from terminal\r\n    // By looking at localStorage for 'tokenid' that Django passes\r\n    if (window.localStorage.getItem('tokenid')) {\r\n    \t// Get token passed from Django view to localStorage and pass to UserService\r\n      // refresh UserService token for subsequent use, removeItem from localStorage\r\n      this.token_id = JSON.parse(window.localStorage.getItem('tokenid'));\r\n      this._userService.id = this.token_id['id'];\r\n      this._userService.token = this.token_id['token'];\r\n      this._userService.refreshToken();\r\n      window.localStorage.clear();\r\n    }\r\n      // *** For testing purposes when launch Angular via 'ng serve --proxy-config proxyconfig.json' from project folder\r\n      // Login via _userService to establish token with preset values \r\n    else {\r\n      // this._userService.id = 2;\r\n      // this._userService.login({'email': 'vcaratini@cubs.com', 'password': 'Maddon55'});\r\n      // this._userService.id = 8;\r\n      // this._userService.login({'email': 'bzobrist@cubs.com', 'password': 'Maddon55'});\r\n      this._userService.id = 1;\r\n      this._userService.login({'email': 'paulrmaurer@yahoo.com', 'password': 'Quakers1!'});\r\n      // this._userService.id = 29;\r\n      // this._userService.login({'email': 'bzobrist@cubs.com', 'password': 'Maddon55'});\r\n    }\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { appStoreProviders } from './app.store';\r\nimport { AppBootstrapModule } from './app-bootstrap.module';\r\nimport { UiModule } from './ui/ui.module';\r\nimport { AdminModule } from './admin/admin.module';\r\nimport { AngularFontAwesomeModule } from 'angular-font-awesome'\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RosterComponent } from './roster/roster.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { ProfileDetailsComponent } from './profile-details/profile-details.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { BracketsComponent } from './brackets/brackets.component';\r\nimport { ProfileFormModalComponent } from './profile-form-modal/profile-form-modal.component';\r\nimport { TeamDetailsComponent } from './team-details/team-details.component';\r\nimport { DeleteModalComponent } from './admin/create-brackets/delete-bracket-modal.component';\r\nimport { ReassignModalComponent } from './admin/create-brackets/reassign-bracket-modal.component';\r\nimport { ResetModalComponent } from './admin/create-brackets/reset-bracket-modal.component';\r\nimport { TeamNextupComponent } from './team-nextup/team-nextup.component';\r\nimport { StandingsComponent } from './standings/standings.component';\r\nimport { StandingsNavComponent } from './standings-nav/standings-nav.component';\r\nimport { BracketTabComponent } from './bracket-tab/bracket-tab.component';\r\nimport { RosterTextboxComponent } from './roster-textbox/roster-textbox.component';\r\nimport { SendOrigModalComponent } from './admin/send-emails/send-orig-modal.component';\r\nimport { SendGamesModalComponent } from './admin/send-emails/send-games-modal.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    RosterComponent,\r\n    ProfileComponent,\r\n    ProfileDetailsComponent,\r\n    LogoutComponent,\r\n    BracketsComponent,\r\n    ProfileFormModalComponent,\r\n    TeamDetailsComponent,\r\n    DeleteModalComponent,\r\n    ReassignModalComponent,\r\n    ResetModalComponent,\r\n    TeamNextupComponent,\r\n    StandingsComponent,\r\n    StandingsNavComponent,\r\n    BracketTabComponent,\r\n    RosterTextboxComponent,\r\n    SendOrigModalComponent,\r\n    SendGamesModalComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AppBootstrapModule,\r\n    UiModule,\r\n    AdminModule,\r\n    AngularFontAwesomeModule,\r\n  ],\r\n  providers: [ appStoreProviders ],\r\n  bootstrap: [ AppComponent ],\r\n  entryComponents: [ \r\n    ProfileFormModalComponent, \r\n    DeleteModalComponent, \r\n    ReassignModalComponent,\r\n    ResetModalComponent,\r\n    SendOrigModalComponent, \r\n    SendGamesModalComponent,\r\n  ]\r\n})\r\nexport class AppModule { }\r\n","// .src/app/app.store.ts\r\nimport { InjectionToken } from '@angular/core';\r\n\r\nimport {\r\n  createStore,\r\n  Store,\r\n  compose,\r\n  StoreEnhancer\r\n} from 'redux';\r\nimport { AppState } from './app.state';\r\nimport { UserReducer as reducer } from './core/user.reducer';\r\n\r\nexport const AppStore = new InjectionToken('App.store');\r\n\r\nconst devtools: StoreEnhancer<AppState> =\r\n  window['devToolsExtension'] ?\r\n  window['devToolsExtension']() : f => f;\r\n\r\nexport function createAppStore(): Store<AppState> {\r\n  return createStore<AppState, any, any, any>(\r\n    reducer,\r\n    compose(devtools)\r\n  );\r\n}\r\n\r\nexport const appStoreProviders = [\r\n   { provide: AppStore, useFactory: createAppStore }\r\n];","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JyYWNrZXQtdGFiL2JyYWNrZXQtdGFiLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- src/app/bracket-tab/bracket-tab.component.html -->\\r\\n<main>\\r\\n\\t<ng-container *ngIf=\\\"_region_id <= 4\\\">\\r\\n\\t\\t<ul class=\\\"rnd-title\\\"  *ngFor=\\\"let number of [1,2,3,4]\\\">Round {{number}}</ul>\\r\\n\\t</ng-container>\\r\\n\\t<ng-container *ngIf=\\\"_region_id == 5\\\">\\r\\n\\t\\t<ul class=\\\"rnd-title\\\">Final Four</ul>\\r\\n\\t\\t<ul class=\\\"rnd-title\\\">Finals</ul>\\r\\n\\t\\t<ul class=\\\"rnd-title\\\">Champion</ul>\\r\\n\\t</ng-container>\\r\\n</main>\\r\\n\\r\\n<main *ngIf=\\\"_bracketGames && _bracketOwners\\\">\\r\\n\\t<!-- First round games -->\\r\\n\\t<ul class=\\\"round round-1\\\" *ngIf=\\\"_region_id <= 4\\\">\\r\\n\\t\\t<ng-template ngFor let-g [ngForOf]=\\\"_rnd_game_ids[1]\\\">\\r\\n\\t\\t\\t<li class=\\\"spacer\\\">&nbsp;</li>\\r\\n\\t\\t\\t<li class=\\\"game game-top\\\"\\r\\n\\t\\t\\t\\t[ngClass]=\\\"{'text-light bg-success':_userService.id == _bracketOwners[g].team1_owner_id}\\\">\\r\\n\\t\\t\\t\\t{{ _bracketGames[g].team1}}\\r\\n\\t\\t\\t\\t<ng-container *ngIf=\\\"_bracketOwners[g].team1_owner\\\">\\r\\n\\t\\t\\t\\t\\t({{ _bracketOwners[g].team1_owner }})\\r\\n\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t<span>{{ getTeam1Result(_bracketGames[g]) }}</span>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t\\t<li class=\\\"game game-spacer\\\">&nbsp;</li>\\r\\n\\t\\t\\t<li class=\\\"game game-bottom\\\"\\r\\n\\t\\t\\t\\t[ngClass]=\\\"{'text-light bg-success':_userService.id == _bracketOwners[g].team2_owner_id}\\\">\\r\\n\\t\\t\\t\\t{{ _bracketGames[g].team2}}\\r\\n\\t\\t\\t\\t<ng-container *ngIf=\\\"_bracketOwners[g].team2_owner\\\">\\r\\n\\t\\t\\t\\t\\t({{ _bracketOwners[g].team2_owner }})\\r\\n\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t<span>{{ getTeam2Result(_bracketGames[g]) }}</span>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t</ng-template>\\r\\n\\t\\t<li class=\\\"spacer\\\">&nbsp;</li>\\r\\n\\t</ul>\\r\\n\\t<!-- Second round games -->\\r\\n\\t<ul class=\\\"round round-2\\\" *ngIf=\\\"_region_id <= 4\\\">\\r\\n\\t\\t<ng-template ngFor let-g [ngForOf]=\\\"_rnd_game_ids[2]\\\">\\r\\n\\t\\t\\t<li class=\\\"spacer\\\">&nbsp;</li>\\r\\n\\t\\t\\t<li class=\\\"game game-top\\\"\\r\\n\\t\\t\\t\\t[ngClass]=\\\"{'text-light bg-success':_userService.id == _bracketOwners[g].team1_owner_id}\\\">\\r\\n\\t\\t\\t\\t{{ _bracketGames[g].team1}}\\r\\n\\t\\t\\t\\t<ng-container *ngIf=\\\"_bracketOwners[g].team1_owner\\\">\\r\\n\\t\\t\\t\\t\\t({{ _bracketOwners[g].team1_owner }})\\r\\n\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t<span>{{ getTeam1Result(_bracketGames[g]) }}</span>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t\\t<li class=\\\"game game-spacer\\\">&nbsp;</li>\\r\\n\\t\\t\\t<li class=\\\"game game-bottom\\\"\\r\\n\\t\\t\\t\\t[ngClass]=\\\"{'text-light bg-success':_userService.id == _bracketOwners[g].team2_owner_id}\\\">\\r\\n\\t\\t\\t\\t{{ _bracketGames[g].team2}}\\r\\n\\t\\t\\t\\t<ng-container *ngIf=\\\"_bracketOwners[g].team2_owner\\\">\\r\\n\\t\\t\\t\\t\\t({{ _bracketOwners[g].team2_owner }})\\r\\n\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t<span>{{ getTeam2Result(_bracketGames[g]) }}</span>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t</ng-template>\\r\\n\\t\\t<li class=\\\"spacer\\\">&nbsp;</li>\\r\\n\\t</ul>\\r\\n\\t<!-- Third round games -->\\r\\n\\t<ul class=\\\"round round-3\\\" *ngIf=\\\"_region_id <= 4\\\">\\r\\n\\t\\t<ng-template ngFor let-g [ngForOf]=\\\"_rnd_game_ids[3]\\\">\\r\\n\\t\\t\\t<li class=\\\"spacer\\\">&nbsp;</li>\\r\\n\\t\\t\\t<li class=\\\"game game-top\\\"\\r\\n\\t\\t\\t\\t[ngClass]=\\\"{'text-light bg-success':_userService.id == _bracketOwners[g].team1_owner_id}\\\">\\r\\n\\t\\t\\t\\t{{ _bracketGames[g].team1}}\\r\\n\\t\\t\\t\\t<ng-container *ngIf=\\\"_bracketOwners[g].team1_owner\\\">\\r\\n\\t\\t\\t\\t\\t({{ _bracketOwners[g].team1_owner }})\\r\\n\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t<span>{{ getTeam1Result(_bracketGames[g]) }}</span>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t\\t<li class=\\\"game game-spacer\\\">&nbsp;</li>\\r\\n\\t\\t\\t<li class=\\\"game game-bottom\\\"\\r\\n\\t\\t\\t\\t[ngClass]=\\\"{'text-light bg-success':_userService.id == _bracketOwners[g].team2_owner_id}\\\">\\r\\n\\t\\t\\t\\t{{ _bracketGames[g].team2}}\\r\\n\\t\\t\\t\\t<ng-container *ngIf=\\\"_bracketOwners[g].team2_owner\\\">\\r\\n\\t\\t\\t\\t\\t({{ _bracketOwners[g].team2_owner }})\\r\\n\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t<span>{{ getTeam2Result(_bracketGames[g]) }}</span>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t</ng-template>\\r\\n\\t\\t<li class=\\\"spacer\\\">&nbsp;</li>\\r\\n\\t</ul>\\r\\n\\t<!-- Fourth round games -->\\r\\n\\t<ul class=\\\"round round-4\\\" *ngIf=\\\"_region_id <= 4\\\">\\r\\n\\t\\t<ng-template ngFor let-g [ngForOf]=\\\"_rnd_game_ids[4]\\\">\\r\\n\\t\\t\\t<li class=\\\"spacer\\\">&nbsp;</li>\\r\\n\\t\\t\\t<li class=\\\"game game-top\\\"\\r\\n\\t\\t\\t\\t[ngClass]=\\\"{'text-light bg-success':_userService.id == _bracketOwners[g].team1_owner_id}\\\">\\r\\n\\t\\t\\t\\t{{ _bracketGames[g].team1}}\\r\\n\\t\\t\\t\\t<ng-container *ngIf=\\\"_bracketOwners[g].team1_owner\\\">\\r\\n\\t\\t\\t\\t\\t({{ _bracketOwners[g].team1_owner }})\\r\\n\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t<span>{{ getTeam1Result(_bracketGames[g]) }}</span>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t\\t<li class=\\\"game game-spacer\\\">&nbsp;</li>\\r\\n\\t\\t\\t<li class=\\\"game game-bottom\\\"\\r\\n\\t\\t\\t\\t[ngClass]=\\\"{'text-light bg-success':_userService.id == _bracketOwners[g].team2_owner_id}\\\">\\r\\n\\t\\t\\t\\t{{ _bracketGames[g].team2}}\\r\\n\\t\\t\\t\\t<ng-container *ngIf=\\\"_bracketOwners[g].team2_owner\\\">\\r\\n\\t\\t\\t\\t\\t({{ _bracketOwners[g].team2_owner }})\\r\\n\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t<span>{{ getTeam2Result(_bracketGames[g]) }}</span>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t</ng-template>\\r\\n\\t\\t<li class=\\\"spacer\\\">&nbsp;</li>\\r\\n\\t</ul>\\r\\n\\t<!-- Fifth round games -->\\r\\n\\t<ul class=\\\"round round-5\\\" *ngIf=\\\"_region_id == 5\\\">\\r\\n\\t\\t<ng-template ngFor let-g [ngForOf]=\\\"_rnd_game_ids[5]\\\">\\r\\n\\t\\t\\t<li class=\\\"spacer\\\">&nbsp;</li>\\r\\n\\t\\t\\t<li class=\\\"game game-title-top\\\" *ngIf=\\\"_regionList\\\">\\r\\n\\t\\t\\t\\t{{ g==61 ? _regionList[0].name : _regionList[2].name }} Region Champion\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t\\t<li class=\\\"game game-top\\\"\\r\\n\\t\\t\\t\\t[ngClass]=\\\"{'text-light bg-success':_userService.id == _bracketOwners[g].team1_owner_id}\\\">\\r\\n\\t\\t\\t\\t{{ _bracketGames[g].team1}}\\r\\n\\t\\t\\t\\t<ng-container *ngIf=\\\"_bracketOwners[g].team1_owner\\\">\\r\\n\\t\\t\\t\\t\\t({{ _bracketOwners[g].team1_owner }})\\r\\n\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t<span>{{ getTeam1Result(_bracketGames[g]) }}</span>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t\\t<li class=\\\"game game-spacer\\\">&nbsp;</li>\\r\\n\\t\\t\\t<li class=\\\"game game-title-bottom\\\" *ngIf=\\\"_regionList\\\">\\r\\n\\t\\t\\t\\t{{ g==61 ? _regionList[1].name : _regionList[3].name }} Region Champion\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t\\t<li class=\\\"game game-bottom\\\"\\r\\n\\t\\t\\t\\t[ngClass]=\\\"{'text-light bg-success':_userService.id == _bracketOwners[g].team2_owner_id}\\\">\\r\\n\\t\\t\\t\\t{{ _bracketGames[g].team2}}\\r\\n\\t\\t\\t\\t<ng-container *ngIf=\\\"_bracketOwners[g].team2_owner\\\">\\r\\n\\t\\t\\t\\t\\t({{ _bracketOwners[g].team2_owner }})\\r\\n\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t<span>{{ getTeam2Result(_bracketGames[g]) }}</span>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t</ng-template>\\r\\n\\t\\t<li class=\\\"spacer\\\">&nbsp;</li>\\r\\n\\t</ul>\\r\\n\\t<!-- Sixth round games -->\\r\\n\\t<ul class=\\\"round round-6\\\" *ngIf=\\\"_region_id == 5\\\">\\r\\n\\t\\t<ng-template ngFor let-g [ngForOf]=\\\"_rnd_game_ids[6]\\\">\\r\\n\\t\\t\\t<li class=\\\"spacer\\\">&nbsp;</li>\\r\\n\\t\\t\\t<li class=\\\"game game-title-top\\\"> </li>\\r\\n\\t\\t\\t<li class=\\\"game game-top\\\"\\r\\n\\t\\t\\t\\t[ngClass]=\\\"{'text-light bg-success':_userService.id == _bracketOwners[g].team1_owner_id}\\\">\\r\\n\\t\\t\\t\\t{{ _bracketGames[g].team1}}\\r\\n\\t\\t\\t\\t<ng-container *ngIf=\\\"_bracketOwners[g].team1_owner\\\">\\r\\n\\t\\t\\t\\t\\t({{ _bracketOwners[g].team1_owner }})\\r\\n\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t<span>{{ getTeam1Result(_bracketGames[g]) }}</span>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t\\t<li class=\\\"game game-spacer\\\">&nbsp;</li>\\r\\n\\t\\t\\t<li class=\\\"game game-bottom\\\"\\r\\n\\t\\t\\t\\t[ngClass]=\\\"{'text-light bg-success':_userService.id == _bracketOwners[g].team2_owner_id}\\\">\\r\\n\\t\\t\\t\\t{{ _bracketGames[g].team2}}\\r\\n\\t\\t\\t\\t<ng-container *ngIf=\\\"_bracketOwners[g].team2_owner\\\">\\r\\n\\t\\t\\t\\t\\t({{ _bracketOwners[g].team2_owner }})\\r\\n\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t<span>{{ getTeam2Result(_bracketGames[g]) }}</span>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t</ng-template>\\r\\n\\t\\t<li class=\\\"spacer\\\">&nbsp;</li>\\r\\n\\t</ul>\\r\\n\\t<!-- Champion -->\\r\\n\\t<ul class=\\\"round\\\" *ngIf=\\\"getChampion() && _region_id==5\\\">\\r\\n\\t\\t<strong>&nbsp;&nbsp;***CHAMPION***</strong>\\r\\n\\t\\t<strong>&nbsp;{{_champion}} ({{_winningTeamOwner}})</strong>\\r\\n\\t</ul>\\r\\n</main>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NewGameWithOwnerData, GameData, RegionData } from '../shared/interfaces';\r\nimport { UserService } from '../core/user.service';\r\nimport { RegionService } from '../core/region.service';\r\n\r\n@Component({\r\n  selector: 'app-bracket-tab',\r\n  templateUrl: './bracket-tab.component.html',\r\n  styleUrls: ['./bracket-tab.component.css']\r\n})\r\nexport class BracketTabComponent implements OnInit {\r\n\r\n\t_bracketOwners: NewGameWithOwnerData[]; //array to capture game owner info\r\n\t_rnd_game_ids: object; //object containing region_id : game_id arrays to get proper game info for each bracket\r\n\t_champion: string; //string to capture champion of bracket\r\n\t_winningTeamOwner: string; //string to capture winning team owner\r\n\t_regionList: RegionData[];\r\n\r\n\t@Input('region') _region_id: number; //id of region passed to component\r\n\t@Input('bracketGames') _bracketGames: GameData[]; //subset of games associated with each Region\r\n\r\n\t//Inject this value from parent component and update team owners as parent bracket is clicked\r\n\t@Input() get bracketOwners(): NewGameWithOwnerData[] {\r\n\t\treturn this._bracketOwners;\r\n\t}\r\n\tset bracketOwners(value: NewGameWithOwnerData[]) {\r\n\t\tif (value) {\r\n\t\t\tthis._bracketOwners = value;\r\n\t\t\t// console.log (\"Detail component bracketOwners for \", this._region_id, \" Region\", this._bracketOwners);\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(\r\n\t\tprivate _userService: UserService,\r\n\t\tprivate _regionService: RegionService) { }\r\n\r\n\tngOnInit() {\r\n\t\t// console.log (\"Detail component bracketGames for \", this._region_id, \" Region\", this._bracketGames);\r\n\r\n\t\t//Create game id arrays for each Round with round # as index\r\n\t\tthis._rnd_game_ids = {}\r\n\t\tthis._rnd_game_ids[1] = Array.from({length: 8}, (v, k) => k+ 1 + this.getRdIncr(1));\r\n\t\tthis._rnd_game_ids[2] = Array.from({length: 4}, (v, k) => k+33 + this.getRdIncr(2));\r\n\t\tthis._rnd_game_ids[3] = Array.from({length: 2}, (v, k) => k+49 + this.getRdIncr(3));\r\n\t\tthis._rnd_game_ids[4] = Array.from({length: 1}, (v, k) => k+57 + this.getRdIncr(4));\r\n\t\tthis._rnd_game_ids[5] = [61, 62];\r\n\t\tthis._rnd_game_ids[6] = [63];\r\n\t\t// console.log (\"This region array of game numbers is\", this._rnd_game_ids);\r\n\r\n\t\t// Retrieve list of regions to display in tabs, but only make this http call once for Final Four tab\r\n\t\tif (this._region_id==5) {\r\n\t\t\tthis._regionService.getRegionList().subscribe(data => {\r\n\t\t\t\tthis._regionList = data;\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tgetRdIncr(x) { //x = round #\r\n\t\t//To identify proper increment to add to South Region game id arrays\r\n\t\t//to generate other regions' game ids\r\n\t\tswitch(this._region_id) {\r\n\t\t\tcase 1: { return 0; break; }\r\n\t\t\tcase 2: {\r\n\t\t\t\tswitch(x) {\r\n\t\t\t\t\tcase 1: {return 8; break; }\r\n\t\t\t\t\tcase 2: {return 4; break; }\r\n\t\t\t\t\tcase 3: {return 2; break; }\r\n\t\t\t\t\tcase 4: {return 1; break; }\r\n\t\t\t\t}}\r\n\t\t\tcase 3: {\r\n\t\t\t\tswitch(x) {\r\n\t\t\t\t\tcase 1: {return 16; break; }\r\n\t\t\t\t\tcase 2: {return 8; break; }\r\n\t\t\t\t\tcase 3: {return 4; break; }\r\n\t\t\t\t\tcase 4: {return 2; break; }\r\n\t\t\t\t}}\r\n\t\t\tcase 4: {\r\n\t\t\t\tswitch(x) {\r\n\t\t\t\t\tcase 1: {return 24; break; }\r\n\t\t\t\t\tcase 2: {return 12; break; }\r\n\t\t\t\t\tcase 3: {return 6; break; }\r\n\t\t\t\t\tcase 4: {return 3; break; }\r\n\t\t\t\t}}\r\n\t\t} // end outer switch\r\n\t} //end getRdIncr(x)\r\n\r\n\tgetTeam1Result(game: GameData) {\r\n\t\t// To determine whether to show score (post-game) or spread (pre-game)\r\n\t\tif (game.team1_score > 0) {\r\n\t\t\tif (game.spread > 0) {\r\n\t\t\t\treturn game.team1_score + '('+ (-game.spread - 0.5) + ')'\r\n\t\t\t}\r\n\t\t\telse if (game.spread == 0) {\r\n\t\t\t\treturn game.team1_score + '(PK)'\r\n\t\t\t}\r\n\t\t\telse {return game.team1_score}\r\n\t\t}\r\n\t\telse if (game.spread > 0) {\r\n\t\t\treturn -game.spread - 0.5\r\n\t\t}\r\n\t\telse if (game.spread == 0) {\r\n\t\t\treturn 'PK'\r\n\t\t}\r\n\t} // end getTeam1Result(game)\r\n\r\n\tgetTeam2Result(game: GameData) {\r\n\t\t// To determine whether to show score (post-game) or spread (pre-game)\r\n\t\tif (game.team2_score > 0) {\r\n\t\t\tif (game.spread < 0) {\r\n\t\t\t\treturn game.team2_score + '('+ (game.spread - 0.5) + ')'\r\n\t\t\t}\r\n\t\t\telse {return game.team2_score}\r\n\t\t\t\r\n\t\t}\r\n\t\telse if (game.spread < 0) {\r\n\t\t\treturn game.spread - 0.5\r\n\t\t}\r\n\t} // end getTeam2Result(game)\t\t\r\n\r\n\r\n\tgetChampion() {\r\n\t\t// To identify champion for display on bracket\r\n\t\tvar isChampion = false\r\n\t\tif (this._bracketGames[63] && this._bracketGames[63].team1_score && this._bracketGames[63].team2_score) {\r\n\t\t\tisChampion = true\r\n\t\t\t// console.log(\"Determining winning info...\")\r\n\t\t\tif (this._bracketGames[63].team1_score > this._bracketGames[63].team2_score ) {\r\n\t\t\t\tthis._champion = this._bracketGames[63].team1\r\n\t\t\t\tthis._winningTeamOwner = this._bracketOwners[63].team1_owner\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._champion = this._bracketGames[63].team2\r\n\t\t\t\tthis._winningTeamOwner = this._bracketOwners[63].team2_owner\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn isChampion\r\n\t} //end getChampion\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JyYWNrZXRzL2JyYWNrZXRzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!--brackets.component.html-->\\r\\n\\r\\n<small class=\\\"text-muted\\\">(Click to see bracket)</small>\\r\\n<div class=\\\"brackets-nav\\\">\\r\\n    <nav class=\\\"navbar\\\">\\r\\n        <ul class=\\\"nav nav-pills\\\">\\r\\n    \\t\\t<li class = \\\"nav-item\\\" *ngFor = \\\"let tbracket of tbracketList\\\">\\r\\n    \\t\\t\\t<a class = \\\"nav-link\\\" [routerLink]=\\\"['/brackets', tbracket.id]\\\"\\r\\n    \\t\\t\\t[class.active]=\\\"isActive(tbracket.id)\\\"\\r\\n    \\t\\t\\t>{{ tbracket.name }}</a>\\r\\n    \\t\\t</li>\\r\\n    \\t</ul>\\r\\n    </nav>\\r\\n</div>\\r\\n<br>\\r\\n<div [class.loader] = \\\"loading\\\">\\r\\n  <tabset #staticTabs>\\r\\n    <tab heading={{regionList[0].name}} *ngIf=\\\"regionList\\\">\\r\\n        <app-bracket-tab *ngIf=\\\"region1Games && region1Owners\\\" \\r\\n            [region]=\\\"regionList[0].id\\\" [bracketGames]=\\\"region1Games\\\" [bracketOwners]=\\\"region1Owners\\\">\\r\\n    \\t</app-bracket-tab>\\r\\n    </tab>\\r\\n    <tab heading={{regionList[1].name}} *ngIf=\\\"regionList\\\">\\r\\n    \\t<app-bracket-tab *ngIf=\\\"region2Games && region2Owners\\\"  \\r\\n    \\t\\t[region]=\\\"regionList[1].id\\\" [bracketGames]=\\\"region2Games\\\" [bracketOwners]=\\\"region2Owners\\\">\\r\\n    \\t</app-bracket-tab>\\r\\n    </tab>\\r\\n    <tab heading={{regionList[2].name}} *ngIf=\\\"regionList\\\">\\r\\n    \\t<app-bracket-tab *ngIf=\\\"region3Games && region3Owners\\\"  \\r\\n    \\t\\t[region]=\\\"regionList[2].id\\\" [bracketGames]=\\\"region3Games\\\" [bracketOwners]=\\\"region3Owners\\\">\\r\\n    \\t</app-bracket-tab>\\r\\n    </tab>\\r\\n    <tab heading={{regionList[3].name}} *ngIf=\\\"regionList\\\">\\r\\n    \\t<app-bracket-tab *ngIf=\\\"region4Games && region4Owners\\\"  \\r\\n    \\t\\t[region]=\\\"regionList[3].id\\\" [bracketGames]=\\\"region4Games\\\" [bracketOwners]=\\\"region4Owners\\\">\\r\\n    \\t</app-bracket-tab>\\r\\n    </tab>\\r\\n    <tab heading={{regionList[4].name}} *ngIf=\\\"regionList\\\">\\r\\n    \\t<app-bracket-tab *ngIf=\\\"ffourOwners && ffourGames\\\"\\r\\n    \\t\\t[region]=\\\"regionList[4].id\\\" [bracketGames]=\\\"ffourGames\\\" [bracketOwners]=\\\"ffourOwners\\\">\\r\\n    \\t</app-bracket-tab>\\r\\n    </tab>\\r\\n  </tabset>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Inject, ViewChild, ViewChildren, AfterViewInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { TBracketService } from '../core/tbracket.service';\r\nimport { GameService } from '../core/game.service';\r\nimport { UserService } from '../core/user.service';\r\nimport { RegionService } from '../core/region.service';\r\nimport { TBracketData, GameData, GameWithOwnerData, IUserData, RegionData, NewGameWithOwnerData } from '../shared/interfaces';\r\nimport { TabsetComponent } from 'ngx-bootstrap/tabs';\r\n\r\n@Component({\r\n  selector: 'app-brackets',\r\n  templateUrl: './brackets.component.html',\r\n  styleUrls: ['./brackets.component.css']\r\n})\r\nexport class BracketsComponent implements OnInit {\r\n\t@ViewChild('staticTabs') staticTabs: TabsetComponent;\r\n\tprivate id: number; //capture tbracket id url parameter\r\n\ttbracketList: TBracketData[];\r\n\tregionList: RegionData[];\r\n\tloading: boolean;\r\n\t\r\n\t// To capture each regions' games for passing to child component\r\n\tregion1Games: object;\r\n\tregion2Games: object;\r\n\tregion3Games: object;\r\n\tregion4Games: object;\r\n\tffourGames: object;\r\n\t// To capture each regions' games' team1 & team2 owners for child component\r\n\tregion1Owners: object;\r\n\tregion2Owners: object;\r\n\tregion3Owners: object;\r\n\tregion4Owners: object;\r\n\tffourOwners: object;\r\n\r\n\tconstructor(private _tbracketService: TBracketService,\r\n\t\tprivate _gameService: GameService,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate router: Router,\r\n\t\tprivate _userService: UserService,\r\n\t\tprivate _regionService: RegionService\r\n\t\t) { }\r\n\r\n\tngOnInit() {\r\n     \t\r\n\t\t// Subscribe to activated route parameter and update activeBracket to pass to child components\r\n  \t\t// Based on active bracket (in params), convert each Region's bracket owners (retrieved via Matchup table)\r\n  \t\t// to indexed arrays for each Region\r\n  \t\t// FYI - the following line would only work the first time the page is visited:\r\n\t\t// this.id = this.route.snapshot.params['id'];\r\n\t\tthis.loading = true;\r\n\t\tthis.route.params.subscribe(params => {\r\n\t\t\tthis.id = params['id'];\r\n\t\t\tthis._gameService.getNewGameWithMatchupDataList(this.id).subscribe(data => {\r\n\t\t\t\tconst region1Owners = Object.assign({}, ...data\r\n\t\t\t\t\t.filter(item => item.region_id == 1)\r\n\t\t\t\t\t.map(item => ({[item['id']]: item}))\r\n\t\t\t\t\t);\r\n\t\t\t\tthis.region1Owners=region1Owners;\r\n\t\t\t\tconst region2Owners = Object.assign({}, ...data\r\n\t\t\t\t\t.filter(item => item.region_id == 2)\r\n\t\t\t\t\t.map(item => ({[item['id']]: item}))\r\n\t\t\t\t\t);\r\n\t\t\t\tthis.region2Owners=region2Owners;\r\n\t\t\t\tconst region3Owners = Object.assign({}, ...data\r\n\t\t\t\t\t.filter(item => item.region_id == 3)\r\n\t\t\t\t\t.map(item => ({[item['id']]: item}))\r\n\t\t\t\t\t);\r\n\t\t\t\tthis.region3Owners=region3Owners;\r\n\t\t\t\tconst region4Owners = Object.assign({}, ...data\r\n\t\t\t\t\t.filter(item => item.region_id == 4)\r\n\t\t\t\t\t.map(item => ({[item['id']]: item}))\r\n\t\t\t\t\t);\r\n\t\t\t\tthis.region4Owners=region4Owners;\r\n\t\t\t\tconst ffourOwners = Object.assign({}, ...data\r\n\t\t\t\t\t.filter(item => item.region_id == 5)\r\n\t\t\t\t\t.map(item => ({[item['id']]: item}))\r\n\t\t\t\t\t);\r\n\t\t\t\tthis.ffourOwners=ffourOwners;\r\n\t\t\t\t\r\n\t\t\t\tthis.loading = false;\r\n\r\n\t\t\t\t// Set active tab based on fragment contained in url, if it exists\r\n\t\t\t\tthis.route.fragment.subscribe(fragment => { \r\n\t\t\t\t\tif (fragment) {\r\n\t\t\t\t\t\tvar id = parseInt(fragment);\r\n\t\t\t\t\t\t// console.log(\"Tab Id to navigate to is: \", this.tabId);\r\n\t\t\t\t\t\tthis.staticTabs.tabs[id].active = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t})\r\n\t\t\r\n\t\t// Retrieve game list & convert each Region's games into indexed arrays\r\n\t\t// for passing to child components for display\r\n\t\t// Only call this service 1x since game info doesn't change across brackets\r\n\t\tthis._gameService.getGameList().subscribe(data => {\r\n\t\t\tconst region1Games = Object.assign({}, ...data\r\n\t\t\t\t.filter(item => item.region_id == 1)\r\n\t\t\t\t.map(item => ({[item['id']]: item}))\r\n\t\t\t\t);\r\n\t\t\tthis.region1Games=region1Games;\r\n\t\t\tconst region2Games = Object.assign({}, ...data\r\n\t\t\t\t.filter(item => item.region_id == 2)\r\n\t\t\t\t.map(item => ({[item['id']]: item}))\r\n\t\t\t\t);\r\n\t\t\tthis.region2Games=region2Games;\r\n\t\t\tconst region3Games = Object.assign({}, ...data\r\n\t\t\t\t.filter(item => item.region_id == 3)\r\n\t\t\t\t.map(item => ({[item['id']]: item}))\r\n\t\t\t\t);\r\n\t\t\tthis.region3Games=region3Games;\r\n\t\t\tconst region4Games = Object.assign({}, ...data\r\n\t\t\t\t.filter(item => item.region_id == 4)\r\n\t\t\t\t.map(item => ({[item['id']]: item}))\r\n\t\t\t\t);\r\n\t\t\tthis.region4Games=region4Games;\r\n\t\t\tconst ffourGames = Object.assign({}, ...data\r\n\t\t\t\t.filter(item => item.region_id == 5)\r\n\t\t\t\t.map(item => ({[item['id']]: item}))\r\n\t\t\t\t);\r\n\t\t\tthis.ffourGames=ffourGames;\r\n\t\t})\r\n\r\n\t\t// Retrieve list of brackets for bracket navbar with brackets that player\r\n\t\t// belongs to sorted first\r\n\t\tthis._tbracketService.getListWithPlayer(this._userService.id).subscribe(data => {\r\n\t\t\tthis.tbracketList = data;\r\n\t\t});\r\n\r\n\t\t// Retrieve list of regions to display in tabs\r\n\t\tthis._regionService.getRegionList().subscribe(data => {\r\n\t\t\tthis.regionList = data;\r\n\t\t});\r\n\t\r\n\t} //end ngOnInit\r\n\r\n\t// Function to determine which bracket navbar to make 'active' in template based on route param\r\n\tisActive(navbarId: number): boolean {\r\n\t\t// return true to highlight nav bar item that is = route paramter\r\n\t\treturn navbarId == this.id;\r\n\t}\r\n\r\n} //end class\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { EntryData, EntryBracketData, EntryNameData, EntryStandingsData, EntryMyTeamsData } from '../shared/interfaces';\r\nimport { UserService } from './user.service';\r\n\r\n//entryUrl is base url for entries table end point\r\nconst entryUrl = '/api/entries/';\r\nconst entry_bracketsUrl = '/api/entry_brackets/';\r\nconst entry_namesUrl = '/api/entry_names/';\r\nconst entry_standingsURL = '/api/entry_standings/';\r\nconst entry_myteams = 'api/entry_myteams/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EntryService {\r\n\r\n\tconstructor(private http: HttpClient, private _userService: UserService) { }\r\n\r\n\t//method to retrieve entry details list for a player\r\n\tgetEntryDetailsListByPlayer(id) {\r\n\t\treturn this.http.get<EntryData[]>(entryUrl + '?playerid=' + id)\r\n\t\t}\r\n\r\n\t//method to retrieve entry bracket list for a player\r\n\tgetEntryBracketListByPlayer(id) {\r\n\t\treturn this.http.get<EntryBracketData[]>(entry_bracketsUrl + '?playerid=' + id)\r\n\t\t}\r\n\t\r\n\t//method to retrieve all entries matching ?tbracketid= value\r\n\tgetEntryListByBracket(tbracket_id) {\r\n\t\treturn this.http.get<EntryNameData[]>(entry_namesUrl + '?tbracketid=' + tbracket_id)\r\n\t\t}\r\n\r\n\t//method to retrieve all entries whose tbracketid = null\r\n\tgetEntryListbyNullBracket() {\r\n\t\treturn this.http.get<EntryNameData[]>(entry_namesUrl + '?no_bracket')\r\n\t\t}\r\n\r\n\t//method to retrieve Entry by tbracket_id & team_id (originally used for Bracket display of owners)\r\n\tgetEntryNameByTeamAndBracket(b_id, t_id) {\r\n\t\treturn this.http.get<EntryNameData>(entry_namesUrl + '?tbracketid=' + b_id + '&teamid=' + t_id)\r\n\t\t}\r\n\r\n\t//method for updating Entry once assigned to a Bracket\r\n\tupdateEntry(entry) {\r\n\t\treturn this.http.patch<EntryNameData>(entry_namesUrl + entry.id + '/', JSON.stringify(entry), this.getHttpOptions())\r\n\t}\r\n\r\n\t//method for creating all Entry data based on User info\r\n\tresetAllEntries() {\r\n\t    return this.http.get<EntryData[]>(entryUrl + 'reset_all/', this.getHttpOptions())\r\n\t}\r\n\r\n\t//method to retrieve all entries matching ?tbracketid= value\r\n\tgetEntryStandings(tbracket_id) {\r\n\t\treturn this.http.get<EntryStandingsData[]>(entry_standingsURL + '?tbracketid=' + tbracket_id)\r\n\t\t}\r\n\r\n\t//method to generate emails to all Owners of entries within a particular bracket\r\n\temailOrigTeamsToOwners(tbracket_id) {\r\n\t    return this.http.get<EntryData[]>(entryUrl + 'email_orig_teams_to_owners/' + '?tbracketid=' + tbracket_id)\r\n\t}\r\n\r\n\t//method to retrieve entry details list for a player\r\n\tgetEntryDetailsListMyTeamsByPlayer(id) {\r\n\t\treturn this.http.get<EntryMyTeamsData[]>(entry_myteams + '?playerid=' + id)\r\n\t\t}\r\n\r\n\t// helper function to build the HTTP headers\r\n\tgetHttpOptions() {\r\n\t\treturn {\r\n\t\t  headers: new HttpHeaders({\r\n\t\t    'Content-Type': 'application/json',\r\n\t\t    'Authorization': 'JWT ' + this._userService.token,\r\n\t\t  })\r\n\t\t};\r\n\t}\r\n\t\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { GameData, GameWithOwnerData, NewGameWithOwnerData } from '../shared/interfaces';\r\nimport { UserService } from './user.service';\r\n\r\n//gameUrl is base url for users table end point\r\nconst gameUrl = '/api/games/';\r\nconst game_ownerURL = '/api/games_owners/'\r\nconst game_matchupURL = '/api/games_matchups/'\r\nconst new_game_matchupURL = '/api/games_new_matchups/'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GameService {\r\n\r\n\tconstructor(private http: HttpClient, private _userService: UserService) { }\r\n\r\n\t//method to retrieve game details for a particular game\r\n\tgetGameDetails(id) {\r\n\t\treturn this.http.get<GameData>(gameUrl + id + '/')\r\n\t}\r\n\t\r\n\t//method to retrieve list of games\r\n\tgetGameList() {\r\n\t\treturn this.http.get<GameData[]>(gameUrl)\r\n\t}\r\n\r\n\t//method to retrieve all games in which a particular team is playing\r\n\tgetGameListByTeam(team_id) {\r\n\t\treturn this.http.get<GameData[]>(gameUrl + '?teamid=' + team_id)\r\n\t}\r\n\r\n\t//method to retrieve all games from a particular region\r\n\tgetGameListByRegion(region_id) {\r\n\t\treturn this.http.get<GameData[]>(gameUrl + '?regionid=' + region_id)\r\n\t}\r\n\r\n\tgetGameWithOwnerList(tbracket_id) {\r\n\t\treturn this.http.get<GameWithOwnerData[]>(game_ownerURL + '?tbracketid=' + tbracket_id)\r\n\t}\r\n\r\n\tgetGameWithMatchupDataList(tbracket_id) {\r\n\t\treturn this.http.get<GameWithOwnerData[]>(game_matchupURL + '?tbracketid=' + tbracket_id)\r\n\t}\r\n\r\n\t//method to return all games with owner info for a particular bracket\r\n\tgetNewGameWithMatchupDataList(tbracket_id) {\r\n\t\treturn this.http.get<NewGameWithOwnerData[]>(new_game_matchupURL + '?tbracketid=' + tbracket_id)\r\n\t}\r\n\r\n\tupdateGame(game) {\r\n\t\treturn this.http.patch<GameData>(gameUrl + game.id + '/', JSON.stringify(game), this.getHttpOptions())\r\n\t}\r\n\r\n\tresetGame(id) {\r\n\t\treturn this.http.get<GameData>(gameUrl + id + '/reset/', this.getHttpOptions())\r\n\t}\r\n\r\n\tresetAllGames() {\r\n\t\treturn this.http.get<GameData[]>(gameUrl + 'reset_all/', this.getHttpOptions())\r\n\t}\r\n\r\n\treplayAllGames() {\r\n\t\treturn this.http.get<GameData[]>(gameUrl + 'replay_all/', this.getHttpOptions())\r\n\t}\r\n\r\n\tisFinalFour() {\r\n\t\treturn this.http.get<GameData[]>(gameUrl + 'final_four/')\r\n\t}\r\n\r\n\tgetGamesSpreadNoScore(tround_id) {\r\n\t\treturn this.http.get<GameData[]>(gameUrl + '?tround=' + tround_id + '&spread_set_no_score')\r\n\t}\r\n\r\n\temailGamesToOwners(tbracket_id, tround_id) {\r\n\t\treturn this.http.get<GameData[]>(gameUrl + 'email_spreads_to_owners/?tround=' + tround_id + '&tbracketid=' + tbracket_id)\r\n\t}\r\n\r\n\t// helper function to build the HTTP headers\r\n\tgetHttpOptions() {\r\n\treturn {\r\n\t\theaders: new HttpHeaders({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': 'JWT ' + this._userService.token,\r\n\t\t})\r\n\t};\r\n\t} // end getHttpOptions()\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { IUserData } from '../shared/interfaces';\r\n\r\nimport { Store } from 'redux';\r\nimport { AppStore } from '../app.store';\r\nimport { AppState } from '../app.state';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IsAdminGuard implements CanActivate {\r\n\r\n\tprivate currentUser : IUserData;\r\n\r\n\tconstructor (\r\n\r\n\t\t@Inject(AppStore) private store: Store<AppState>\r\n\t    \r\n\t    )\r\n\r\n\t\t{\r\n\t      store.subscribe(() => this.readState());\r\n\t      this.readState(); \r\n\t    }\r\n\r\n\r\n\tcanActivate(\r\n\tnext: ActivatedRouteSnapshot,\r\n\tstate: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n\t\t// Check to see if is_staff is equal to 1, if yes return True\r\n\t\tif (this.currentUser) {\r\n\t\t\treturn (this.currentUser.is_staff == 1);\r\n\t\t}\r\n\t\telse return false;\r\n\t}\r\n\r\n\t// Redux store methods\r\n\treadState() {\r\n\t\tconst state: AppState = this.store.getState() as AppState;\r\n\t\tthis.currentUser = state.currentUser;\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { MatchupData, MatchupLastGameData } from '../shared/interfaces';\r\n\r\n//entryUrl is base url for matchups table end point\r\nconst matchupUrl = '/api/matchups/';\r\nconst matchupLastGameUrl = '/api/matchups_last_game/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MatchupService {\r\n\r\n\tconstructor(private http: HttpClient) { }\r\n\r\n\t//method to retrieve entry details list for a player\r\n\tgetMatchupDetailsListByGame(id) {\r\n\t\treturn this.http.get<MatchupData[]>(matchupUrl + '?gameid=' + id)\r\n\t\t}\r\n\r\n\tgetMatchupsDetailsByBracketAndGame(b_id, g_id) {\r\n\t\treturn this.http.get<MatchupData>(matchupUrl + '?tbracketid=' + b_id + '&gameid=' + g_id)\r\n\t}\r\n\r\n\tgetMatchupLastGame(b_id, og_id) {\r\n\t\treturn this.http.get<MatchupLastGameData>(matchupLastGameUrl + '?tbracketid=' + b_id + '&orig_teamid=' + og_id)\r\n\t}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of, pipe } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\nimport { UserService } from './user.service';\r\nimport { IUserData } from '../shared/interfaces';\r\n\r\n//userUrl is base url for users table end point\r\nconst userUrl = '/api/users/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlayerService {\r\n\r\n  constructor(private http: HttpClient, private _userService: UserService) { }\r\n\r\n  //method to retrieve entire user list\r\n  getList() {\r\n\t\treturn this.http.get<IUserData[]>(userUrl)\r\n\t}\r\n\r\n  // method to retrieve entire user list except user with id = id parameter\r\n  getListOtherThan(id) {\r\n    return this.http.get<IUserData[]>(userUrl)\r\n      .pipe(\r\n        map(users => users.filter(user => user.id != id))\r\n        )\r\n  }\r\n\r\n  //method to retrieve individual user\r\n  getPlayer(id) {\r\n    return this.http.get<IUserData>(userUrl + id + '/')\r\n  }\r\n\r\n  deletePlayer(id, token) {\r\n    return this.http.delete<IUserData>(userUrl + id + '/', this.getHttpOptions())\r\n  }\r\n\r\n  updatePlayer(player) {\r\n    return this.http.patch<IUserData>(userUrl + player.id + '/', JSON.stringify(player), this.getHttpOptions())\r\n  }\r\n\r\n  // helper function to build the HTTP headers\r\n  getHttpOptions() {\r\n    return {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'JWT ' + this._userService.token,\r\n      })\r\n    };\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { RegionData } from '../shared/interfaces';\r\n\r\nconst regionUrl = '/api/regions/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegionService {\r\n\r\n\tconstructor(private http: HttpClient) { }\r\n\r\n\t//method to retrieve game details for a particular game\r\n\tgetRegionDetails(id) {\r\n\t\treturn this.http.get<RegionData>(regionUrl + id + '/')\r\n\t}\r\n\t\r\n\t//method to retrieve list of games\r\n\tgetRegionList() {\r\n\t\treturn this.http.get<RegionData[]>(regionUrl)\r\n\t}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SorterService {\r\n\r\n\tconstructor() { }\r\n\r\n\tproperty: string = null;\r\n\tdirection: number = 1;\r\n\r\n    sort(collection: any[], prop: any) {\r\n        this.property = prop;\r\n        this.direction = (this.property === prop) ? this.direction * -1 : 1;\r\n\r\n        collection.sort((a: any,b: any) => {\r\n            let aVal: any;\r\n            let bVal: any;\r\n            \r\n            //Handle resolving complex properties such as 'state.name' for prop value\r\n            if (prop && prop.indexOf('.') > -1) {\r\n              aVal = this.resolveProperty(prop, a);\r\n              bVal = this.resolveProperty(prop, b);\r\n            }\r\n            else {            \r\n              aVal = a[prop];\r\n              bVal = b[prop];\r\n            }\r\n            \r\n            //Fix issues that spaces before/after string value can cause such as ' San Francisco'\r\n            if (this.isString(aVal)) aVal = aVal.trim().toUpperCase();\r\n            if (this.isString(bVal)) bVal = bVal.trim().toUpperCase();\r\n          \r\n            if(aVal === bVal){\r\n                return 0;\r\n            }\r\n            else if (aVal > bVal){\r\n                return this.direction * -1;\r\n            }\r\n            else {\r\n                return this.direction * 1;\r\n            }\r\n        });\r\n    }\r\n    \r\n    isString(val: any) : boolean {\r\n      return (val && (typeof val === 'string' || val instanceof String));\r\n    }\r\n\r\n    resolveProperty(path: string, obj: any) {\r\n      return path.split('.').reduce(function(prev, curr) {\r\n          return (prev ? prev[curr] : undefined)\r\n      }, obj || self)\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { TBracketData } from '../shared/interfaces';\r\nimport { UserService } from './user.service';\r\n\r\n//tbracketUrl is base url for users table end point\r\nconst tbracketUrl = '/api/tbrackets/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TBracketService {\r\n\r\n\tconstructor(private http: HttpClient, private _userService: UserService) { }\r\n\r\n\t//method to retrieve entire bracket list\r\n\tgetList() {\r\n\t\treturn this.http.get<TBracketData[]>(tbracketUrl)\r\n\t}\r\n\r\n\t//method to retrieve entire bracket list with player's assigned tbrackets first\r\n\tgetListWithPlayer(playerid) {\r\n\t\treturn this.http.get<TBracketData[]>(tbracketUrl + '?playerid=' + playerid)\r\n\t}\r\n\r\n\t//method to retrieve individual bracket\r\n  \tgetTbracket(id) {\r\n    \treturn this.http.get<TBracketData>(tbracketUrl + id + '/')\r\n  \t}\r\n\r\n  \tcreateTbracket(tbracket, token) {\r\n    return this.http.post<TBracketData>(tbracketUrl, JSON.stringify(tbracket), this.getHttpOptions())\r\n\t}\r\n\r\n\tdeleteTbracket(id, token) {\r\n\t\treturn this.http.delete<TBracketData>(tbracketUrl + id + '/', this.getHttpOptions())\r\n\t}\r\n\r\n\treassignTbracket(id, token) {\r\n\t\treturn this.http.get<TBracketData>(tbracketUrl + id + '/reassign/', this.getHttpOptions())\r\n\t}\r\n\r\n\tresetTbracket(id) {\r\n\t\treturn this.http.get<TBracketData>(tbracketUrl + id + '/reset/', this.getHttpOptions())\r\n\t}\r\n\r\n\t// helper function to build the HTTP headers\r\n\tgetHttpOptions() {\r\n\t\treturn {\r\n\t\t  headers: new HttpHeaders({\r\n\t\t    'Content-Type': 'application/json',\r\n\t\t    'Authorization': 'JWT ' + this._userService.token,\r\n\t\t  })\r\n\t\t};\r\n\t}\r\n\r\n}","//user-resolver.ts\r\n\r\n// This class allows for the processing of the UserService method before the\r\n// Home Component is rendered so that all information needed by the view is\r\n// retrieved prior to display\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from './user.service';\r\nimport { IUserData } from '../shared/interfaces';\r\n\r\n@Injectable()\r\n\r\nexport class UserResolver implements Resolve<Observable<any>> {\r\n\tprivate loggedInUser: IUserData;\r\n\r\n\tconstructor (private _userService: UserService) { }\r\n\r\n\tresolve() : Observable<any> {\r\n\t\t//console.log(\"Resolver returning...\");\r\n\t\treturn this._userService.getLoggedInUser()\r\n\t}\r\n}\r\n","// user.actions.ts\r\n\r\nimport { Action, ActionCreator } from 'redux';\r\nimport { IUserData } from '../shared/interfaces';\r\n\r\n/**\r\n * UserActions specifies action creators concerning Users\r\n */\r\nexport const SET_CURRENT_USER = '[User] Set Current';\r\nexport interface SetCurrentUserAction extends Action {\r\n  user: IUserData;\r\n}\r\nexport const setCurrentUser: ActionCreator<SetCurrentUserAction> =\r\n  (user) => ({\r\n    type: SET_CURRENT_USER,\r\n    user: user\r\n  });","// users.reducer.ts\r\n\r\nimport { Reducer, Action } from 'redux';\r\nimport { createSelector } from 'reselect';\r\nimport { IUserData } from '../shared/interfaces';\r\nimport * as UserActions from './user.actions';\r\nimport { AppState } from '../app.state';\r\n\r\nconst initialState: AppState = { currentUser: null };\r\n\r\nexport const UserReducer: Reducer<AppState> =\r\n  (state: AppState = initialState, action: Action): AppState => {\r\n  switch (action.type) {\r\n    case UserActions.SET_CURRENT_USER:\r\n    const user: IUserData = (<UserActions.SetCurrentUserAction>action).user;\r\n      return {\r\n        currentUser: user\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { PlayerService } from './player.service';\r\nimport { IUserData } from '../shared/interfaces';\r\n\r\n//userUrl is base url for users table end point\r\nconst userUrl = '/api/users/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n\t// http options used for making API calls\r\n\tprivate httpOptions: any;\r\n\r\n\t// the actual JWT token\r\n\tpublic token: string;\r\n\r\n\t// the token expiration date\r\n\tpublic token_expires: Date;\r\n\r\n\t// the authenticated/logged in user variables\r\n  public id: number;\r\n\tpublic username: string;\r\n\tpublic email: string;\r\n  public loggedInUser: IUserData;\r\n\r\n\t// error messages received from the login attempt\r\n\tpublic errors: any = [];\r\n\r\n  // use to communicate to components whethe API calls are being made\r\n  public loading: boolean;\r\n\r\n  constructor(private http: HttpClient) {\r\n  \tthis.httpOptions = {\r\n  \t\theaders: new HttpHeaders({'Content-Type': 'application/json'})\r\n  \t} }\r\n\r\n  // Uses http.post() to get an auth token from djangorestframework-jwt endpoint\r\n  public login(user) {\r\n    // this.http.post(baseUrl+'/api-token-auth/', JSON.stringify(user), this.httpOptions).subscribe(\r\n    this.http.post('/api/api-token-auth/', JSON.stringify(user), this.httpOptions).subscribe(\r\n      data => {\r\n        this.updateData(data['token']);\r\n        // console.log(\"login method called\");\r\n      },\r\n      err => {\r\n        this.errors = err['error'];\r\n      }\r\n    );\r\n  }\r\n\r\n  // Refreshes the JWT token, to extend the time the user is logged in\r\n  public refreshToken() {\r\n    this.loading = true;\r\n    this.http.post('/api/api-token-refresh/', JSON.stringify({token: this.token}), this.httpOptions).subscribe(\r\n      data => {\r\n        this.updateData(data['token']);\r\n        // this.getLoggedInUser().subscribe(data => {\r\n        //   this.loggedInUser = data});\r\n        this.loading = false;\r\n      },\r\n      err => {\r\n        this.errors = err['error'];\r\n      }\r\n    );\r\n    // console.log(\"refreshToken method called\");\r\n  }\r\n\r\n  public logout() {\r\n    this.token = null;\r\n    this.token_expires = null;\r\n    this.username = null;\r\n  }\r\n \r\n  private updateData(token) {\r\n    this.token = token;\r\n    this.errors = [];\r\n \r\n    // decode the token to read the username and expiration timestamp\r\n    const token_parts = this.token.split(/\\./);\r\n    const token_decoded = JSON.parse(window.atob(token_parts[1]));\r\n    this.token_expires = new Date(token_decoded.exp * 1000);\r\n    this.username = token_decoded.username;\r\n    this.email = token_decoded.email;\r\n    this.id = token_decoded.user_id;\r\n    // console.log(\"This is the JWT token authenticated user:\", token_decoded);\r\n  }\r\n\r\n  public getLoggedInUser() {\r\n    // this function returns an http obervable for user-resolver.ts\r\n    return this.http.get<IUserData>(userUrl + this.id + '/');\r\n  }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--home.component.html-->\\r\\n<br>\\r\\n\\r\\n<!-- UNCOMMENT THIS TO SHOW ROSTER ON HOME PAGE -->\\r\\n<!-- <app-roster *ngIf=\\\"roster\\\" [loggedInUser] = \\\"loggedInUser\\\" [roster] = \\\"roster\\\"></app-roster> -->\\r\\n\\r\\n\\r\\n<!-- UNCOMMENT THIS TO SHOW STANDINGS ON HOME PAGE -->\\r\\n<app-standings-nav></app-standings-nav>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { UserService } from '../core/user.service';\r\nimport { PlayerService } from '../core/player.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IUserData } from '../shared/interfaces';\r\n\r\nimport { Store } from 'redux';\r\nimport { AppStore } from '../app.store';\r\nimport { AppState } from '../app.state';\r\nimport * as UserActions from '../core/user.actions';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  loggedInUser : IUserData;\r\n  private currentUser : IUserData;\r\n  roster: IUserData[];\r\n\r\n  constructor(\r\n    private _userService: UserService,\r\n    private _playerService: PlayerService,\r\n    private route: ActivatedRoute,\r\n    // Using Redux store to capture logged in user details\r\n    @Inject(AppStore) private store: Store<AppState>\r\n    ) {\r\n      store.subscribe(() => this.readState());\r\n      this.readState(); \r\n    }\r\n  \r\n  ngOnInit() {\r\n    this.loggedInUser = this.route.snapshot.data.loggedInUser;\r\n    this._userService.loggedInUser = this.loggedInUser;\r\n    this.setCurrentUser(this.loggedInUser);\r\n    // console.log(\"The current Redux user is\", this.currentUser)\r\n\r\n    // Retrieve roster for passing to child roster.component\r\n    this._playerService.getListOtherThan(this.loggedInUser.id).subscribe(data => {\r\n      this.roster = data;\r\n    });\r\n  }\r\n\r\n  // Redux store methods\r\n  readState() {\r\n    const state: AppState = this.store.getState() as AppState;\r\n    this.currentUser = state.currentUser;\r\n  }\r\n\r\n  setCurrentUser(user: IUserData) {\r\n    this.store.dispatch(UserActions.setCurrentUser(user))\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ291dC9sb2dvdXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\r\\n  Logging Out!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.css']\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUtZGV0YWlscy9wcm9maWxlLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"  <!--profile-details.component.html-->\\r\\n<div class=\\\"container-fluid\\\">\\r\\n\\t<div class = \\\"row\\\">\\r\\n\\t\\t<div class = \\\"col-xs col-md-3\\\">\\r\\n\\t\\t\\t<div class = \\\"row justify-content-start\\\">\\r\\n\\t\\t\\t\\t<div class = \\\"col-xs-auto\\\"><strong>Name:&nbsp;</strong></div>\\r\\n\\t\\t\\t\\t<div class = \\\"col\\\" class=\\\"text-muted\\\">{{ _player.full_name }}</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class = \\\"row justify-content-start\\\">\\r\\n\\t\\t\\t\\t<div class = \\\"col-xs-auto\\\"><strong>Email:&nbsp;</strong></div>\\r\\n\\t\\t\\t\\t<div class = \\\"col\\\" class=\\\"text-muted\\\">{{ _player.email }}</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class = \\\"row justify-content-start\\\">\\r\\n\\t\\t\\t\\t<div class = \\\"col-xs-auto\\\"><strong>Number of Entries:&nbsp;</strong></div>\\r\\n\\t\\t\\t\\t<div class = \\\"col\\\" class=\\\"text-muted\\\">{{ _player.num_entries }}</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class = \\\"row justify-content-start\\\">\\r\\n\\t\\t\\t\\t<div class = \\\"col-xs-auto\\\"><strong>(S)ame or (D)ifferent Brackets:&nbsp;</strong></div>\\r\\n\\t\\t\\t\\t<div class = \\\"col\\\" class=\\\"text-muted\\\" >{{ player.num_entries == 1 ? '-' : player.mult_entry_type }}</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class = \\\"row justify-content-start\\\">\\r\\n\\t\\t\\t\\t<div class = \\\"col-xs-auto\\\"><strong>Receive Game Result email updates?&nbsp;</strong></div>\\r\\n\\t\\t\\t\\t<div class = \\\"col\\\" class=\\\"text-muted\\\" >{{ player.gm_updates ? 'Yes' : 'No' }}</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class = \\\"row justify-content-start\\\">\\r\\n\\t\\t\\t\\t<div class = \\\"col-xs-auto\\\"><strong>Paid up?:</strong></div>\\r\\n\\t\\t\\t\\t<div class = \\\"col\\\" [ngClass] = \\\"{'text-muted': player.paid, 'text-danger': !player.paid}\\\">\\r\\n\\t\\t\\t\\t\\t{{ player.paid ? 'YES - Thank you!' : 'Due($' + player.num_entries*20 + '.00)'  }}</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!-- UNCOMMENT BELOW DURING REGISTRATION SO USERS CAN DELETE/EDIT THEIR PROFILE INFO -->\\r\\n<!-- \\t\\t\\t<div class = \\\"row top10\\\">\\r\\n\\t\\t\\t\\t<div class = \\\"col-xs-auto\\\">\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-secondary custom m-2\\\" (click)=\\\"openModal(template)\\\">Delete</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class = \\\"col-xs-auto\\\">\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary custom m-2\\\" (click)=\\\"openProfileModal()\\\">Edit</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div> -->\\r\\n\\t\\t\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf = \\\"!player.paid\\\" \\r\\n\\t\\tclass = \\\"col-xs col-md-4 justify-content-start align-self-center rounded border border-danger text-muted pl-1 mt-2\\\">\\r\\n\\t\\t\\t\\t<p class=\\\"mb-2\\\"><strong>Payment Options:</strong></p>\\r\\n\\t\\t\\t\\t<p class=\\\"mb-2\\\">1) <i class=\\\"fa fa-paypal\\\"></i> via PayPal : <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\"\\r\\n\\t\\t\\t\\t\\thref=\\\"https://www.paypal.me/PaulMaurer1\\\">www.paypal.me/PaulMaurer1</a></p>\\r\\n\\t\\t\\t\\t<p class=\\\"mb-2\\\">2) <i class=\\\"fa fa-vimeo-square\\\"></i> via Venmo: <strong>@Paul-Maurer1</strong></p>\\r\\n\\t\\t\\t\\t<p class=\\\"mb-2\\\">3) Send <i class=\\\"fa fa-usd\\\"></i> to:\\r\\n\\t\\t\\t\\tPaul Maurer, 3227 N. Seminary Avenue, Chicago, IL 60657</p>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class = \\\"col hidden-xs\\\"></div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<ng-template #template>\\r\\n\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t<h4 class=\\\"modal-title pull-left\\\">Delete Profile</h4>\\r\\n\\t\\t<button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\tAre you sure you want to delete your Profile?\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t<button class=\\\"btn btn-secondary custom\\\" \\r\\n\\t\\t\\t(click)=\\\"modalRef.hide(); delete()\\\">Delete</button>\\r\\n\\t</div>\\r\\n</ng-template>\"","import { Component, OnInit, Input, TemplateRef } from '@angular/core';\r\nimport { IUserData } from '../shared/interfaces';\r\nimport { UserService } from '../core/user.service';\r\nimport { PlayerService } from '../core/player.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { ProfileFormModalComponent } from '../profile-form-modal/profile-form-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-profile-details',\r\n  templateUrl: './profile-details.component.html',\r\n  styleUrls: ['./profile-details.component.css']\r\n})\r\nexport class ProfileDetailsComponent implements OnInit {\r\n\t_player: IUserData;\r\n\t@Input() get player(): IUserData {\r\n\t\treturn this._player;\r\n\t}\r\n\r\n\tset player(value: IUserData) {\r\n\t\tif (value) {\r\n\t\t\tthis._player = value;\r\n\t\t}\r\n\t}\r\n\tmodalRef: BsModalRef;\r\n\tbsModalRef: BsModalRef;\r\n\r\n\tconstructor(private _playerService: PlayerService,\r\n\t  private _userService: UserService, \r\n\t  private router: Router,\r\n\t  private modalService: BsModalService,\r\n\t  private bsModalService: BsModalService,) { }\r\n\r\n\tngOnInit() {\r\n\t}\r\n\r\n\topenModal(template: TemplateRef<any>) {\r\n\tthis.modalRef = this.modalService.show(template);\r\n\t}\r\n\r\n\tdelete() {\r\n\t\tthis._playerService.deletePlayer(this._player.id, this._userService.token).subscribe((data) => {\r\n\t\t\tconsole.log(\"delete successful\");\r\n\t\t});\r\n\t\tthis.router.navigate(['/logout']);\r\n\t}\r\n\r\n\topenProfileModal() {\r\n\t    const initialState = {\r\n\t      id: this._player.id,\r\n\t      profile_user: this._player\r\n\t    };\r\n\t    this.bsModalRef = this.bsModalService.show(ProfileFormModalComponent, {initialState});\r\n\r\n\t    this.bsModalService.onHidden.subscribe((reason: string) => {\r\n\t    \t// Upon modal being closed run these actions\r\n\t        // const _reason = reason ? `, dismissed by ${reason}` : '';\r\n\t        // console.log (\"Profile modal was closed \", _reason);\r\n\t        // Update logged in User against database after modal closes\r\n\t        this._userService.getLoggedInUser().subscribe(data => {\r\n\t        \tthis._player = data;\r\n\t        })\r\n\t    })\r\n\t\r\n\t}\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUtZm9ybS1tb2RhbC9wcm9maWxlLWZvcm0tbW9kYWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!-- profile-form-modal.component.html -->\\r\\n\\r\\n<div class=\\\"modal-header\\\">\\r\\n\\t<h4 class=\\\"modal-title pull-left\\\">{{title}} {{profile_user.full_name}}</h4>\\r\\n\\t<button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"bsModalRef.hide()\\\">\\r\\n\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t</button>\\r\\n</div>\\r\\n<form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"submitForm(profileForm.value)\\\">\\r\\n\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t<div class=\\\"container\\\">\\r\\n\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"first_name\\\">First Name</label>\\r\\n\\t\\t\\t\\t    <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n\\t\\t\\t\\t    id=\\\"first_name\\\" [formControl] = \\\"first_name\\\"\\r\\n\\t\\t\\t\\t    [class.is-invalid] = \\\"first_name.invalid\\\">\\r\\n\\t\\t\\t\\t    <span *ngIf=\\\"first_name.invalid\\\" class=\\\"text-danger\\\">\\r\\n    \\t\\t\\t\\t\\tFirst Name is required\\r\\n  \\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"last_name\\\">Last Name</label>\\r\\n\\t\\t\\t\\t    <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n\\t\\t\\t\\t    id=\\\"last_name\\\" [formControl] = \\\"last_name\\\"\\r\\n\\t\\t\\t\\t    [class.is-invalid] = \\\"last_name.invalid\\\">\\r\\n\\t\\t\\t\\t    <span *ngIf=\\\"last_name.invalid\\\" class=\\\"text-danger\\\">\\r\\n    \\t\\t\\t\\t\\tLast Name is required\\r\\n  \\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class = \\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"email\\\">Email</label>\\r\\n\\t\\t\\t    <input type=\\\"email\\\" class=\\\"form-control\\\"\\r\\n\\t\\t\\t    id=\\\"email\\\" [formControl] = \\\"email\\\"\\r\\n\\t\\t\\t    [class.is-invalid] = \\\"email.invalid\\\">\\r\\n\\t\\t\\t    <span *ngIf=\\\"email.invalid && email.errors.required\\\" class=\\\"text-danger\\\">\\r\\n    \\t\\t\\t\\t\\tEmail is required\\r\\n  \\t\\t\\t\\t</span>\\r\\n  \\t\\t\\t\\t<span *ngIf=\\\"email.invalid && email.errors.email\\\" class=\\\"text-danger\\\">\\r\\n    \\t\\t\\t\\t\\tEmail must be a valid address\\r\\n  \\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"num_entries\\\">Number of Entries</label>\\r\\n\\t\\t\\t\\t    <input type=\\\"number\\\" min = \\\"1\\\" max = \\\"4\\\" class=\\\"form-control\\\" #entries\\r\\n\\t\\t\\t\\t    id=\\\"num_entries\\\" [formControl] = \\\"num_entries\\\"\\r\\n\\t\\t\\t\\t    [class.is-invalid] = \\\"num_entries.invalid\\\">\\r\\n\\t\\t\\t\\t    <span *ngIf=\\\"num_entries.invalid && num_entries.errors.required\\\" class=\\\"text-danger\\\">\\r\\n    \\t\\t\\t\\t\\tNumber of Entries is required\\r\\n  \\t\\t\\t\\t\\t</span>\\r\\n  \\t\\t\\t\\t\\t<span *ngIf=\\\"num_entries.invalid && (num_entries.errors.minlength || num_entries.errors.maxlength)\\\" class=\\\"text-danger\\\">\\r\\n    \\t\\t\\t\\t\\tMust submit a number between 1-4\\r\\n  \\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" *ngIf=\\\"entries.value>1\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"mult_entry_type\\\">(S)ame or (D)ifferent</label>\\r\\n\\t\\t\\t\\t    <select class=\\\"form-control\\\"\\r\\n\\t\\t\\t\\t    id=\\\"mult_entry_type\\\" [formControl] = \\\"mult_entry_type\\\">\\r\\n\\t\\t\\t\\t    \\t<option>S</option>\\r\\n\\t\\t\\t\\t    \\t<option>D</option>\\r\\n\\t\\t\\t\\t    </select>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<div class = \\\"custom-control custom-checkbox\\\">\\r\\n\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\"\\r\\n\\t\\t\\t\\t    id=\\\"gm_updates\\\" [formControl] = \\\"gm_updates\\\">\\r\\n\\t\\t\\t\\t    <label class=\\\"custom-control-label\\\" for=\\\"gm_updates\\\">\\r\\n\\t\\t\\t\\t\\t    Receive email for game updates?\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t<button type=\\\"submit\\\" id=\\\"submit\\\" class=\\\"btn btn-success\\\" \\r\\n\\t\\t\\t[disabled]=\\\"!profileForm.valid\\\"\\r\\n\\t\\t\\t(click)=\\\"bsModalRef.hide()\\\">{{closeBtnName}}</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>  <!-- end modal-body-->\\r\\n</form>\"","// profile-form-modal.component.ts\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { FormBuilder, FormGroup, AbstractControl, Validators } from '@angular/forms';\r\nimport { IUserData } from '../shared/interfaces';\r\nimport { PlayerService } from '../core/player.service';\r\n\r\n@Component({\r\n  selector: 'app-profile-form-modal',\r\n  templateUrl: './profile-form-modal.component.html',\r\n  styleUrls: ['./profile-form-modal.component.css']\r\n})\r\nexport class ProfileFormModalComponent implements OnInit {\r\n\ttitle: string;\r\n\tcloseBtnName: string;\r\n\tprofile_user: IUserData;\r\n\tprofileForm: FormGroup;\r\n\tfirst_name : AbstractControl;\r\n\tlast_name : AbstractControl;\r\n\temail : AbstractControl;\r\n\tnum_entries : AbstractControl;\r\n\tmult_entry_type : AbstractControl;\r\n  gm_updates : AbstractControl;\r\n\r\n  constructor(\r\n  \tpublic bsModalRef: BsModalRef,\r\n  \tfb: FormBuilder, \r\n  \tprivate _playerService: PlayerService\r\n  \t) {\r\n  \t\r\n  \tthis.title = \"Update profile for \"\r\n  \tthis.closeBtnName = \"Update\";\r\n\r\n  \tthis.profileForm = fb.group({\r\n\t\t\t'first_name' : ['', Validators.required],\r\n\t\t\t'last_name' : ['', Validators.required],\r\n\t\t\t'email' : ['', Validators.compose([Validators.required, Validators.email])],\r\n\t\t\t'num_entries' : ['', Validators.compose([Validators.required, Validators.maxLength(4), Validators.minLength(1)])],\r\n\t\t\t'mult_entry_type' : ['', Validators.required],\r\n      'gm_updates' : [],\r\n\t\t});\r\n    \r\n  \tthis.first_name = this.profileForm.controls['first_name']; // allows for other properties, e.g. error values\r\n  \tthis.last_name  = this.profileForm.controls['last_name'];\r\n  \tthis.email      = this.profileForm.controls['email'];\r\n  \tthis.num_entries = this.profileForm.controls['num_entries'];\r\n  \tthis.mult_entry_type = this.profileForm.controls['mult_entry_type'];\r\n    this.gm_updates = this.profileForm.controls['gm_updates'];\r\n    }\r\n\r\n  ngOnInit() {\r\n  \tthis.profileForm.patchValue(this.profile_user);\r\n  }\r\n\r\n  submitForm(value: string) {\r\n  \tthis.profile_user.first_name = this.first_name.value;\r\n  \tthis.profile_user.last_name = this.last_name.value;\r\n  \tthis.profile_user.email = this.email.value.toLowerCase();\r\n  \tthis.profile_user.num_entries = this.num_entries.value;\r\n  \tthis.profile_user.mult_entry_type = this.mult_entry_type.value;\r\n    this.profile_user.gm_updates = this.gm_updates.value;\r\n    console.log(\"gm_updates = \", this.profile_user.gm_updates);\r\n\r\n  \tthis._playerService.updatePlayer(this.profile_user).subscribe((data) => {\r\n\t\t// console.log(\"Player updated:\", this.profile_user);\r\n\t});\r\n\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--profile.component.html-->\\r\\n<br>\\r\\n<h4>My Info</h4>\\r\\n<app-profile-details [player] = \\\"user\\\"></app-profile-details>\\r\\n<br>\\r\\n<app-team-details [player] = \\\"user\\\"></app-team-details>\\r\\n<br>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { IUserData } from '../shared/interfaces';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\tuser: IUserData; // for passing player info to sub-components (profile-details & profile-edit)\r\n\t\r\n\tconstructor(private route: ActivatedRoute) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.user = this.route.snapshot.data.loggedInUser;\r\n\t}\r\n\r\n\t\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jvc3Rlci10ZXh0Ym94L3Jvc3Rlci10ZXh0Ym94LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-roster-textbox',\r\n  // templateUrl: './roster-textbox.component.html',\r\n  template: `\r\n        Search by Name: <input type=\"text\" [(ngModel)]=\"filter\" />\r\n    `,\r\n  styleUrls: ['./roster-textbox.component.css']\r\n})\r\nexport class RosterTextboxComponent implements OnInit {\r\n\r\n\tprivate _filter: string;\r\n\t\r\n    @Input() get filter() {\r\n        return this._filter;\r\n    }\r\n    \r\n    set filter(val: string) { \r\n        this._filter = val;\r\n        this.changed.emit(this.filter); //Raise changed event\r\n    }\r\n\r\n    @Output() changed: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n\tconstructor() { }\r\n\r\n\tngOnInit() {\r\n\t}\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jvc3Rlci9yb3N0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!--roster.component.html-->\\r\\n<h4>Registrants</h4>\\r\\n<div [class.loader] = \\\"loading\\\">\\r\\n<div class = \\\"d-flex flex-row justify-content-around\\\">\\r\\n\\t<div class = \\\"col d-none d-md-block\\\"></div>\\r\\n\\t<div class = \\\"col col-3-md text-center bg-secondary text-white rounded py-2 mx-1\\\">\\r\\n\\t\\t<p class=\\\"mb-0\\\">People Registered</p>\\r\\n\\t\\t<h1 class=\\\"display-3 m-0\\\">{{_numRegistrants}}</h1>\\r\\n\\t</div>\\r\\n\\t<div class = \\\"col d-none d-md-block\\\"></div>\\r\\n\\t<div class = \\\"col col-3-md text-center bg-secondary text-white rounded py-2 mx-1\\\">\\r\\n\\t\\t<p class=\\\"mb-0\\\">Number of Entries</p>\\r\\n\\t\\t<h1 class=\\\"display-3 m-0\\\">{{_numEntries}}</h1>\\r\\n\\t</div>\\r\\n\\t<div class = \\\"col d-none d-md-block\\\"></div>\\r\\n\\t<div class = \\\"col col-2-md text-center bg-secondary text-white rounded py-2 mx-1\\\">\\r\\n\\t\\t<p class=\\\"mb-0\\\">Number of Brackets</p>\\r\\n\\t\\t<h1 class=\\\"display-4 m-0\\\">{{_numBrackets}}</h1>\\r\\n\\t\\t<small class=\\\"m-0\\\" *ngIf = \\\"_numNeededEntries > 1\\\">({{_numNeededEntries}} more entries for another!)</small>\\r\\n\\t\\t<small class=\\\"m-0\\\" *ngIf = \\\"_numNeededEntries == 1\\\">({{_numNeededEntries}} more entry for another!)</small>\\r\\n\\t</div>\\r\\n\\t<div class = \\\"col d-none d-md-block\\\"></div>\\r\\n</div>\\r\\n<br>\\r\\n<app-roster-textbox (changed)=\\\"filter($event)\\\"></app-roster-textbox>\\r\\n<br>\\r\\n<br>\\r\\n<table class=\\\"table table-sm\\\">\\r\\n\\t<thead>\\r\\n\\t\\t<tr>\\r\\n\\t\\t\\t<th scope=\\\"col\\\">#</th>\\r\\n\\t\\t\\t<th scope=\\\"col\\\" (click)=\\\"sort('last_name')\\\" class=\\\"cursor-pointer\\\">Name\\r\\n\\t\\t\\t\\t<fa *ngIf=\\\"_property=='last_name' && _direction==1\\\" name=\\\"caret-down\\\"></fa>\\r\\n\\t\\t\\t\\t<fa *ngIf=\\\"_property=='last_name' && _direction==-1\\\" name=\\\"caret-up\\\"></fa>\\r\\n\\t\\t\\t</th>\\r\\n\\t\\t\\t<th scope=\\\"col\\\" (click)=\\\"sort('num_entries')\\\" class=\\\"cursor-pointer\\\">Num Entries\\r\\n\\t\\t\\t\\t<fa *ngIf=\\\"_property=='num_entries' && _direction==1\\\" name=\\\"caret-down\\\"></fa>\\r\\n\\t\\t\\t\\t<fa *ngIf=\\\"_property=='num_entries' && _direction==-1\\\" name=\\\"caret-up\\\"></fa>\\r\\n\\t\\t\\t</th>\\r\\n\\t\\t\\t<th scope=\\\"col\\\">(S)ame/(D)iff</th>\\r\\n\\t\\t\\t<th scope=\\\"col\\\" style=\\\"width: 5%\\\">Edit</th>\\r\\n\\t\\t</tr>\\r\\n\\t</thead>\\r\\n\\t<tbody>\\r\\n\\t\\t<tr on-mouseover=\\\"hoveredIndex=_loggedInUser.id\\\" on-mouseleave=\\\"hoveredIndex=null\\\">\\r\\n\\t\\t\\t<th scope=\\\"row\\\">1</th>\\r\\n\\t\\t\\t<td><strong>{{ _loggedInUser.full_name }}*</strong></td>\\r\\n\\t\\t\\t<td><strong>{{ _loggedInUser.num_entries }}</strong></td>\\r\\n\\t\\t\\t<td><strong>{{ _loggedInUser.num_entries == 1 ? '-' : _loggedInUser.mult_entry_type }}</strong></td>\\r\\n\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t<fa name=\\\"edit\\\" *ngIf=\\\"hoveredIndex==_loggedInUser.id\\\" class = \\\"cursor-pointer\\\" tooltip = \\\"Edit Profile\\\" (click)=\\\"openProfileModal()\\\"></fa>\\t\\t\\t\\t\\r\\n\\t\\t\\t</td>\\r\\n\\t\\t</tr>\\r\\n\\t\\t<tr *ngFor = \\\"let player of _filteredRoster; let i = index\\\">\\r\\n\\t\\t\\t<th scope=\\\"row\\\">{{i + 2}}</th>\\r\\n\\t\\t\\t<td>{{ player.full_name }}</td>\\r\\n\\t\\t\\t<td>{{ player.num_entries }}</td>\\r\\n\\t\\t\\t<td>{{ player.num_entries == 1 ? '-' : player.mult_entry_type }}</td>\\r\\n\\t\\t\\t<td></td>\\r\\n\\t\\t</tr>\\r\\n\\t</tbody>\\r\\n</table>\\r\\n<br>\\r\\n</div>\"","import { Component, OnInit, OnChanges, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PlayerService } from '../core/player.service';\r\nimport { UserService } from '../core/user.service';\r\nimport { SorterService } from '../core/sorter.service';\r\nimport { IUserData } from '../shared/interfaces';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { ProfileFormModalComponent } from '../profile-form-modal/profile-form-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-roster',\r\n  templateUrl: './roster.component.html',\r\n  styleUrls: ['./roster.component.css']\r\n})\r\nexport class RosterComponent implements OnInit {\r\n\t_roster: IUserData[];\r\n\t_filteredRoster: IUserData[];\r\n\t_loggedInUser: IUserData; // to capture loggedInUser object from parent component\r\n\thoveredIndex: number; // to user which row a user hovers on\r\n\t_numRegistrants: number; // tally up # of registrations for display at top\r\n\t_numBrackets: number; //tally estimated # of brackets\r\n\t_numEntries: number; //tally up # of entries num bracket calculation\r\n\t_numNeededEntries: number; //# entries needed to complete another bracket\r\n\tloading: boolean;\r\n\t_property: string;\r\n\t_direction: number=1;\r\n\t\r\n\t// Retrieve loggedInUser from parent component\r\n\t@Input() get loggedInUser(): IUserData {\r\n\t\treturn this._loggedInUser;\r\n\t}\r\n\r\n\tset loggedInUser(value: IUserData) {\r\n\t\tif (value) {\r\n\t\t\tthis._loggedInUser = value;\r\n\t\t}\r\n\t}\r\n\r\n\t// Retrieve roster from parent component\r\n\t@Input() get roster(): IUserData[] {\r\n\t\treturn this._roster;\r\n\t}\r\n\r\n\tset roster(value: IUserData[]) {\r\n\t\tif (value) {\r\n\t\t\tthis._filteredRoster = this._roster = value;\r\n\t\t}\r\n\t}\r\n\r\n\t// Modal object to capture content\r\n\tbsModalRef: BsModalRef;\r\n\t\r\n \tconstructor(private _playerService: PlayerService,\r\n \t\tprivate _userService: UserService, \r\n \t\tprivate _modalService: BsModalService,\r\n \t\tprivate router: Router,\r\n \t\tprivate sorterService: SorterService) { }\r\n\r\n\tngOnInit() {\r\n\t\tconsole.log ()\r\n\t\t// this.loading = true;\r\n\t\tthis._numRegistrants = 1; // start at 1 since _loggedInUser counts as 1\r\n\t\tthis._numBrackets = 0;\r\n\t\tthis._numEntries = this._loggedInUser.num_entries; // start numEtnries counter at # that loggedInUser has\r\n\r\n\t\t// Calculate registration stats needed at top of page\r\n\t\tthis._roster.forEach(registrant => {\r\n\t\t\tthis._numRegistrants += 1;\r\n\t\t\tthis._numEntries += registrant.num_entries;\r\n\t\t})\r\n\t\tthis._numBrackets = Math.floor(this._numEntries/16);\r\n\t\tthis._numNeededEntries = (this._numBrackets+1)*16 - this._numEntries\r\n\t\t// this.loading=false;\r\n\t\t// console.log (\"property = \", this._property, \" & direction = \", this._direction);\r\n\t}\r\n\r\n\topenProfileModal() {\r\n\t    const initialState = {\r\n\t      id: this.hoveredIndex,\r\n\t      profile_user: this._loggedInUser\r\n\t    };\r\n\t    // Attempts here to figure out how to extract specific user from this.roster based on hoveredIndex\r\n\t    // console.log(\"Modal is opened for: \", this.roster.map(users => users.find(user => user.id == this.hoveredIndex)));\r\n\t    // console.log(\"Modal is opened for: \", this.roster, this.roster.find(user => user.id == this.hoveredIndex));\r\n\t    // console.log(\"Modal is opened for: \", this.roster.forEach(user => {if(user.id == this.hoveredIndex) return user}));\r\n\t    this.bsModalRef = this._modalService.show(ProfileFormModalComponent, {initialState});\r\n\r\n\t    this._modalService.onHidden.subscribe((reason: string) => {\r\n\t    \t// Upon modal being closed run these actions\r\n\t        //const _reason = reason ? `, dismissed by ${reason}` : '';\r\n\t        //console.log (\"Profile modal was closed \", _reason);\r\n\t        // Update logged in User against database after modal closes\r\n\t        this._userService.getLoggedInUser().subscribe(data => {\r\n\t        \tthis._loggedInUser = data;\r\n\t        })\r\n\t    })\r\n\t}\r\n\r\n\tfilter(data: string) {\r\n\t\t// Function that filters the Roster list based on what a user types in the roster-textbox component\r\n        if (data) {\r\n        \tthis._filteredRoster = this._roster.filter(item => item.full_name.toLowerCase().indexOf(data.toLowerCase()) > -1);\r\n        } else {\r\n\t\t\tthis._filteredRoster = this._roster;\r\n        }\r\n    }\r\n\r\n    sort(prop: string) {\r\n    \tthis.sorterService.sort(this._filteredRoster, prop);\r\n    \tthis._property = prop;\r\n    \tthis._direction = (this._property === prop) ? this._direction * -1 : 1;\r\n    \t// console.log (\"property = \", this._property, \" & direction = \", this._direction);\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0YW5kaW5ncy1uYXYvc3RhbmRpbmdzLW5hdi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!-- dtandings-nav.component.html -->\\r\\n\\r\\n<h4>Standings</h4>\\r\\n<small class=\\\"text-muted\\\">(Click to see bracket)</small>\\r\\n<tabset type=\\\"pills\\\">\\r\\n\\t<tab *ngFor = \\\"let tbracket of _tbracketList\\\" heading=\\\"{{ tbracket.name }}\\\">\\r\\n\\t\\t<app-standings [bracket]=\\\"tbracket.id\\\"></app-standings>\\r\\n\\t</tab>\\r\\n</tabset>\\r\\n<br>\"","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { TBracketService } from '../core/tbracket.service';\r\nimport { EntryService } from '../core/entry.service';\r\nimport { UserService } from '../core/user.service';\r\nimport { TBracketData } from '../shared/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-standings-nav',\r\n  templateUrl: './standings-nav.component.html',\r\n  styleUrls: ['./standings-nav.component.css']\r\n})\r\nexport class StandingsNavComponent implements OnInit {\r\n\t_tbracketList: TBracketData[];\r\n\r\n\tconstructor(\r\n\t\tprivate _tbracketService: TBracketService,\r\n\t\tprivate _userService: UserService\r\n\t\t)\t{ }\r\n\r\n\tngOnInit() {\r\n\r\n\t// Retrieve list of brackets for bracket navbar\r\n\tthis._tbracketService.getListWithPlayer(this._userService.id).subscribe(data => {\r\n\t\t\tthis._tbracketList = data;\r\n\t\t});\r\n\r\n\t} //end ngOnInit\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0YW5kaW5ncy9zdGFuZGluZ3MuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<br>\\r\\n<div [class.loader] = \\\"loading\\\">\\r\\n<table class=\\\"table table-sm\\\" *ngIf=\\\"_regionList\\\">\\r\\n\\t<thead>\\r\\n\\t\\t<tr>\\r\\n\\t\\t\\t<th scope=\\\"col\\\">Name</th>\\r\\n\\t\\t\\t<th scope=\\\"col\\\" class=\\\"text-center\\\" style=\\\"width: 15%\\\"># Active Teams</th>\\r\\n\\t\\t\\t<th scope=\\\"col\\\">{{ _regionList[0].name }}</th>\\r\\n\\t\\t\\t<th scope=\\\"col\\\">{{ _regionList[1].name }}</th>\\r\\n\\t\\t\\t<th scope=\\\"col\\\">{{ _regionList[2].name }}</th>\\r\\n\\t\\t\\t<th scope=\\\"col\\\">{{ _regionList[3].name }}</th>\\r\\n\\t\\t</tr>\\r\\n\\t</thead>\\r\\n\\t<tbody>\\r\\n\\t\\t<tr *ngFor = \\\"let entry of _standingsList; let i = index\\\" \\r\\n\\t\\t[class.bg-success]=\\\"entry.player_id == _userService.id\\\" \\r\\n\\t\\t[class.text-white]=\\\"entry.player_id == _userService.id\\\">\\r\\n\\t\\t\\t<td >{{ entry.player }}</td>\\r\\n\\t\\t\\t<td class=\\\"text-center\\\">{{ entry.team_count }}</td>\\r\\n\\t\\t\\t<td><span [class.standings-out]=\\\"entry.team_a_status == '(OUT)'\\\">{{ entry.team_a }}\\r\\n\\t\\t\\t\\t<small> {{ entry.team_a_status }}</small></span>\\r\\n\\t\\t\\t</td>\\r\\n\\t\\t\\t<td><span [class.standings-out]=\\\"entry.team_b_status == '(OUT)'\\\">{{ entry.team_b }}\\r\\n\\t\\t\\t\\t<small> {{ entry.team_b_status }}</small></span>\\r\\n\\t\\t\\t</td>\\r\\n\\t\\t\\t<td><span [class.standings-out]=\\\"entry.team_c_status == '(OUT)'\\\">{{ entry.team_c }}\\r\\n\\t\\t\\t\\t<small> {{ entry.team_c_status }}</small></span>\\r\\n\\t\\t\\t</td>\\r\\n\\t\\t\\t<td><span [class.standings-out]=\\\"entry.team_d_status == '(OUT)'\\\">{{ entry.team_d }}\\r\\n\\t\\t\\t\\t<small> {{ entry.team_d_status }}</small></span>\\r\\n\\t\\t\\t</td>\\r\\n\\t\\t</tr>\\r\\n\\t</tbody>\\r\\n</table>\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { EntryStandingsData, RegionData } from '../shared/interfaces';\r\nimport { EntryService } from '../core/entry.service';\r\nimport { UserService } from '../core/user.service';\r\nimport { RegionService } from '../core/region.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-standings',\r\n  templateUrl: './standings.component.html',\r\n  styleUrls: ['./standings.component.css']\r\n})\r\nexport class StandingsComponent implements OnInit {\r\n\r\n\t_standingsList: EntryStandingsData[];\r\n\t_regionList: RegionData[];\r\n\t_bracketId: number;\r\n\tloading: boolean;\r\n\r\n\t@Input() get bracket(): number {\r\n\t\treturn this._bracketId;\r\n\t}\r\n\tset bracket(value: number) {\r\n\t\tif (value) {\r\n\t\t\tthis._bracketId = value;\r\n\t\t}\r\n\t}\r\n\r\n  constructor(\r\n  \tprivate _entryService: EntryService,\r\n  \tprivate _userService: UserService,\r\n  \tprivate _regionService: RegionService,\r\n  \t) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.loading = true;\r\n\t\t// Retrieve entries for players within bracket\r\n\t\tthis._entryService.getEntryStandings(this._bracketId).subscribe(data => {\r\n\t\t\tthis._standingsList = data;\r\n\t\t\t// Sort the standings by descending team_count (they're pre-sorted by last name descending)\r\n\t\t\tthis._standingsList.sort((a,b) => (a.team_count > b.team_count) ? -1 : ((b.team_count > a.team_count) ? 1 : 0));\r\n\t\t\tthis.loading = false;\r\n\t\t});\r\n\r\n\t\t// Retrieve list of regions to display in column titles\r\n\t\tthis._regionService.getRegionList().subscribe(data => {\r\n\t\t\tthis._regionList = data;\r\n\t\t})\r\n\t}// end ngOnInit\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RlYW0tZGV0YWlscy90ZWFtLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!--roster.component.html-->\\r\\n<h4>My Teams</h4>\\r\\n \\r\\n<div [class.loader] = \\\"loading\\\">\\r\\n<div class=\\\"table-responsive\\\" *ngIf=\\\"_entryList && _entryList.length\\\">\\r\\n\\t<div class = \\\"table table-borderless table-sm\\\" *ngFor = \\\"let entry of _entryList\\\" id=\\\"my-teams\\\">\\r\\n\\t\\t<thead>\\r\\n\\t\\t\\t<tr class=\\\"table-active\\\">\\r\\n\\t\\t\\t\\t<th scope=\\\"col\\\">Bracket</th>\\r\\n\\t\\t\\t\\t<th scope=\\\"col\\\">Region</th>\\r\\n\\t\\t\\t\\t<th scope=\\\"col\\\">Original Teams</th>\\r\\n\\t\\t\\t\\t<th scope=\\\"col\\\">Active Team(s)</th>\\r\\n\\t\\t\\t\\t<th scope=\\\"col\\\">Next Game</th>\\r\\n\\t\\t\\t</tr>\\r\\n\\t\\t</thead>\\r\\n\\t\\t<tbody *ngIf=\\\"_regionList\\\">\\r\\n\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t<td class=\\\"text-primary text-pointer\\\" (click)=\\\"sendToBracket(entry.tbracket_id)\\\"><strong>{{ entry.tbracket }}</strong></td>\\r\\n\\t\\t\\t\\t<td>{{ _regionList[0].name }}</td>\\r\\n\\t\\t\\t\\t<td>{{ entry.orig_team_a }}</td>\\r\\n\\t\\t\\t\\t<td>{{ entry.team_a || '**OUT**'}}</td>\\r\\n\\t\\t\\t\\t<td><a [routerLink]=\\\"['/brackets', entry.tbracket_id]\\\" [fragment]=\\\"_regionList[0]-1\\\">{{ entry.next_team_a }}</a></td>\\r\\n\\t\\t\\t</tr>\\r\\n\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t<td></td>\\r\\n\\t\\t\\t\\t<td>{{ _regionList[1].name }}</td>\\r\\n\\t\\t\\t\\t<td>{{ entry.orig_team_b }}</td>\\r\\n\\t\\t\\t\\t<td>{{ entry.team_b || '**OUT**'}}</td>\\r\\n\\t\\t\\t\\t<td><a [routerLink]=\\\"['/brackets', entry.tbracket_id]\\\" [fragment]=\\\"_regionList[1]-1\\\">{{ entry.next_team_b }}</a></td>\\r\\n\\t\\t\\t</tr>\\r\\n\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t<td></td>\\r\\n\\t\\t\\t\\t<td>{{ _regionList[2].name }}</td>\\r\\n\\t\\t\\t\\t<td>{{ entry.orig_team_c }}</td>\\r\\n\\t\\t\\t\\t<td>{{ entry.team_c || '**OUT**'}}</td>\\r\\n\\t\\t\\t\\t<td><a [routerLink]=\\\"['/brackets', entry.tbracket_id]\\\" [fragment]=\\\"_regionList[2]-1\\\">{{ entry.next_team_c }}</a></td>\\r\\n\\t\\t\\t</tr>\\r\\n\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t<td></td>\\r\\n\\t\\t\\t\\t<td>{{ _regionList[3].name }}</td>\\r\\n\\t\\t\\t\\t<td>{{ entry.orig_team_d }}</td>\\r\\n\\t\\t\\t\\t<td>{{ entry.team_d || '**OUT**'}}</td>\\r\\n\\t\\t\\t\\t<td><a [routerLink]=\\\"['/brackets', entry.tbracket_id]\\\" [fragment]=\\\"_regionList[3]-1\\\">{{ entry.next_team_d }}</a></td>\\r\\n\\t\\t\\t</tr>\\r\\n\\t\\t</tbody>\\r\\n\\t</div>\\r\\n</div>\\r\\n</div> \\r\\n\\r\\n<br>\\r\\n\\r\\n<!-- UNCOMMENT THIS PRE REGISTRATION PERIOD -->\\r\\n<!-- <div class=\\\"text-center\\\">\\r\\n\\t<br>\\r\\n\\t<h5 class=\\\"font-italic text-muted\\\">** Teams will be assigned by Thursday, March 18, 2021, at 10am CST **</h5>\\r\\n\\t<small>Check back then to see which brackets your entries were assigned (4 teams, 1 per Region, assigned to each entry)</small>\\r\\n</div> -->\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { IUserData, EntryData, GameData, RegionData, EntryMyTeamsData } from '../shared/interfaces';\r\nimport { EntryService } from '../core/entry.service';\r\nimport { GameService } from '../core/game.service';\r\nimport { RegionService } from '../core/region.service';\r\n\r\n@Component({\r\n  selector: 'app-team-details',\r\n  templateUrl: './team-details.component.html',\r\n  styleUrls: ['./team-details.component.css']\r\n})\r\nexport class TeamDetailsComponent implements OnInit {\r\n\r\n\t_player: IUserData;\r\n\t_entryList: EntryMyTeamsData[];\r\n\t_regionList: RegionData[];\r\n\tloading: boolean;\r\n\r\n\t@Input() get player(): IUserData {\r\n\t\treturn this._player;\r\n\t}\r\n\tset player(value: IUserData) {\r\n\t\tif (value) {\r\n\t\t\tthis._player = value;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(private _entryService: EntryService,\r\n\t\tprivate router: Router,\r\n\t\tprivate _gameService: GameService,\r\n\t\tprivate _regionService: RegionService) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.loading=true;\r\n\t\t//retrieve entries for user\r\n\t\t\r\n\t\t// this._entryService.getEntryDetailsListByPlayer(this._player.id).subscribe(data => {\r\n\t\t// \tthis._entryList = data;\r\n\r\n\t\tthis._entryService.getEntryDetailsListMyTeamsByPlayer(this._player.id).subscribe(data => {\r\n\t\t\tthis._entryList = data;\r\n\r\n\t\t\t// Retrieve list of regions to display in tabs\r\n\t\t\tthis._regionService.getRegionList().subscribe(data => {\r\n\t\t\t\tthis._regionList = data;\r\n\t\t\t\tthis.loading=false;\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t// Function to create url that to which user is sent when click on Bracket name\r\n\tsendToBracket(bracket) {\r\n\t\tthis.router.navigate(['/brackets', bracket])\r\n\t} // end sendToBracket()\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RlYW0tbmV4dHVwL3RlYW0tbmV4dHVwLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<a [routerLink]=\\\"['/brackets', _bracket_id]\\\" [fragment]=\\\"_region_id-1\\\">{{ _nextup_game }}</a>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MatchupData, GameData, IUserData, NewGameWithOwnerData, MatchupLastGameData } from '../shared/interfaces';\r\nimport { MatchupService } from '../core/matchup.service';\r\nimport { GameService } from '../core/game.service';\r\nimport { UserService } from '../core/user.service';\r\n\r\n@Component({\r\n  selector: 'app-team-nextup',\r\n  templateUrl: './team-nextup.component.html',\r\n  styleUrls: ['./team-nextup.component.css']\r\n})\r\nexport class TeamNextupComponent implements OnInit {\r\n\t@Input('orig_team') _orig_team_id: number;\r\n\t@Input('bracket') _bracket_id: number;\r\n\t@Input('team') _team_id: number;\r\n\t@Input('region') _region_id: number;\r\n\t\r\n\t_nextup_game: string;\r\n\t_lastGame: MatchupLastGameData;\r\n\r\n\tconstructor(\r\n\t  \tprivate router: Router,\r\n\t\tprivate _matchupService: MatchupService,\r\n\t\tprivate _userService: UserService) { }\r\n\r\n\tngOnInit() {\r\n\t\t// Get last matching game which will either be last game played or next game up\r\n\t\tthis._matchupService.getMatchupLastGame(this._bracket_id, this._orig_team_id).subscribe(matchups => {\r\n\t\t\tthis._lastGame = matchups[0];  \r\n\t\t\t\r\n\t\t\t//if owner's team is out\r\n\t\t\tif (this._team_id == null) { \r\n\r\n\t\t\t\t// determine which team the user owns and select the other team as having lost\r\n\t\t\t\tif (this._lastGame.team1_owner_id == this._userService.id) {\r\n\t\t\t\t\tthis._nextup_game = \" Lost to: \" + this._lastGame.team2 + \" (\" + this._lastGame.team2_owner + \") with \" + this._lastGame.team1;\r\n\t\t\t\t}\r\n\t\t\t\tif (this._lastGame.team2_owner_id == this._userService.id) {\r\n\t\t\t\t\tthis._nextup_game = \" Lost to: \" + this._lastGame.team1 + \" (\" + this._lastGame.team1_owner + \") with \" + this._lastGame.team2;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// append proper Round within which last game was lost\r\n\t\t\t\tif (this._lastGame.t_round <= 4) {\r\n\t\t\t\t\tthis._nextup_game += \" in Round \" + this._lastGame.t_round;\r\n\t\t\t\t}\r\n\t\t\t\telse if (this._lastGame.t_round == 5) {\r\n\t\t\t\t\tthis._nextup_game += \" in the Semi-Finals\";\r\n\t\t\t\t}\r\n\t\t\t\telse { this._nextup_game += \" in the Championship\"; }\r\n\r\n\t\t\t\t//if last game played is in Final Four round, update _region_id for proper route navigation purposes\r\n\t\t\t\tthis._region_id = this._lastGame.region_id;\r\n\t\t\t} //end if\r\n\r\n\t\t\t//if owner's team is still in it\r\n\t\t\telse { \r\n\r\n\t\t\t\t// append proper Round within which next game is being played\r\n\t\t\t\tif (this._lastGame.t_round <= 4) {\r\n\t\t\t\t\tthis._nextup_game = \"Round \" + this._lastGame.t_round;\r\n\t\t\t\t}\r\n\t\t\t\telse if (this._lastGame.t_round == 5) {\r\n\t\t\t\t\tthis._nextup_game = \"Semi-Final\";\r\n\t\t\t\t}\r\n\t\t\t\telse { this._nextup_game = \"Finals\"; }\r\n\r\n\r\n\t\t\t\t// determine proper spread based on whether Team1 or Team 2\r\n\t\t\t\tif (this._lastGame.team1_owner_id == this._userService.id && this._lastGame.team2 != null) {\r\n\t\t\t\t\tif (this._lastGame.spread != null)\r\n\t\t\t\t\t\tif (this._lastGame.spread > 0)\r\n\t\t\t\t\t\t\tthis._nextup_game += \" Favored by \" + this._lastGame.spread + \" 1/2\"\r\n\t\t\t\t\t\telse if (this._lastGame.spread < 0)\r\n\t\t\t\t\t\t\tthis._nextup_game += \" Underdog by \" + Math.abs(this._lastGame.spread) + \" 1/2\"\r\n\t\t\t\t\t\telse if (this._lastGame.spread == 0)\r\n\t\t\t\t\t\t\tthis._nextup_game += \" Pick'em\"\r\n\t\t\t\t\tthis._nextup_game += \" vs. \"+this._lastGame.team2+\" (\"+this._lastGame.team2_owner+\")\";\r\n\t\t\t\t} //end if\r\n\t\t\t\telse if (this._lastGame.team2_owner_id == this._userService.id && this._lastGame.team1 != null) {\r\n\t\t\t\t\tif (this._lastGame.spread != null)\r\n\t\t\t\t\t\tif (this._lastGame.spread < 0)\r\n\t\t\t\t\t\t\tthis._nextup_game += \" Favored by \" + Math.abs(this._lastGame.spread) + \" 1/2\"\r\n\t\t\t\t\t\telse if (this._lastGame.spread > 0)\r\n\t\t\t\t\t\t\tthis._nextup_game += \" Underdog by \" + this._lastGame.spread + \" 1/2\"\r\n\t\t\t\t\t\telse if (this._lastGame.spread == 0)\r\n\t\t\t\t\t\t\tthis._nextup_game += \" Pick'em\"\r\n\t\t\t\t\tthis._nextup_game += \" vs. \"+this._lastGame.team1+\" (\"+this._lastGame.team1_owner+\")\";\r\n\t\t\t\t}\r\n\t\t\t\t// Otherwise if no opponent yet, show vs. TBD\r\n\t\t\t\telse {this._nextup_game += \" vs. TBD\"}\r\n\r\n\t\t\t\t//if last game played is in Final Four round, update _region_id for proper route navigation purposes\r\n\t\t\t\tthis._region_id = this._lastGame.region_id; \r\n\r\n\t\t\t} //end else\r\n\t\t}) // end this._matchupService.getMatchupLastGame subscribe\r\n\t} //end ngOnInit\r\n} //end export class","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!--src/app/ui/header/footer.component.html-->\\r\\n\\r\\n<nav class=\\\"navbar navbar-dark bg-primary fixed-bottom footer\\\">\\r\\n  <div class=\\\"navbar-expand m-auto navbar-text footer\\\">\\r\\n  \\t<i class = \\\"fa fa-ban\\\"></i> Exit Zero Technologies 2018-2021\\r\\n  </div>\\r\\n</nav>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!--src/app/ui/header/header.component.html-->\\r\\n\\r\\n<!-- Navigation Menu for site -->\\r\\n<nav class=\\\"navbar center navbar-expand-md navbar-dark bg-primary\\\">\\r\\n\\t<div class=\\\"container-fluid\\\">\\r\\n\\t\\t<a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\">\\r\\n\\t\\t\\t<img src=\\\"../static/front-end/assets/spreadpool_white_no_background_48x114.png\\\" alt=\\\"Spreadpool\\\">\\r\\n\\t\\t</a>\\r\\n\\t\\t<div class=\\\"d-flex flex-row order-2 order-lg-3 align-middle\\\">\\r\\n\\t\\t\\t<a *ngIf=\\\"currentUser\\\" class=\\\"navbar-text\\\" [routerLink]=\\\"['/profile']\\\">Hi, {{ currentUser.first_name }}!</a>\\r\\n\\t        <form class=\\\"form-inline\\\">\\r\\n\\t\\t    \\t<button type=\\\"button\\\" class=\\\"btn btn-outline-light\\\" (click)=\\\"logout()\\\">Log Out</button>\\r\\n\\t\\t  \\t</form>\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"navbar-toggler\\\" data-toggle=\\\"collapse\\\"\\r\\n\\t\\t\\t\\tdata-target=\\\"#navbar\\\" aria-controls=\\\"navbar\\\" aria-expanded=\\\"false\\\"\\r\\n\\t\\t\\t\\taria-label=\\\"Toggle navigation\\\" (click)=\\\"isCollapsed = !isCollapsed\\\">\\r\\n\\t\\t\\t\\t<span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"collapse navbar-collapse order-3 order-lg-2\\\" id=\\\"navbar\\\" [collapse]=\\\"isCollapsed\\\">\\r\\n\\t        <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n\\t        \\t<li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\">\\r\\n\\t            \\t<a class=\\\"nav-link\\\" [routerLink]=\\\"['/home']\\\">Home</a>\\r\\n\\t            </li>\\r\\n\\t            <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\">\\r\\n\\t            \\t<a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">My Teams</a>\\r\\n\\t            </li>\\r\\n\\r\\n\\t\\t\\t\\t<li class=\\\"nav-item\\\" [class.active]=\\\"isActive(['/brackets'])\\\" *ngIf = \\\"_bracketToShow\\\">\\r\\n\\t            \\t<a *ngIf=\\\"_bracketToShow\\\" class=\\\"nav-link\\\" [routerLink]=\\\"['/brackets', _bracketToShow]\\\" [fragment]=\\\"_region_id\\\">Brackets</a>\\r\\n\\t            </li>\\r\\n\\t\\t\\t\\t<!-- ***CODE TO DROP-DOWN UPON HOVER OVER BRACKETS MENU ITEM***\\r\\n\\t            <li class=\\\"nav-item dropdown\\\">\\r\\n\\t            \\t<a *ngIf=\\\"_bracketToShow\\\" class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/brackets', _bracketToShow]\\\" id=\\\"navbarDropdownMenuLink\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">Brackets</a>\\r\\n\\t            \\t<ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdownMenuLink\\\">\\r\\n\\t            \\t\\t<li *ngFor = \\\"let tbracket of tbracketList\\\">\\r\\n\\t            \\t\\t\\t<a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/brackets', tbracket.id]\\\">\\r\\n\\t            \\t\\t\\t{{ tbracket.name }}</a>\\r\\n\\t            \\t\\t</li>\\r\\n\\t            \\t</ul>\\r\\n\\t            </li>\\r\\n\\t\\t\\t\\t -->\\r\\n\\t            <li class=\\\"nav-item dropdown\\\" dropdown *ngIf=\\\"isUserAdmin()\\\">\\r\\n\\t\\t\\t        <a class=\\\"nav-link dropdown-toggle\\\" dropdownToggle (click)=\\\"false\\\" \\r\\n\\t\\t\\t        href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n\\t\\t\\t          Admin\\r\\n\\t\\t\\t        </a>\\r\\n\\t\\t\\t        <div class=\\\"dropdown-menu\\\" *dropdownMenu aria-labelledby=\\\"navbarDropdown\\\">\\r\\n\\t\\t\\t          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/admin/c-brackets']\\\">Manage Brackets</a>\\r\\n\\t\\t\\t          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/admin/a-brackets', _bracketToShow]\\\">Assign Entries</a>\\r\\n\\t\\t\\t          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/admin/u-games']\\\">Update Games</a>\\r\\n\\t\\t\\t          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/admin/s-emails']\\\">Send Emails</a>\\r\\n\\t\\t\\t        </div>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t        </ul>\\r\\n\\t  \\t</div> <!--end navbar-collapse -->\\r\\n  \\t</div> <!--end container-fluid -->\\r\\n</nav>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { UserService } from '../../core/user.service';\r\nimport { EntryService } from '../../core/entry.service';\r\nimport { TBracketService } from '../../core/tbracket.service';\r\nimport { GameService } from '../../core/game.service';\r\nimport { EntryBracketData, TBracketData, IUserData, GameData } from '../../shared/interfaces';\r\n\r\nimport { Store } from 'redux';\r\nimport { AppStore } from '../../app.store';\r\nimport { AppState } from '../../app.state';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\tisCollapsed = true;\r\n\t_bracketToShow: number;\r\n\tcurrentUser : IUserData;\r\n\ttbracketList: TBracketData[];\r\n\t_mobile: boolean = false;\r\n\t_region_id: number;\r\n\r\n\tconstructor(\r\n\t\tprivate router: Router,\r\n\t\tprivate _userService: UserService,\r\n\t\tprivate _entryService: EntryService,\r\n\t\tprivate _tbracketService: TBracketService,\r\n\t\tprivate _gameService: GameService,\r\n\t\t@Inject(AppStore) private store: Store<AppState>\r\n\t\t) {\r\n\r\n\t\tstore.subscribe(() => this.readState());\r\n\t\tthis.readState(); \r\n\r\n\t\t}\r\n\r\n\tngOnInit() {\r\n\t\t// See if the tourney is at the Final Four and show Final Four tab if true\r\n\t\tthis._gameService.isFinalFour().subscribe(data => {\r\n\t\t\t// console.log(\"The Final Four is happening now is: \", data['happening']);\r\n\t\t\tif (data['happening']) {\r\n\t\t\t\tthis._region_id = 4;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._region_id = 0\r\n\t\t\t}\r\n\t\t\t// Attempted to use redux currentUser but doesn't render quick enough\r\n\t\t\t// Instead use _userService to get logged in user id, then tbracketService to get player's bracket id\r\n\t\t\tthis._tbracketService.getListWithPlayer(this._userService.id).subscribe(data => {\r\n\t\t\t\tif (data.length > 0) {\r\n\t\t\t\t\tthis._bracketToShow = data[0].id;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._bracketToShow = null;\r\n\t\t\t\t}\r\n\t\t\t\t// console.log(\"The bracketToShow is \", this._bracketToShow)\r\n\t\t\t\tthis.tbracketList = data;\r\n\t\t\t});\r\n\t\t})\r\n\t\t\r\n\t\t\r\n\t} //end ngOnInit()\r\n\r\n  \t// This function is used to keep Brackets nav bar option 'active' regardless of parameter\r\n\tisActive(instruction: any[]): boolean {\r\n\t\t// Set the second parameter to true if you want to require an exact match.\r\n\t\treturn this.router.isActive(this.router.createUrlTree(instruction), false);\r\n\t}\r\n\r\n\t// Invoke logout() method on userService and re-direct user to \"/logout/\"\r\n\tlogout() {\r\n\t\tthis._userService.logout();\r\n\t\tthis.router.navigate(['/logout']);\r\n\t}\r\n\r\n\t// Redux store methods\r\n\treadState() {\r\n\t\tconst state: AppState = this.store.getState() as AppState;\r\n\t\tthis.currentUser = state.currentUser;\r\n\t}\r\n\r\n\tisUserAdmin() {\r\n\t\tif (this.currentUser) {\r\n\t\t\treturn (this.currentUser.is_staff==1);\r\n\t\t}\r\n\t\telse return false;\r\n\t}\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2xheW91dC9sYXlvdXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-header></app-header>\\r\\n<div class=\\\"container\\\">\\r\\n\\t<ng-content></ng-content>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.css']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LayoutComponent } from './layout/layout.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\n\r\nimport { AppRoutingModule } from '../app-routing.module';\r\nimport { AppBootstrapModule } from '../app-bootstrap.module';\r\nimport { AngularFontAwesomeModule } from 'angular-font-awesome'\r\n\r\n@NgModule({\r\n  declarations: [LayoutComponent, HeaderComponent, FooterComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AppRoutingModule,\r\n    AppBootstrapModule,\r\n    AngularFontAwesomeModule,\r\n  ],\r\n  exports: [LayoutComponent]\r\n})\r\nexport class UiModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}