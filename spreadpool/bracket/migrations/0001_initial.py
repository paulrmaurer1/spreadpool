# Generated by Django 2.1.7 on 2019-03-17 00:11

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(blank=True, max_length=150, null=True)),
                ('num_entries', models.IntegerField(default=1, verbose_name='Number of Entries')),
                ('mult_entry_type', models.CharField(choices=[('D', 'Different Brackets'), ('S', 'Same Bracket')], default='D', max_length=1, verbose_name='(S)ame or (D)ifferent Brackets')),
                ('is_staff', models.IntegerField(default=0)),
                ('paid', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('e_name', models.CharField(default='', max_length=255)),
            ],
            options={
                'verbose_name_plural': 'entries',
                'db_table': 'entry',
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('t_round', models.IntegerField()),
                ('spread', models.IntegerField(null=True)),
                ('favorite', models.IntegerField(default=1)),
                ('team1_score', models.IntegerField(default=0)),
                ('team2_score', models.IntegerField(default=0)),
                ('parent_game1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p_game1', to='bracket.Game')),
                ('parent_game2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p_game2', to='bracket.Game')),
            ],
            options={
                'db_table': 'game',
            },
        ),
        migrations.CreateModel(
            name='Matchup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bracket.Game')),
            ],
            options={
                'db_table': 'matchup',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, unique=True)),
            ],
            options={
                'db_table': 'region',
            },
        ),
        migrations.CreateModel(
            name='Tbracket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, unique=True)),
                ('games', models.ManyToManyField(through='bracket.Matchup', to='bracket.Game')),
            ],
            options={
                'db_table': 'tbracket',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seed', models.IntegerField()),
                ('short_name', models.CharField(max_length=10)),
                ('long_name', models.CharField(max_length=255)),
                ('school', models.CharField(max_length=255)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bracket.Region')),
            ],
            options={
                'db_table': 'team',
            },
        ),
        migrations.AddField(
            model_name='matchup',
            name='tbracket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bracket.Tbracket'),
        ),
        migrations.AddField(
            model_name='matchup',
            name='team1_owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team1_owner', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='matchup',
            name='team2_owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team2_owner', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='matchup',
            name='winner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='winner', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='game',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bracket.Region'),
        ),
        migrations.AddField(
            model_name='game',
            name='team1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team1', to='bracket.Team'),
        ),
        migrations.AddField(
            model_name='game',
            name='team2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team2', to='bracket.Team'),
        ),
        migrations.AddField(
            model_name='entry',
            name='orig_team_a',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orig_team_a', to='bracket.Team'),
        ),
        migrations.AddField(
            model_name='entry',
            name='orig_team_b',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orig_team_b', to='bracket.Team'),
        ),
        migrations.AddField(
            model_name='entry',
            name='orig_team_c',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orig_team_c', to='bracket.Team'),
        ),
        migrations.AddField(
            model_name='entry',
            name='orig_team_d',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orig_team_d', to='bracket.Team'),
        ),
        migrations.AddField(
            model_name='entry',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='entry',
            name='tbracket',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bracket.Tbracket'),
        ),
        migrations.AddField(
            model_name='entry',
            name='team_a',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_a', to='bracket.Team'),
        ),
        migrations.AddField(
            model_name='entry',
            name='team_b',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_b', to='bracket.Team'),
        ),
        migrations.AddField(
            model_name='entry',
            name='team_c',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_c', to='bracket.Team'),
        ),
        migrations.AddField(
            model_name='entry',
            name='team_d',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_d', to='bracket.Team'),
        ),
    ]
